/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { LTap, LTapInterface } from "../../tokens/LTap";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_tapToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxLockedUntil",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockedUntil",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxLockedUntil",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockedUntil",
        type: "uint256",
      },
    ],
    name: "setLockedUntil",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610140346200052057601f6200196b38819003918201601f19168301916001600160401b038311848410176200052557808492604094855283398101031262000520578051906001600160a01b038216820362000520576020015160405162000068816200053b565b6004918282526304c5441560e41b91826020820152604051926200008c846200053b565b84845280602085015260405190620000a4826200053b565b858252602082015260405193620000bb856200053b565b60018552603160f81b6020860152600080546001600160a01b031916339081178255907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a38051906001600160401b0382116200050b57600554600181811c9116801562000500575b6020821014620004eb579081601f84931162000495575b50602090601f83116001146200040657600092620003fa575b50508160011b916000199060031b1c1916176005555b8051906001600160401b038211620003e557600654600181811c91168015620003da575b6020821014620003c5579081601f84931162000361575b50602090601f8311600114620002e757600092620002db575b50508160011b916000199060031b1c1916176006555b602081519101209160208151910120938260e052610100948086524660a05260405160208101917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f95868452604083015260608201524660808201523060a082015260a0815260c081019581871060018060401b03881117620002c65750856040525190206080523060c05261012092835260018060a01b031660018060a01b0319600954161760095580600a55600b556113f3928362000558843960805183611293015260a0518361135f015260c0518361125d015260e051836112e201525182611308015251816112bf0152f35b604190634e487b7160e01b6000525260246000fd5b015190503880620001c0565b600660009081526000805160206200194b8339815191529350601f198516905b8181106200034857509084600195949392106200032e575b505050811b01600655620001d6565b015160001960f88460031b161c191690553880806200031f565b9293602060018192878601518155019501930162000307565b60066000529091506000805160206200194b833981519152601f840160051c81019160208510620003ba575b90601f859493920160051c01905b818110620003aa5750620001a7565b600081558493506001016200039b565b90915081906200038d565b602287634e487b7160e01b6000525260246000fd5b90607f169062000190565b604186634e487b7160e01b6000525260246000fd5b01519050388062000156565b6005600090815293507f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db091905b601f198416851062000479576001945083601f198116106200045f575b505050811b016005556200016c565b015160001960f88460031b161c1916905538808062000450565b8181015183556020948501946001909301929091019062000433565b90915060056000526020600020601f840160051c810160208510620004e3575b90849392915b601f830160051c82018110620004d35750506200013d565b60008155859450600101620004bb565b5080620004b5565b602288634e487b7160e01b6000525260246000fd5b90607f169062000126565b604187634e487b7160e01b6000525260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b03821117620005255760405256fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde0314610ca357508163078dfbe714610b91578163095ea7b314610b6757816318160ddd14610b4957816323b872dd14610a7d5781632cb60e9214610a14578163313ce567146109f857816333911652146109d95781633644e515146109b557816339509351146109655781634e71e0c8146108b257816370a082311461087a5781637ecebe00146108425781638da5cb5b1461081a57816395d89b4114610735578163a457c2d71461068d578163a9059cbb1461065c578163b6b55f2514610553578163be040fb0146103a1578163ce0617ec14610382578163d505accf1461019557508063dd62ed3e1461014d5763e30c39781461012257600080fd5b3461014957816003193601126101495760015490516001600160a01b039091168152602090f35b5080fd5b50346101495780600319360112610149578060209261016a610d89565b610172610da4565b6001600160a01b0391821683526003865283832091168252845220549051908152f35b839150346101495760e0366003190112610149576101b1610d89565b6101b9610da4565b90604435926064356084359060ff8216820361037e5780421161033b5760018060a01b03908185169283895260076020528989208054906001820190558a519260208401917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98352868d860152858a1660608601528a608086015260a085015260c084015260c0835260e083019267ffffffffffffffff9381811085821117610328578c525190209061026a61125a565b928b5192602084019461190160f01b8652602285015260428401526042835260808301908382109082111761031557916102bd93916102b5938d5260c4359260a435925190206111d5565b9190916110c0565b16036102d257506102cf939450610fbe565b80f35b606490602087519162461bcd60e51b8352820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152fd5b634e487b7160e01b8b526041875260248bfd5b634e487b7160e01b8c526041885260248cfd5b875162461bcd60e51b8152602081850152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606490fd5b8680fd5b505034610149578160031936011261014957602090600a549051908152f35b90503461054f578260031936011261054f57600a5442111561051e57338352602091600283528084205433156104d2573385526002845281852054818110610484579080859233885260028452038387205580845403845585835182815260008051602061139e833981519152843392a3604460018060a01b036009541694878551968794859363a9059cbb60e01b8552339085015260248401525af190811561047b575061044e578280f35b8161046d92903d10610474575b6104658183610e05565b810190611385565b5038808280f35b503d61045b565b513d85823e3d90fd5b825162461bcd60e51b8152808501869052602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b5091608492519162461bcd60e51b8352820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152fd5b6020606492519162461bcd60e51b8352820152600c60248201526b14dd1a5b1b081b1bd8dad95960a21b6044820152fd5b8280fd5b9190503461054f57602090816003193601126106585760095481516323b872dd60e01b8152338186015230602482015284356044820181905294918490829060649082908a906001600160a01b03165af1801561064e57610631575b5033156105f0579160008051602061139e83398151915291836105d486889654610e3d565b905533845260028252808420858154019055519384523393a380f35b82606492519162461bcd60e51b8352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b61064790843d8611610474576104658183610e05565b50386105af565b83513d88823e3d90fd5b8380fd5b50503461014957806003193601126101495760209061068661067c610d89565b6024359033610e60565b5160018152f35b905082346107325782600319360112610732576106a8610d89565b918360243592338152600360205281812060018060a01b03861682526020522054908282106106e1576020856106868585038733610fbe565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b9190503461054f578260031936011261054f57805191836006549060019082821c928281168015610810575b60209586861082146107fd57508488529081156107db57506001146107a0575b61079c8686610792828b0383610e05565b5191829182610d40565b0390f35b929550600683528583205b8284106107c8575050508261079c94610792928201019438610781565b80548685018801529286019281016107ab565b60ff191687860152505050151560051b83010192506107928261079c38610781565b634e487b7160e01b845260229052602483fd5b93607f1693610761565b505034610149578160031936011261014957905490516001600160a01b039091168152602090f35b5050346101495760203660031901126101495760209181906001600160a01b0361086a610d89565b1681526007845220549051908152f35b5050346101495760203660031901126101495760209181906001600160a01b036108a2610d89565b1681526002845220549051908152f35b9190503461054f578260031936011261054f576001546001600160a01b039290918383169190338390036109225750508084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a36001600160a01b03199283161783551660015580f35b906020606492519162461bcd60e51b8352820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b5050346101495780600319360112610149576106866020926109ae610988610d89565b338352600386528483206001600160a01b03821684528652918490205460243590610e3d565b9033610fbe565b5050346101495781600319360112610149576020906109d261125a565b9051908152f35b505034610149578160031936011261014957602090600b549051908152f35b5050346101495781600319360112610149576020905160128152f35b90503461054f57602036600319011261054f57803591610a3e60018060a01b038554163314610dba565b600b548311610a4f575050600a5580f35b906020606492519162461bcd60e51b83528201526008602482015267546f6f206c61746560c01b6044820152fd5b8391503461014957606036600319011261014957610a99610d89565b610aa1610da4565b6001600160a01b03821684526003602090815285852033865290529284902054604435939260018201610add575b602086610686878787610e60565b848210610b065750918391610afb6020969561068695033383610fbe565b919394819350610acf565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b90503461054f578260031936011261054f5760209250549051908152f35b505034610149578060031936011261014957602090610686610b87610d89565b6024359033610fbe565b9190503461054f57606036600319011261054f57610bad610d89565b91602435918215158303610c9f57604435928315158403610c9b5760018060a01b03948591610be0838954163314610dba565b15610c82571692831590811591610c7a575b5015610c3f5750508083549283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a36001600160a01b031991821617825560018054909116905580f35b906020606492519162461bcd60e51b835282015260156024820152744f776e61626c653a207a65726f206164647265737360581b6044820152fd5b905038610bf2565b93505050501660018060a01b0319600154161760015580f35b8580fd5b8480fd5b92915034610658578360031936011261065857600554600181811c9186908281168015610d36575b60209586861082146107fd57508488529081156107db5750600114610cfb5761079c8686610792828b0383610e05565b929550600583528583205b828410610d23575050508261079c94610792928201019438610781565b8054868501880152928601928101610d06565b93607f1693610ccb565b6020808252825181830181905290939260005b828110610d7557505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610d53565b600435906001600160a01b0382168203610d9f57565b600080fd5b602435906001600160a01b0382168203610d9f57565b15610dc157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff821117610e2757604052565b634e487b7160e01b600052604160045260246000fd5b91908201809211610e4a57565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03908116918215610f6b5716918215610f1a5760008281526002602052604081205491808310610ec6576040828260008051602061139e83398151915295876020965260028652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0390811691821561106f571691821561101f5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260038252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b60058110156111bf57806110d15750565b600181036111195760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606490fd5b600281036111665760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b60031461116f57565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b9291906fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831161124e5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa156112415781516001600160a01b0381161561123b579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316148061135c575b156112b5577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f000000000000000000000000000000000000000000000000000000000000000082527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff821117610e275760405251902090565b507f0000000000000000000000000000000000000000000000000000000000000000461461128c565b90816020910312610d9f57518015158103610d9f579056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122021c9b8097c4b71f66d218c76dfc64b4d6771450df97fbfb20ab3e3a355d61bcc64736f6c63430008120033f652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f";

type LTapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LTapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LTap__factory extends ContractFactory {
  constructor(...args: LTapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "LTap";
  }

  override deploy(
    _tapToken: PromiseOrValue<string>,
    _maxLockedUntil: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LTap> {
    return super.deploy(
      _tapToken,
      _maxLockedUntil,
      overrides || {}
    ) as Promise<LTap>;
  }
  override getDeployTransaction(
    _tapToken: PromiseOrValue<string>,
    _maxLockedUntil: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tapToken,
      _maxLockedUntil,
      overrides || {}
    );
  }
  override attach(address: string): LTap {
    return super.attach(address) as LTap;
  }
  override connect(signer: Signer): LTap__factory {
    return super.connect(signer) as LTap__factory;
  }
  static readonly contractName: "LTap";

  public readonly contractName: "LTap";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LTapInterface {
    return new utils.Interface(_abi) as LTapInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): LTap {
    return new Contract(address, _abi, signerOrProvider) as LTap;
  }
}
