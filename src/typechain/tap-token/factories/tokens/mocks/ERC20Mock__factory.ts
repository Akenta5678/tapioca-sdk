/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20Mock,
  ERC20MockInterface,
} from "../../../tokens/mocks/ERC20Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_initialAmount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINT_WINDOW",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_val",
        type: "uint256",
      },
    ],
    name: "freeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mintedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newVal",
        type: "uint256",
      },
    ],
    name: "updateMintLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060409080825234620004125762001459803803809162000022828562000417565b833981019060a081830312620004125780516001600160401b0390818111620004125783620000539184016200043b565b60209384840151908382116200041257620000709185016200043b565b93858401519160608501519460ff8616809603620004125760800151936001600160a01b038516850362000412574660a0528751838101907f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692188252468a820152306060820152606081526080810181811084821117620003fc578a525190206080528151818111620003fc576004978854916001948584811c94168015620003f1575b87851014620002f2578190601f948581116200039b575b508790858311600114620003335760009262000327575b5050600019600383901b1c191690851b1789555b8051928311620003125760059485548581811c9116801562000307575b82821014620002f257838111620002a9575b50809284116001146200023e575092829391839260009462000232575b50501b916000199060031b1c19161790555b60035560065492604d83116200021d5782600a0a906103e891808302928304036200021d57506008908155610100600160a81b0391901b166001600160a81b031992909216171760065551610fa69081620004b3823960805181610e31015260a05181610e0a0152f35b601190634e487b7160e01b6000525260246000fd5b015192503880620001a1565b919083601f1981168760005284600020946000905b888383106200028e575050501062000274575b505050811b019055620001b3565b015160001960f88460031b161c1916905538808062000266565b85870151885590960195948501948793509081019062000253565b866000528160002084808701891c820192848810620002e8575b01881c019086905b828110620002db57505062000184565b60008155018690620002cb565b92508192620002c3565b60228b634e487b7160e01b6000525260246000fd5b90607f169062000172565b604189634e487b7160e01b6000525260246000fd5b01519050388062000141565b90879350601f198316918d600052896000209260005b8b8282106200038457505084116200036a575b505050811b01895562000155565b015160001960f88460031b161c191690553880806200035c565b8385015186558b9790950194938401930162000349565b9091508b600052876000208580850160051c8201928a8610620003e7575b918991869594930160051c01915b828110620003d75750506200012a565b60008155859450899101620003c7565b92508192620003b9565b93607f169362000113565b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b03821190821017620003fc57604052565b919080601f8401121562000412578251906001600160401b038211620003fc576040519160209162000477601f8301601f191684018562000417565b818452828287010111620004125760005b8181106200049e57508260009394955001015290565b85810183015184820184015282016200048856fe608060408181526004908136101561001657600080fd5b600092833560e01c90816306fdde0314610b9357508063095ea7b314610b2157806318160ddd14610b0257806321442ec914610acb57806322ae81af14610aad57806323b872dd146108d9578063313ce567146108b75780633644e51514610893578063449a52f81461081357806370a08231146107dd5780637c928fe9146106e95780637ecebe00146106b25780638da5cb5b1461068757806395d89b4114610586578063996517cf14610567578063a9059cbb1461048d578063d505accf146101b7578063dd62ed3e1461016a5763e01d55c5146100f557600080fd5b34610166576020366003190112610166576001600160a01b0360065460081c16330361012357503560085580f35b906020606492519162461bcd60e51b8352820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152fd5b8280fd5b8382346101b357806003193601126101b35780602092610188610d0e565b610190610d29565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b5090346101665760e0366003190112610166576101d2610d0e565b906101db610d29565b9260443590606435926084359460ff8616809603610489576001600160a01b0380911695861561044657854210156104035786895260209560028752848a20988954996000198b146103f05760018b01905585519184898401927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c984528b89860152169a8b606085015288608085015260a084015260c083015260c0825260e082019167ffffffffffffffff91818410838511176103dd5783885281519020916101208201908111848210176103dd579260809261031f60608f968d9895610100918d526002865201937f190100000000000000000000000000000000000000000000000000000000000085526102f0610e05565b8c519485926103078c850198899251928391610cbf565b8301918b8301528d820152038b810184520182610c87565b5190209087519182528482015260a4358782015260c435606082015282805260015afa156103d3578590885116036103925750907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259291848752600183528087208688528352818188205551908152a380f35b83606492519162461bcd60e51b8352820152601860248201527f45524332303a20496e76616c6964205369676e617475726500000000000000006044820152fd5b82513d89823e3d90fd5b60248d604189634e487b7160e01b835252fd5b60248c601188634e487b7160e01b835252fd5b606483602086519162461bcd60e51b8352820152600e60248201527f45524332303a20457870697265640000000000000000000000000000000000006044820152fd5b606483602086519162461bcd60e51b8352820152601860248201527f45524332303a204f776e65722063616e6e6f74206265203000000000000000006044820152fd5b8780fd5b8382346101b357806003193601126101b3576020916001600160a01b036104b2610d0e565b8360243593841580159061055c575b6104f9575b505192835216907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a35160018152f35b3381528087528181205461050f86821015610d3f565b8484169086823303610524575b5050506104c6565b61053891610533841515610d8a565b610dd5565b33835282895283832055815220610550848254610df8565b9055838680808661051c565b5083831633146104c1565b8382346101b357816003193601126101b3576020906008549051908152f35b5034610166578260031936011261016657805191836005549060019082821c92828116801561067d575b602095868610821461066a575084885290811561064857506001146105ef575b6105eb86866105e1828b0383610c87565b5191829182610ce2565b0390f35b929550600583527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b82841061063557505050826105eb946105e19282010194386105d0565b8054868501880152928601928101610618565b60ff191687860152505050151560051b83010192506105e1826105eb386105d0565b836022602492634e487b7160e01b835252fd5b93607f16936105b0565b8382346101b357816003193601126101b3576020906001600160a01b0360065460081c169051908152f35b8382346101b35760203660031901126101b357806020926001600160a01b036106d9610d0e565b1681526002845220549051908152f35b509190346101b35760203660031901126101b357803590600854821161079a57338352600760205283832054620151808101809111610787574210610744575061074191923384526007602052429084205533610ec4565b80f35b606490602085519162461bcd60e51b8352820152601460248201527f45524332304d6f636b3a20746f6f206561726c790000000000000000000000006044820152fd5b602484601184634e487b7160e01b835252fd5b606490602085519162461bcd60e51b8352820152601960248201527f45524332304d6f636b3a20616d6f756e7420746f6f20626967000000000000006044820152fd5b8382346101b35760203660031901126101b357806020926001600160a01b03610804610d0e565b16815280845220549051908152f35b50903461016657816003193601126101665761082d610d0e565b916001600160a01b0360065460081c163303610850578361074160243585610ec4565b906020606492519162461bcd60e51b8352820152601560248201527f45524332304d6f636b3a206f6e6c79206f776e657200000000000000000000006044820152fd5b8382346101b357816003193601126101b3576020906108b0610e05565b9051908152f35b8382346101b357816003193601126101b35760209060ff600654169051908152f35b508234610aaa576060366003190112610aaa576108f4610d0e565b906108fd610d29565b604435918261094a575b5060208095507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9185519384526001600160a01b03809116941692a35160018152f35b6001600160a01b039586851696878352602090838252878420549061097187831015610d3f565b851692838a03610985575b50505050610907565b89855260018352888520338652835288852054906000198203610a01575b50509282602099828a946109e08a8e996105337fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9c9a1515610d8a565b92825252838320558152206109f6858254610df8565b90559187808061097c565b878210610a68575092602099858a946109e08a8e9996610a43827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9d9b610dd5565b86865260018552898620338752855289862055965050509450955099819496506109a3565b606490848b519162461bcd60e51b8352820152601860248201527f45524332303a20616c6c6f77616e636520746f6f206c6f7700000000000000006044820152fd5b80fd5b8382346101b357816003193601126101b35760209051620151808152f35b8382346101b35760203660031901126101b357806020926001600160a01b03610af2610d0e565b1681526007845220549051908152f35b8382346101b357816003193601126101b3576020906003549051908152f35b8382346101b357806003193601126101b35760209181610b3f610d0e565b91602435918291338152600187526001600160a01b038282209516948582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b9293905034610aaa5780600319360112610aaa57809380549160019083821c92828516948515610c7d575b6020958686108114610c6a57858952908115610c465750600114610bee575b6105eb87876105e1828c0383610c87565b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610c3357505050826105eb946105e192820101943880610bdd565b8054868501880152928601928101610c15565b60ff19168887015250505050151560051b83010192506105e1826105eb3880610bdd565b602484602285634e487b7160e01b835252fd5b93607f1693610bbe565b90601f8019910116810190811067ffffffffffffffff821117610ca957604052565b634e487b7160e01b600052604160045260246000fd5b60005b838110610cd25750506000910152565b8181015183820152602001610cc2565b60409160208252610d028151809281602086015260208686019101610cbf565b601f01601f1916010190565b600435906001600160a01b0382168203610d2457565b600080fd5b602435906001600160a01b0382168203610d2457565b15610d4657565b606460405162461bcd60e51b815260206004820152601660248201527f45524332303a2062616c616e636520746f6f206c6f77000000000000000000006044820152fd5b15610d9157565b606460405162461bcd60e51b815260206004820152601660248201527f45524332303a206e6f207a65726f2061646472657373000000000000000000006044820152fd5b91908203918211610de257565b634e487b7160e01b600052601160045260246000fd5b91908201809211610de257565b6000467f000000000000000000000000000000000000000000000000000000000000000003610e5357507f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101917f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218835246604083015230606083015260608252608082019082821067ffffffffffffffff831117610eb0575060405251902090565b80634e487b7160e01b602492526041600452fd5b600354610ed18382610df8565b908110610f2c5760206001600160a01b036000937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93600355169384845283825260408420610f21828254610df8565b9055604051908152a3565b606460405162461bcd60e51b815260206004820152600d60248201527f4d696e74206f766572666c6f77000000000000000000000000000000000000006044820152fdfea2646970667358221220613bc5a36f09be98e386e9e87122fbd9746396ac3d1a0b35b28946a34c7dc09464736f6c63430008120033";

type ERC20MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Mock__factory extends ContractFactory {
  constructor(...args: ERC20MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _initialAmount: PromiseOrValue<BigNumberish>,
    _decimals: PromiseOrValue<BigNumberish>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Mock> {
    return super.deploy(
      _name,
      _symbol,
      _initialAmount,
      _decimals,
      _owner,
      overrides || {}
    ) as Promise<ERC20Mock>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _initialAmount: PromiseOrValue<BigNumberish>,
    _decimals: PromiseOrValue<BigNumberish>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _initialAmount,
      _decimals,
      _owner,
      overrides || {}
    );
  }
  override attach(address: string): ERC20Mock {
    return super.attach(address) as ERC20Mock;
  }
  override connect(signer: Signer): ERC20Mock__factory {
    return super.connect(signer) as ERC20Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20MockInterface {
    return new utils.Interface(_abi) as ERC20MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC20Mock;
  }
}
