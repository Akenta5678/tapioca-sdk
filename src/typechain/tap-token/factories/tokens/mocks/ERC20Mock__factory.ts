/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20Mock,
  ERC20MockInterface,
} from "../../../tokens/mocks/ERC20Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_initialAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_val",
        type: "uint256",
      },
    ],
    name: "freeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0604081815234620003ab57620012968038038091620000218286620003b0565b84398201608083820312620003ab5782516001600160401b039390848111620003ab578262000052918301620003d4565b6020928383015190868211620003ab576200006f918401620003d4565b92606085840151930151934660a0528551828101907f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692188252468882015230606082015260608152608081018181108a821117620002c25788525190206080523360c052825191878311620002c25760058054936001958686811c96168015620003a0575b84871014620002a1578190601f968781116200034c575b508490878311600114620002e457600092620002d8575b5050600019600383901b1c191690861b1781555b8251988911620002c257600654908582811c92168015620002b7575b83831014620002a15784821162000257575b505080928811600114620001e95750958092819260ff9798600094620001dd575b50501b916000199060031b1c1916176006555b6003551660ff19600454161760045551610e4a90816200044c823960805181610cd5015260a05181610cae015260c0518181816105ec01528181610667015261074c0152f35b01519250388062000184565b909691601f19831697600660005282600020926000905b8a82106200023f5750508360ff98991062000225575b505050811b0160065562000197565b015160001960f88460031b161c1916905538808062000216565b80878596829496860151815501950193019062000200565b6006600052826000209085808c01821c830193858d1062000297575b01901c019085905b8281106200028a575062000163565b600081550185906200027b565b9350829362000273565b634e487b7160e01b600052602260045260246000fd5b91607f169162000151565b634e487b7160e01b600052604160045260246000fd5b01519050388062000121565b90889350601f1983169185600052866000209260005b888282106200033557505084116200031b575b505050811b01815562000135565b015160001960f88460031b161c191690553880806200030d565b8385015186558c97909501949384019301620002fa565b909150836000528460002087808501861c82019287861062000396575b918a918695949301871c01915b828110620003865750506200010a565b600081558594508a910162000376565b9250819262000369565b95607f1695620000f3565b600080fd5b601f909101601f19168101906001600160401b03821190821017620002c257604052565b919080601f84011215620003ab578251906001600160401b038211620002c2576040519160209162000410601f8301601f1916840185620003b0565b818452828287010111620003ab5760005b8181106200043757508260009394955001015290565b85810183015184820184015282016200042156fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde0314610a6c57508163095ea7b3146109fa57816318160ddd146109db57816323b872dd1461080a578163313ce567146107e65781633644e515146107c2578163449a52f81461072757816370a08231146106f15781637c928fe9146106475781637ecebe00146106105781638da5cb5b146105cc57816395d89b41146104c9578163a9059cbb146103ef578163d505accf14610115575063dd62ed3e146100ca57600080fd5b34610111578060031936011261011157806020926100e6610bb2565b6100ee610bcd565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b9050346103eb5760e03660031901126103eb57610130610bb2565b90610139610bcd565b9260443590606435926084359460ff86168096036103e7576001600160a01b038091169586156103a457854210156103615786895260209560028752848a20988954996000198b1461034e5760018b01905585519184898401927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c984528b89860152169a8b606085015288608085015260a084015260c083015260c0825260e082019167ffffffffffffffff918184108385111761033b57838852815190209161012082019081118482101761033b579260809261027d60608f968d9895610100918d526002865201937f1901000000000000000000000000000000000000000000000000000000000000855261024e610ca9565b8c519485926102658c850198899251928391610b63565b8301918b8301528d820152038b810184520182610b2b565b5190209087519182528482015260a4358782015260c435606082015282805260015afa15610331578590885116036102f05750907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259291848752600183528087208688528352818188205551908152a380f35b83606492519162461bcd60e51b8352820152601860248201527f45524332303a20496e76616c6964205369676e617475726500000000000000006044820152fd5b82513d89823e3d90fd5b60248d604189634e487b7160e01b835252fd5b60248c601188634e487b7160e01b835252fd5b606483602086519162461bcd60e51b8352820152600e60248201527f45524332303a20457870697265640000000000000000000000000000000000006044820152fd5b606483602086519162461bcd60e51b8352820152601860248201527f45524332303a204f776e65722063616e6e6f74206265203000000000000000006044820152fd5b8780fd5b8280fd5b5050346101115780600319360112610111576020916001600160a01b03610414610bb2565b836024359384158015906104be575b61045b575b505192835216907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a35160018152f35b3381528087528181205461047186821015610be3565b8484169086823303610486575b505050610428565b61049a91610495841515610c2e565b610c79565b338352828952838320558152206104b2848254610c9c565b9055833880808661047e565b508383163314610423565b919050346103eb57826003193601126103eb57805191836006549060019082821c9282811680156105c2575b60209586861082146105af575084885290811561058d5750600114610534575b6105308686610526828b0383610b2b565b5191829182610b86565b0390f35b929550600683527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b82841061057a575050508261053094610526928201019438610515565b805486850188015292860192810161055d565b60ff191687860152505050151560051b83010192506105268261053038610515565b836022602492634e487b7160e01b835252fd5b93607f16936104f5565b505034610111578160031936011261011157602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b50503461011157602036600319011261011157806020926001600160a01b03610637610bb2565b1681526002845220549051908152f35b9050346103eb5760203660031901126103eb578035916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016330361069c575b836106998433610d68565b80f35b6a52b7d2dcc80cd2e4000000831061068e57906020606492519162461bcd60e51b8352820152601360248201527f45524332304d6f636b3a20746f6f206d756368000000000000000000000000006044820152fd5b50503461011157602036600319011261011157806020926001600160a01b03610718610bb2565b16815280845220549051908152f35b9050346103eb57816003193601126103eb57610741610bb2565b916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016330361077f578361069960243585610d68565b906020606492519162461bcd60e51b8352820152601560248201527f45524332304d6f636b3a206f6e6c79206f776e657200000000000000000000006044820152fd5b5050346101115781600319360112610111576020906107df610ca9565b9051908152f35b8284346108075780600319360112610807575060ff60209254169051908152f35b80fd5b82843461080757606036600319011261080757610825610bb2565b9061082e610bcd565b604435918261087b575b5060208095507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9185519384526001600160a01b03809116941692a35160018152f35b6001600160a01b03958685169687835260209083825287842054906108a287831015610be3565b851692838a036108b6575b50505050610838565b89855260018352888520338652835288852054906000198203610932575b50509282602099828a946109118a8e996104957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9c9a1515610c2e565b9282525283832055815220610927858254610c9c565b9055918780806108ad565b878210610999575092602099858a946109118a8e9996610974827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9d9b610c79565b86865260018552898620338752855289862055965050509450955099819496506108d4565b606490848b519162461bcd60e51b8352820152601860248201527f45524332303a20616c6c6f77616e636520746f6f206c6f7700000000000000006044820152fd5b5050346101115781600319360112610111576020906003549051908152f35b50503461011157806003193601126101115760209181610a18610bb2565b91602435918291338152600187526001600160a01b038282209516948582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b92915034610b275783600319360112610b2757600554600181811c9186908281168015610b1d575b60209586861082146105af575084885290811561058d5750600114610ac4576105308686610526828b0383610b2b565b929550600583527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b828410610b0a575050508261053094610526928201019438610515565b8054868501880152928601928101610aed565b93607f1693610a94565b8380fd5b90601f8019910116810190811067ffffffffffffffff821117610b4d57604052565b634e487b7160e01b600052604160045260246000fd5b60005b838110610b765750506000910152565b8181015183820152602001610b66565b60409160208252610ba68151809281602086015260208686019101610b63565b601f01601f1916010190565b600435906001600160a01b0382168203610bc857565b600080fd5b602435906001600160a01b0382168203610bc857565b15610bea57565b606460405162461bcd60e51b815260206004820152601660248201527f45524332303a2062616c616e636520746f6f206c6f77000000000000000000006044820152fd5b15610c3557565b606460405162461bcd60e51b815260206004820152601660248201527f45524332303a206e6f207a65726f2061646472657373000000000000000000006044820152fd5b91908203918211610c8657565b634e487b7160e01b600052601160045260246000fd5b91908201809211610c8657565b6000467f000000000000000000000000000000000000000000000000000000000000000003610cf757507f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101917f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218835246604083015230606083015260608252608082019082821067ffffffffffffffff831117610d54575060405251902090565b80634e487b7160e01b602492526041600452fd5b600354610d758382610c9c565b908110610dd05760206001600160a01b036000937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93600355169384845283825260408420610dc5828254610c9c565b9055604051908152a3565b606460405162461bcd60e51b815260206004820152600d60248201527f4d696e74206f766572666c6f77000000000000000000000000000000000000006044820152fdfea2646970667358221220420c37297de6328964e1946339fb0707e6e58d27b5bfee549d2ca6a3d04ae20764736f6c63430008120033";

type ERC20MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Mock__factory extends ContractFactory {
  constructor(...args: ERC20MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC20Mock";
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _initialAmount: PromiseOrValue<BigNumberish>,
    _decimals: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Mock> {
    return super.deploy(
      _name,
      _symbol,
      _initialAmount,
      _decimals,
      overrides || {}
    ) as Promise<ERC20Mock>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _initialAmount: PromiseOrValue<BigNumberish>,
    _decimals: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _initialAmount,
      _decimals,
      overrides || {}
    );
  }
  override attach(address: string): ERC20Mock {
    return super.attach(address) as ERC20Mock;
  }
  override connect(signer: Signer): ERC20Mock__factory {
    return super.connect(signer) as ERC20Mock__factory;
  }
  static readonly contractName: "ERC20Mock";

  public readonly contractName: "ERC20Mock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20MockInterface {
    return new utils.Interface(_abi) as ERC20MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC20Mock;
  }
}
