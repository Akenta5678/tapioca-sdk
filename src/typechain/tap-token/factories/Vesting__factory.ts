/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Vesting, VestingInterface } from "../Vesting";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cliff",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceTooLow",
    type: "error",
  },
  {
    inputs: [],
    name: "Initialized",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTokens",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnough",
    type: "error",
  },
  {
    inputs: [],
    name: "NotStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToClaim",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserRegistered",
    type: "event",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "claimable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cliff",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_seededAmount",
        type: "uint256",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "registerUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seeded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestClaimTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "revoked",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "vested",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vested",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461010457601f610d9138819003918201601f19168301916001600160401b038311848410176101095780849260609460405283398101031261010457805160208201516040909201516001600160a01b03811691908290036101045760018060a01b0319600093818554169260405133877f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a360016002558660075582156100c25750600555600655331617179055604051610c7190816101208239f35b62461bcd60e51b815260206004820152601360248201527f56657374696e673a206e6f2076657374696e67000000000000000000000000006044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c908163078dfbe7146108d55781630fb5a6b4146108b657816313d033c014610897578163334041a614610878578163399ae72414610757578163402914f5146107315781634e71d92d1461048e5781634e71e0c8146103db5781637102b728146103a15781638da5cb5b14610379578163a87430ba1461031a578163af38d757146102ee578163be9a6555146102d0578163d54ad2a1146102b1578163e30c397814610288578163fa0b5e551461013a57508063fc0c546a146101125763fea5657c146100e957600080fd5b3461010e578160031936011261010e57602090610107600754610bc2565b9051908152f35b5080fd5b503461010e578160031936011261010e5760035490516001600160a01b039091168152602090f35b919050346102845780600319360112610284576101556109df565b835460243592916001600160a01b039161017290831633146109fa565b845461027457169283156102665782156102585783855260086020528185205461024a57815190608082019082821067ffffffffffffffff8311176102375750917fe29d35093005f4d575e1003753426b57a7f64378ba73332eef9c6ccc2b8decd69391602093825260038482019183810160608201938683528a81528a85528a8252898b5260088852858b2092518355516001830155516002820155019051151560ff8019835416911617905561022c82600954610aa9565b60095551908152a280f35b634e487b7160e01b875260419052602486fd5b9051630ea075bf60e21b8152fd5b90516332457ad960e21b8152fd5b905163d23f952160e01b8152fd5b82516302ed543d60e51b81528590fd5b8280fd5b50503461010e578160031936011261010e5760015490516001600160a01b039091168152602090f35b50503461010e578160031936011261010e57602090600a549051908152f35b90503461028457826003193601126102845760209250549051908152f35b50503461010e578160031936011261010e57602090610107610311600754610bc2565b600a5490610a45565b50503461010e57602036600319011261010e5760809181906001600160a01b036103426109df565b1681526008602052209081549160018101549160ff6003600284015493015416928151948552602085015283015215156060820152f35b50503461010e578160031936011261010e57905490516001600160a01b039091168152602090f35b50503461010e57602036600319011261010e576020916101079082906001600160a01b036103cd6109df565b168152600885522054610bc2565b919050346102845782600319360112610284576001546001600160a01b0392909183831691903383900361044b5750508084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a36001600160a01b03199283161783551660015580f35b906020606492519162461bcd60e51b8352820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b8391503461010e578160031936011261010e57600290818054146106ee5781805580541580156106e4575b6106d6576104c633610a68565b9081156106c8576104d982600a54610aa9565b600a55338452602090600882526001868620016104f7848254610aa9565b9055338552600882524284878720015560018060a01b036003541686518381019163a9059cbb60e01b835233602483015285604483015260448252608082019267ffffffffffffffff92808510848611176106b55760c08101858110858211176106a2578b528685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460a082015251899182919082855af1903d15610693573d92831161068057906105c99392918a51926105bc88601f19601f8401160185610ab6565b83523d8a8885013e610aee565b805180610605575b5050507fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a9060019495519283523392a25580f35b8184918101031261067c5782015180159081150361067c576106285780806105d1565b60849186519162461bcd60e51b8352820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b8580fd5b634e487b7160e01b895260418552602489fd5b906105c9939250606091610aee565b634e487b7160e01b8b526041875260248bfd5b634e487b7160e01b8a526041865260248afd5b84516312d37ee560e31b8152fd5b8351636f312cbd60e01b8152fd5b50600754156104b9565b606490602085519162461bcd60e51b8352820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b50503461010e57602036600319011261010e576020906101076107526109df565b610a68565b919050346102845780600319360112610284576001600160a01b0390823582811690819003610832576107916024359386541633146109fa565b835461086857821561085857826009541161084857600380546001600160a01b0319168217905581516370a0823160e01b8152308582015290602090829060249082905afa90811561083e579083918691610806575b50106107f7575060075542905580f35b516351940b3960e11b81529050fd5b9150506020813d8211610836575b8161082160209383610ab6565b8101031261083257829051386107e7565b8480fd5b3d9150610814565b82513d87823e3d90fd5b815163342ccafd60e21b81528490fd5b815163df95788360e01b81528490fd5b81516302ed543d60e51b81528490fd5b50503461010e578160031936011261010e576020906007549051908152f35b50503461010e578160031936011261010e576020906005549051908152f35b50503461010e578160031936011261010e576020906006549051908152f35b91905034610284576060366003190112610284576108f16109df565b916024359182151583036108325760443592831515840361067c5760018060a01b039485916109248389541633146109fa565b156109c65716928315908115916109be575b50156109835750508083549283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a36001600160a01b031991821617825560018054909116905580f35b906020606492519162461bcd60e51b835282015260156024820152744f776e61626c653a207a65726f206164647265737360581b6044820152fd5b905038610936565b93505050501660018060a01b0319600154161760015580f35b600435906001600160a01b03821682036109f557565b600080fd5b15610a0157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b91908203918211610a5257565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0316600081815260086020526040902054610aa69190610a8e90610bc2565b90600052600860205260016040600020015490610a45565b90565b91908201809211610a5257565b90601f8019910116810190811067ffffffffffffffff821117610ad857604052565b634e487b7160e01b600052604160045260246000fd5b91929015610b505750815115610b02575090565b3b15610b0b5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015610b635750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510610ba9575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350610b86565b600454908115610c3457610bd860055483610aa9565b4210610c345760065491610bec8382610aa9565b421015610c2e57610bfd9042610a45565b90818102918183041490151715610a52578115610c18570490565b634e487b7160e01b600052601260045260246000fd5b50905090565b505060009056fea2646970667358221220cdb9622b4ea3ffb7bbbe3d74d4d57f31aca366db5ba74f6cf355d16b745a42f764736f6c63430008120033";

type VestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vesting__factory extends ContractFactory {
  constructor(...args: VestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Vesting";
  }

  override deploy(
    _cliff: PromiseOrValue<BigNumberish>,
    _duration: PromiseOrValue<BigNumberish>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Vesting> {
    return super.deploy(
      _cliff,
      _duration,
      _owner,
      overrides || {}
    ) as Promise<Vesting>;
  }
  override getDeployTransaction(
    _cliff: PromiseOrValue<BigNumberish>,
    _duration: PromiseOrValue<BigNumberish>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _cliff,
      _duration,
      _owner,
      overrides || {}
    );
  }
  override attach(address: string): Vesting {
    return super.attach(address) as Vesting;
  }
  override connect(signer: Signer): Vesting__factory {
    return super.connect(signer) as Vesting__factory;
  }
  static readonly contractName: "Vesting";

  public readonly contractName: "Vesting";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingInterface {
    return new utils.Interface(_abi) as VestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Vesting {
    return new Contract(address, _abi, signerOrProvider) as Vesting;
  }
}
