/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "TapiocaOptionBrokerMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TapiocaOptionBrokerMock__factory>;
    getContractFactory(
      name: "OTAP",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OTAP__factory>;
    getContractFactory(
      name: "TapiocaOptionBroker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TapiocaOptionBroker__factory>;
    getContractFactory(
      name: "TapiocaOptionLiquidityProvision",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TapiocaOptionLiquidityProvision__factory>;
    getContractFactory(
      name: "TapOFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TapOFT__factory>;
    getContractFactory(
      name: "Vesting",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Vesting__factory>;

    getContractAt(
      name: "TapiocaOptionBrokerMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TapiocaOptionBrokerMock>;
    getContractAt(
      name: "OTAP",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OTAP>;
    getContractAt(
      name: "TapiocaOptionBroker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TapiocaOptionBroker>;
    getContractAt(
      name: "TapiocaOptionLiquidityProvision",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TapiocaOptionLiquidityProvision>;
    getContractAt(
      name: "TapOFT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TapOFT>;
    getContractAt(
      name: "Vesting",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Vesting>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
