/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  UniUsdoToWethBidder,
  UniUsdoToWethBidderInterface,
} from "../../../liquidationQueue/bidders/UniUsdoToWethBidder";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISwapper",
        name: "uniV2Swapper_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_wethAssetId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_old",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_new",
        type: "address",
      },
    ],
    name: "UniV2SwapperUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenInId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getInputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenInId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getOutputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISwapper",
        name: "_swapper",
        type: "address",
      },
    ],
    name: "setUniswapSwapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenInId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "univ2Swapper",
    outputs: [
      {
        internalType: "contract ISwapper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100ab57601f61167038819003918201601f19168301916001600160401b038311848410176100b05780849260409485528339810103126100ab5780516001600160a01b03811691908290036100ab576020015160008054336001600160a01b03199182168117835560405194927f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a360025416176002556003556115a990816100c78239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c90816306fdde031461110857508063078dfbe714610fea5780634e71e0c814610f3f5780635dd82b3614610b1957806385267a0114610af25780638da5cb5b14610acc578063b691d78c146103f3578063b6aebf361461037e578063e30c3978146103575763fef744fa1461008f57600080fd5b346103545761009d3661119a565b5050604051636c3d8b8f60e01b8152602094936001600160a01b0391908216908681600481855afa90811561030e57839188918891610319575b506004604051809481936386c8e21d60e01b8352165afa90811561030e5790879187916102dd575b509161010e60049387146112ea565b60405163de40657760e01b815292839182905afa908115610276578291879187916102b0575b506064600354956040519586938492638eb22cdd60e01b845289600485015260248401528a6044840152165afa918215610276578592610281575b50600254169160405193633d9545e960e11b85526004850152602484015283604484015283606484015260016084840152600160a484015261014092838160c481865afa93841561027657918693916101ef95938794610247575b50506060848401510152604051808095819463071e388d60e51b8352600483016114ac565b03915afa91821561023b5791610209575b50604051908152f35b90508181813d8311610234575b61022081836112b4565b8101031261022f575138610200565b600080fd5b503d610216565b604051903d90823e3d90fd5b610267929450803d1061026f575b61025f81836112b4565b810190611354565b9138806101ca565b503d610255565b6040513d87823e3d90fd5b9091508581813d83116102a9575b61029981836112b4565b8101031261022f5751903861016f565b503d61028f565b6102d09150823d84116102d6575b6102c881836112b4565b810190611328565b38610134565b503d6102be565b82819392503d8311610307575b6102f481836112b4565b8101031261022f5751869061010e6100ff565b503d6102ea565b6040513d88823e3d90fd5b92505081813d831161034d575b61033081836112b4565b81010312610349578661034384926112d6565b386100d7565b8580fd5b503d610326565b80fd5b503461035457806003193601126103545760206001600160a01b0360015416604051908152f35b5034610354576020366003190112610354576004356001600160a01b038082168092036103ef576103b38184541633146111ff565b816002549182167f1226a5d51aea8884fdf5761c8e63e98532d3eedcc0a3d56ebe98e3080fcf96dd8580a36001600160a01b0319161760025580f35b8280fd5b5034610354576001600160a01b0361040a3661119a565b94909192931660405193636c3d8b8f60e01b94858152602081600481865afa9081156109ae578891610a87575b5060206001600160a01b0391600460405180948193631192124760e11b8352165afa9081156109ae578891610a41575b506001600160a01b0361047c911615156114cc565b60405163de40657760e01b815292602084600481865afa9384156109ae578894610a20575b5060405163c23ea21f60e01b815295602087600481875afa96871561091f5789976109fe575b5060209060046040518096819382525afa9283156109ae5788936109b9575b5060206001600160a01b03936004604051809681936386c8e21d60e01b8352165afa9283156109ae578893610976575b506105228383146112ea565b6001600160a01b03861633036109475787968061092a575b50506001600160a01b03600254169060405190638eb22cdd60e01b82528060048301528560248301528860448301526020826064816001600160a01b0389165afa91821561091f5789926108eb575b506001600160a01b0385163b156108e75760405192630208d92960e11b84523060048501526024840152604483015260648201528681608481836001600160a01b0388165af180156108dc576108ac575b50856003549260405190630cf35bdd60e41b8083528460048401526080836024816001600160a01b0386165afa92831561087c578493610887575b506040519081528560048201526080816024816001600160a01b0386165afa96871561087c576001600160a01b03976020946064938792610841575b506106828a916040519061066482611298565b600282526040368a8401378361067983611540565b91169052611563565b911690526040519788938492638eb22cdd60e01b84528860048501526024840152866044840152165afa9182156107fc578192610809575b61071194506001600160a01b03600254169260405180968192633d9545e960e11b83526101409788956004850160a091949360019360c0830196835260208301526000604083015260608201528260808201520152565b0381855afa9182156107fc57604095610755956101c49584956107d2575b50506001600160a01b03908751988997889663efa84c6d60e01b8852600488019061143f565b610144860152166101648401526101a0610184840152816101a48401525af19081156107c757829161078d575b602082604051908152f35b90506040813d6040116107bf575b816107a8604093836112b4565b810103126107bb57602091505138610782565b5080fd5b3d915061079b565b6040513d84823e3d90fd5b6001600160a01b0392955090816107f492903d1061026f5761025f81836112b4565b93903861072f565b50604051903d90823e3d90fd5b9150506020833d602011610839575b81610825602093836112b4565b8101031261022f57856107119351916106ba565b3d9150610818565b8a9192506108696106829160803d608011610875575b61086181836112b4565b810190611507565b50509050929150610651565b503d610857565b6040513d86823e3d90fd5b6108a191935060803d6080116108755761086181836112b4565b505090509138610615565b67ffffffffffffffff81979297116108c85760405294386105da565b634e487b7160e01b82526041600452602482fd5b6040513d89823e3d90fd5b8880fd5b9091506020813d602011610917575b81610907602093836112b4565b810103126108e757519038610589565b3d91506108fa565b6040513d8b823e3d90fd5b819297509060209181010312610943573594388061053a565b8680fd5b60405162461bcd60e51b81526020600482015260076024820152666f6e6c79204c5160c81b6044820152606490fd5b9092506020813d6020116109a6575b81610992602093836112b4565b810103126109a257519138610516565b8780fd5b3d9150610985565b6040513d8a823e3d90fd5b92506020833d6020116109f6575b816109d4602093836112b4565b810103126109a25760206109ef6001600160a01b03946112d6565b93506104e6565b3d91506109c7565b6020919750610a1990823d84116102d6576102c881836112b4565b96906104c7565b610a3a91945060203d6020116102d6576102c881836112b4565b92386104a1565b90506020813d602011610a7f575b81610a5c602093836112b4565b810103126109a2576001600160a01b03610a7861047c926112d6565b9150610467565b3d9150610a4f565b90506020813d602011610ac4575b81610aa2602093836112b4565b810103126109a2576020610abd6001600160a01b03926112d6565b9150610437565b3d9150610a95565b50346103545780600319360112610354576001600160a01b036020915416604051908152f35b503461035457806003193601126103545760206001600160a01b0360025416604051908152f35b503461035457610b283661119a565b50509092916001600160a01b038091169360405194636c3d8b8f60e01b8087526020968781600481865afa9081156108dc57859189918991610f08575b50600460405180948193631192124760e11b8352165afa80156108dc5785908890610ed0575b610b9892501615156114cc565b6040519081528681600481855afa90811561030e5784929188918891610e97575b506004604051809581936386c8e21d60e01b8352165afa91821561030e579087918793610e64575b50610bf08360049495146112ea565b60405163de40657760e01b815292839182905afa908115610276579083918691610e47575b50169160035493604051630cf35bdd60e41b9081815284600482015260809182826024818a5afa91821561091f578992610e24575b5060405190815287600482015282816024818a5afa92831561091f579185918b9594938b94610dfb575b5050604051610c9b91610c8682611298565b60028252604036888401378361067983611540565b91169052606460405180968193638eb22cdd60e01b835287600484015260248301528960448301525afa928315610276578593610dc6575b5090610d2391600254169260405180938192633d9545e960e11b83526101409788956004850160a091949360019360c0830196835260208301526000604083015260608201528260808201520152565b0381855afa92831561087c5791610d5b939186938693610da7575b50506040518080958194630b7ecdc960e31b8352600483016114ac565b03915afa91821561023b578092610d77575b5050604051908152f35b9091508282813d8311610da0575b610d8f81836112b4565b810103126103545750513880610d6d565b503d610d85565b610dbe929350803d1061026f5761025f81836112b4565b903880610d3e565b9092508581813d8311610df4575b610dde81836112b4565b81010312610df0575191610d23610cd3565b8480fd5b503d610dd4565b610c9b9294509081610e1892903d106108755761086181836112b4565b50509050929038610c74565b610e3c919250833d85116108755761086181836112b4565b505090509038610c4a565b610e5e9150873d89116102d6576102c881836112b4565b38610c15565b8281939294503d8311610e90575b610e7c81836112b4565b810103126103495751908690610bf0610be1565b503d610e72565b9293505081813d8311610ec9575b610eaf81836112b4565b81010312610349579086610ec385936112d6565b38610bb9565b503d610ea5565b50508781813d8311610f01575b610ee781836112b4565b810103126109435784610efc610b98926112d6565b610b8b565b503d610edd565b92505081813d8311610f38575b610f1f81836112b4565b810103126109435787610f3286926112d6565b38610b65565b503d610f15565b50346103545780600319360112610354576001546001600160a01b0390818116803303610fa6578084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a36001600160a01b03199283161783551660015580f35b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b5034610354576060366003190112610354576004356001600160a01b03908181168091036103ef57602435801515810361110457604435908115158203610df0576110398486541633146111ff565b156110e6578115908115916110de575b5015611099578083549283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a36bffffffffffffffffffffffff60a01b8092161782556001541660015580f35b60405162461bcd60e51b815260206004820152601560248201527f4f776e61626c653a207a65726f206164647265737300000000000000000000006044820152606490fd5b905038611049565b5090506bffffffffffffffffffffffff60a01b600154161760015580f35b8380fd5b9050346107bb57816003193601126107bb576111238161124a565b601981526020917f5553444f202d3e20574554482028556e69737761702056322900000000000000838301526040519283918183528351918281850152815b83811061118357505060408094508284010152601f80199101168101030190f35b808601820151878201604001528694508101611162565b608060031982011261022f576004356001600160a01b038116810361022f5791602435916044359160643567ffffffffffffffff9283821161022f578060238301121561022f57816004013593841161022f576024848301011161022f576024019190565b1561120657565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6040810190811067ffffffffffffffff82111761126657604052565b634e487b7160e01b600052604160045260246000fd5b6080810190811067ffffffffffffffff82111761126657604052565b6060810190811067ffffffffffffffff82111761126657604052565b90601f8019910116810190811067ffffffffffffffff82111761126657604052565b51906001600160a01b038216820361022f57565b156112f157565b60405162461bcd60e51b815260206004820152600f60248201526e1d1bdad95b881b9bdd081d985b1a59608a1b6044820152606490fd5b9081602091031261022f57516001600160a01b038116810361022f5790565b5190811515820361022f57565b80910390610140821261022f5760408051926060840184811067ffffffffffffffff821117611266578083526080821261022f576113918161127c565b61139a846112d6565b8152602084015160808601526113b18385016112d6565b60a0860152606084015160c086015284526080607f1982011261022f57819081516113db8161127c565b6080850151815260a0850151602082015260c08501518382015260e08501516060820152602086015260ff19011261022f5761143461012082519361141f8561124a565b61142c6101008201611347565b855201611347565b602083015282015290565b6020604061012092606081516001600160a01b03808251168852858201518689015284820151168488015201516060860152606083820151805160808801528481015160a08801528381015160c0880152015160e086015201518051151561010085015201511515910152565b6114b9816101809361143f565b6000610160806101408401528201520190565b156114d357565b60405162461bcd60e51b815260206004820152600c60248201526b1554d113c81b9bdd081cd95d60a21b6044820152606490fd5b919082608091031261022f578151600581101561022f579161152b602082016112d6565b91606061153a604084016112d6565b92015190565b80511561154d5760200190565b634e487b7160e01b600052603260045260246000fd5b80516001101561154d576040019056fea2646970667358221220d706ae58226764bf917dd0a8fe63312f559bad5fb94047f69e91bedfd04e881764736f6c63430008120033";

type UniUsdoToWethBidderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniUsdoToWethBidderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniUsdoToWethBidder__factory extends ContractFactory {
  constructor(...args: UniUsdoToWethBidderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UniUsdoToWethBidder";
  }

  override deploy(
    uniV2Swapper_: PromiseOrValue<string>,
    _wethAssetId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniUsdoToWethBidder> {
    return super.deploy(
      uniV2Swapper_,
      _wethAssetId,
      overrides || {}
    ) as Promise<UniUsdoToWethBidder>;
  }
  override getDeployTransaction(
    uniV2Swapper_: PromiseOrValue<string>,
    _wethAssetId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      uniV2Swapper_,
      _wethAssetId,
      overrides || {}
    );
  }
  override attach(address: string): UniUsdoToWethBidder {
    return super.attach(address) as UniUsdoToWethBidder;
  }
  override connect(signer: Signer): UniUsdoToWethBidder__factory {
    return super.connect(signer) as UniUsdoToWethBidder__factory;
  }
  static readonly contractName: "UniUsdoToWethBidder";

  public readonly contractName: "UniUsdoToWethBidder";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniUsdoToWethBidderInterface {
    return new utils.Interface(_abi) as UniUsdoToWethBidderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniUsdoToWethBidder {
    return new Contract(address, _abi, signerOrProvider) as UniUsdoToWethBidder;
  }
}
