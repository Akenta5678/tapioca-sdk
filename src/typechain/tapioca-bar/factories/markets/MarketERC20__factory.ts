/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MarketERC20,
  MarketERC20Interface,
} from "../../markets/MarketERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "NotApproved",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ApprovalBorrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowanceBorrow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approveBorrow",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permitBorrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61014060405234801561001157600080fd5b5060405161104c38038061104c83398101604081905261003091610109565b60408051808201825260018152603160f81b60209182015282519281019290922060e08190527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66101008190524660a081815284517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818801819052818701959095526060810193909352608080840192909252308382018190528551808503909201825260c093840190955280519501949094209093529152610120526101d2565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561011c57600080fd5b82516001600160401b038082111561013357600080fd5b818501915085601f83011261014757600080fd5b815181811115610159576101596100f3565b604051601f8201601f19908116603f01168101908382118183101715610181576101816100f3565b81604052828152888684870101111561019957600080fd5b600093505b828410156101bb578484018601518185018701529285019261019e565b600086848301015280965050505050505092915050565b60805160a05160c05160e0516101005161012051610e2b6102216000396000610894015260006108e3015260006108be01526000610817015260006108410152600061086b0152610e2b6000f3fe608060405234801561001057600080fd5b50600436106100d35760003560e01c806370a0823111610081578063a9059cbb1161005b578063a9059cbb146101cc578063d505accf146101df578063dd62ed3e146101f257600080fd5b806370a08231146101705780637ecebe00146101905780637fa0b84e146101b957600080fd5b80631da8bf10116100b25780631da8bf101461014057806323b872dd146101555780633644e5151461016857600080fd5b8062a02a20146100d8578063095ea7b31461011657806318160ddd14610139575b600080fd5b6101036100e6366004610c5c565b600360209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b610129610124366004610c8f565b61021d565b604051901515815260200161010d565b6000610103565b61015361014e366004610cb9565b610234565b005b610129610163366004610d2c565b61024e565b610103610471565b61010361017e366004610d68565b60016020526000908152604090205481565b61010361019e366004610d68565b6001600160a01b031660009081526004602052604090205490565b6101296101c7366004610c8f565b610480565b6101296101da366004610c8f565b61048d565b6101536101ed366004610cb9565b6105f0565b610103610200366004610c5c565b600260209081526000928352604080842090915290825290205481565b600061022a338484610601565b5060015b92915050565b610245600088888888888888610663565b50505050505050565b6000811561041a576001600160a01b038416600090815260016020526040902054828110156102bd5760405162461bcd60e51b815260206004820152601660248201527545524332303a2062616c616e636520746f6f206c6f7760501b60448201526064015b60405180910390fd5b836001600160a01b0316856001600160a01b031614610418576001600160a01b0385166000908152600260209081526040808320338452909152902054600019811461038257838110156103535760405162461bcd60e51b815260206004820152601860248201527f45524332303a20616c6c6f77616e636520746f6f206c6f77000000000000000060448201526064016102b4565b61035d8482610da0565b6001600160a01b03871660009081526002602090815260408083203384529091529020555b6001600160a01b0385166103d15760405162461bcd60e51b815260206004820152601660248201527545524332303a206e6f207a65726f206164647265737360501b60448201526064016102b4565b6103db8483610da0565b6001600160a01b038088166000908152600160205260408082209390935590871681529081208054869290610411908490610db3565b9091555050505b505b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161045f91815260200190565b60405180910390a35060019392505050565b600061047b61080a565b905090565b600061022a338484610931565b6000811515806104a55750336001600160a01b038416145b156105a75733600090815260016020526040902054828110156105035760405162461bcd60e51b815260206004820152601660248201527545524332303a2062616c616e636520746f6f206c6f7760501b60448201526064016102b4565b336001600160a01b038516146105a5576001600160a01b0384166105625760405162461bcd60e51b815260206004820152601660248201527545524332303a206e6f207a65726f206164647265737360501b60448201526064016102b4565b61056c8382610da0565b33600090815260016020526040808220929092556001600160a01b0386168152908120805485929061059f908490610db3565b90915550505b505b6040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350600192915050565b610245600188888888888888610663565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b834211156106b35760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016102b4565b6000886106e0577fe9685ff6d48c617fe4f692c50e602cce27cbad0290beb93cfa77eac43968d58c610702565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c95b88888861070e8c61098a565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610769826109b9565b9050600061077982878787610a07565b9050896001600160a01b0316816001600160a01b0316146107dc5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016102b4565b8a156107f2576107ed8a8a8a610601565b6107fd565b6107fd8a8a8a610931565b5050505050505050505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561086357507f000000000000000000000000000000000000000000000000000000000000000046145b1561088d57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527fe50de2333c10a9502fcb1d8ae13a51bbf423153dfc63c2b8997665b32154afc39101610656565b6001600160a01b0381166000908152600460205260408120805490826109af83610dc6565b9091555092915050565b600061022e6109c661080a565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610a1887878787610a2f565b91509150610a2581610af3565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610a665750600090506003610aea565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610aba573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610ae357600060019250925050610aea565b9150600090505b94509492505050565b6000816004811115610b0757610b07610ddf565b03610b0f5750565b6001816004811115610b2357610b23610ddf565b03610b705760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016102b4565b6002816004811115610b8457610b84610ddf565b03610bd15760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016102b4565b6003816004811115610be557610be5610ddf565b03610c3d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016102b4565b50565b80356001600160a01b0381168114610c5757600080fd5b919050565b60008060408385031215610c6f57600080fd5b610c7883610c40565b9150610c8660208401610c40565b90509250929050565b60008060408385031215610ca257600080fd5b610cab83610c40565b946020939093013593505050565b600080600080600080600060e0888a031215610cd457600080fd5b610cdd88610c40565b9650610ceb60208901610c40565b95506040880135945060608801359350608088013560ff81168114610d0f57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080600060608486031215610d4157600080fd5b610d4a84610c40565b9250610d5860208501610c40565b9150604084013590509250925092565b600060208284031215610d7a57600080fd5b610d8382610c40565b9392505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561022e5761022e610d8a565b8082018082111561022e5761022e610d8a565b600060018201610dd857610dd8610d8a565b5060010190565b634e487b7160e01b600052602160045260246000fdfea264697066735822122087ed99b4812f897f11d813cd2c41b85a3fde40c71450480a8ef617c604ddd79664736f6c63430008120033";

type MarketERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarketERC20__factory extends ContractFactory {
  constructor(...args: MarketERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MarketERC20";
  }

  override deploy(
    name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MarketERC20> {
    return super.deploy(name, overrides || {}) as Promise<MarketERC20>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, overrides || {});
  }
  override attach(address: string): MarketERC20 {
    return super.attach(address) as MarketERC20;
  }
  override connect(signer: Signer): MarketERC20__factory {
    return super.connect(signer) as MarketERC20__factory;
  }
  static readonly contractName: "MarketERC20";

  public readonly contractName: "MarketERC20";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketERC20Interface {
    return new utils.Interface(_abi) as MarketERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarketERC20 {
    return new Contract(address, _abi, signerOrProvider) as MarketERC20;
  }
}
