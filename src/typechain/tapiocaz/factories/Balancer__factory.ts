/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Balancer, BalancerInterface } from "../Balancer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_routerETH",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DestinationNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "DestinationOftNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "ExceedsBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FeeAmountNotSet",
    type: "error",
  },
  {
    inputs: [],
    name: "PoolInfoRequired",
    type: "error",
  },
  {
    inputs: [],
    name: "RebalanceAmountNotSet",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "SlippageNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_srcOft",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_dstOft",
        type: "address",
      },
    ],
    name: "ConnectedChainUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_srcOft",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_totalAmount",
        type: "uint256",
      },
    ],
    name: "RebalanceAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_srcOft",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_slippage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_isNative",
        type: "bool",
      },
    ],
    name: "Rebalanced",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_srcOft",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "addRebalanceAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_srcOft",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
    ],
    name: "checker",
    outputs: [
      {
        internalType: "bool",
        name: "canExec",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "execPayload",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "connectedOFTs",
    outputs: [
      {
        internalType: "uint256",
        name: "srcPoolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dstPoolId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "dstOft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rebalanceable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_srcOft",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "_dstOft",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_ercData",
        type: "bytes",
      },
    ],
    name: "initConnectedOFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_srcOft",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "_slippage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_ercData",
        type: "bytes",
      },
    ],
    name: "rebalance",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "";

type BalancerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalancerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Balancer__factory extends ContractFactory {
  constructor(...args: BalancerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Balancer";
  }

  override deploy(
    _routerETH: PromiseOrValue<string>,
    _router: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Balancer> {
    return super.deploy(
      _routerETH,
      _router,
      _owner,
      overrides || {}
    ) as Promise<Balancer>;
  }
  override getDeployTransaction(
    _routerETH: PromiseOrValue<string>,
    _router: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _routerETH,
      _router,
      _owner,
      overrides || {}
    );
  }
  override attach(address: string): Balancer {
    return super.attach(address) as Balancer;
  }
  override connect(signer: Signer): Balancer__factory {
    return super.connect(signer) as Balancer__factory;
  }
  static readonly contractName: "Balancer";

  public readonly contractName: "Balancer";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalancerInterface {
    return new utils.Interface(_abi) as BalancerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Balancer {
    return new Contract(address, _abi, signerOrProvider) as Balancer;
  }
}
