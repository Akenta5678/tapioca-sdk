/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Balancer, BalancerInterface } from "../Balancer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_routerETH",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DestinationNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "DestinationOftNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "ExceedsBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FeeAmountNotSet",
    type: "error",
  },
  {
    inputs: [],
    name: "PoolInfoRequired",
    type: "error",
  },
  {
    inputs: [],
    name: "RebalanceAmountNotSet",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "SlippageNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_srcOft",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_dstOft",
        type: "address",
      },
    ],
    name: "ConnectedChainUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_srcOft",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_totalAmount",
        type: "uint256",
      },
    ],
    name: "RebalanceAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_srcOft",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_slippage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_isNative",
        type: "bool",
      },
    ],
    name: "Rebalanced",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_srcOft",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "addRebalanceAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_srcOft",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
    ],
    name: "checker",
    outputs: [
      {
        internalType: "bool",
        name: "canExec",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "execPayload",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "connectedOFTs",
    outputs: [
      {
        internalType: "uint256",
        name: "srcPoolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dstPoolId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "dstOft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rebalanceable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_srcOft",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "_dstOft",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_ercData",
        type: "bytes",
      },
    ],
    name: "initConnectedOFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_srcOft",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "_slippage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_ercData",
        type: "bytes",
      },
    ],
    name: "rebalance",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c03461010f57601f61112f38819003918201601f19168301916001600160401b038311848410176101145780849260609460405283398101031261010f5761006c61004a8261012a565b60406100586020850161012a565b936001600160a01b0393849283920161012a565b16938460018060a01b031960005416176000556040519460007f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768180a31692831561010057501680156100ee5760805260a052604051610ff0908161013f82396080518161024d015260a0518181816104cf01528181610529015261060f0152f35b604051630801eaf160e01b8152600490fd5b630801eaf160e01b8152600490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361010f5756fe6080604052600436101561001b575b361561001957600080fd5b005b6000803560e01c806303d5692614610b3557806313af403514610ac85780635dd94d4e14610a54578063623c12f8146108d657806380fd8987146107e15780638da5cb5b146107ba57639c25e27d14610074575061000e565b60a03660031901126107b757610088610cf9565b610090610d14565b906084356001600160401b038111610384576100b0903690600401610d91565b6100c460018060a01b038554163314610e27565b6001600160a01b03828116855260016020908152604080872061ffff8716885290915285206002015416156107a557620186a060443510156107935760018060a01b038216845260016020526040842061ffff84168552602052606435600360408620015410610781576001600160a01b0382811680865260016020908152604080882061ffff88168952909152862060020154610166928692911690610ed2565b1561076f576001600160a01b0382163b156103845760405163411950f360e11b815260643560048201528481602481836001600160a01b0388165af1801561069d5761075c575b50604051633c2f4f4360e11b8152906020826004816001600160a01b0387165afa91821561069d57859261073b575b506001600160a01b0382166103b757506064353411156103a5576064354710610393576001600160a01b03828116855260016020908152604080872061ffff8716600090815290835281902060020154905160609190911b6001600160601b031916918101919091526014815285917f0000000000000000000000000000000000000000000000000000000000000000169061027781610d53565b610285604435606435610f7b565b90823b156103845760405163088a669560e11b815261ffff881660048201526001600160a01b038716602482015260a060448201529284928492839185918391906102d49060a4840190610de7565b906064356064840152608483015203925af1801561038857610370575b5050600080516020610f9b833981519152916080915b60018060a01b038216865260016020526040862061ffff8616600052602052600360406000200161033b6064358254610e81565b90556040805161ffff9690961686526044356020870152606435908601526001600160a01b039081161560608601521692a280f35b61037990610d25565b6103845783386102f1565b8380fd5b6040513d84823e3d90fd5b604051637fa62f9d60e01b8152600490fd5b604051637b063a8960e11b8152600490fd5b34156103a557604051633c2f4f4360e11b8152906020826004816001600160a01b0388165afa9182156107305786926106ff575b506040516370a0823160e01b81523060048201526020816024816001600160a01b0387165afa9081156106f45787916106be575b5060643511610393578060208061043b93518301019101610ea4565b6001600160a01b038581168852600160209081526040808a2061ffff8a1660009081529083528190206002015490519216828201528152929161047d84610d53565b604051926001600160401b0360608501908111908511176106a85760208995918692606087016040528387523483880152604087015260446040518094819363095ea7b360e01b835260018060a01b037f0000000000000000000000000000000000000000000000000000000000000000166004840152606435602484015260018060a01b03165af1801561069d5761066e575b50610520604435606435610f7b565b604084015193907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163b1561066a5761ffff946105d4604080946105e6948a988e9884519b8c9a6327efc43f60e21b8c521660048b015260248a0152604489015260018060a01b038d166064890152606435608489015260a488015261012060c48801528051610124880152602081015161014488015201516060610164870152610184860190610de7565b8481036003190160e486015290610de7565b61060f60f31b602084830392600319840161010487015260028152015201818360018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1801561038857610656575b5050600080516020610f9b83398151915291608091610307565b61065f90610d25565b61038457833861063c565b8580fd5b61068f9060203d602011610696575b6106878183610d6e565b810190610eba565b5038610511565b503d61067d565b6040513d87823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b90506020813d6020116106ec575b816106d960209383610d6e565b810103126106e857513861041f565b8680fd5b3d91506106cc565b6040513d89823e3d90fd5b61072291925060203d602011610729575b61071a8183610d6e565b810190610e62565b90386103eb565b503d610710565b6040513d88823e3d90fd5b61075591925060203d6020116107295761071a8183610d6e565b90386101dc565b61076890949194610d25565b92386101ad565b604051635e8ea7db60e01b8152600490fd5b60405163bb6a783760e01b8152600490fd5b604051631224b81560e01b8152600490fd5b6040516304889dcf60e01b8152600490fd5b80fd5b50346107b757806003193601126107b757546040516001600160a01b039091168152602090f35b50346107b75760603660031901126107b7576107fb610cf9565b610803610d14565b9060443560018060a01b03809216928385526020926001845261ffff60408720921691828752845280600260408820015416156107a557610848908654163314610e27565b83855260018352604085208186528352600360408620018054908382018092116108c2575583855260018352604080862082875284528086206003015481519586529385019190915283015260608201527f3b100c278a9436e8a77b205a5395872158b05a3f1a0bc5e6052c1d92827c7bd590608090a180f35b634e487b7160e01b87526011600452602487fd5b50346107b75760403660031901126107b7576108f0610cf9565b906108f9610d14565b604051633c2f4f4360e11b81526020936001600160a01b0390811691606091908681600481875afa90811561073057916109c493916109da9695938891610a37575b5016156109de575b6109b6908287526001885261ffff6040882095169485885288526003604081818a20015415159885815260018b528181208882528b52200154604051958694639c25e27d60e01b8b870152602486015260448501526103e86064850152608484015260a060a484015260c4830190610de7565b03601f198101835282610d6e565b6040805194859485528401526040830190610de7565b0390f35b50808552600186526109b66040862061ffff85169081885288526040872054908388526001895260408820908852885260016040882001546040519189830152604082015260408152610a3081610d38565b9050610943565b610a4e9150893d8b116107295761071a8183610d6e565b3861093b565b50346107b75760403660031901126107b7576080906040610a73610cf9565b91610a7c610d14565b60018060a01b038094168252600160205261ffff838320911682526020522090815491600360018201549260028301541691015491604051938452602084015260408301526060820152f35b50346107b75760203660031901126107b757610ae2610cf9565b8154906001600160a01b0390610afb3383851614610e27565b166001600160a01b03199190911681178255337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768380a380f35b50346107b75760803660031901126107b757610b4f610cf9565b610b57610d14565b6044356001600160a01b038181169391929084840361066a576001600160401b0390606435828111610cf557610b91903690600401610d91565b610b9f828954163314610e27565b604051633c2f4f4360e11b815285831696602096909187816004818c5afa8015610cea5785918c91610ccd575b5016151580610cc4575b610cb257610be5918691610ed2565b1561076f57808580610bfc93518301019101610ea4565b919060405193608085019085821090821117610c9e57917f977b844ab5bd8c7c7282986679102e8c18c4374f0560736566e586613272191796959493916003936040528452858401918252604084019089825260608501928b8452898c526001885261ffff60408d20971696878d52885260408c20955186555160018601556002850191511660018060a01b031982541617905551910155604051908152a380f35b634e487b7160e01b8a52604160045260248afd5b60405163c804944560e01b8152600490fd5b50825115610bd6565b610ce49150893d8b116107295761071a8183610d6e565b38610bcc565b6040513d8d823e3d90fd5b8780fd5b600435906001600160a01b0382168203610d0f57565b600080fd5b6024359061ffff82168203610d0f57565b6001600160401b0381116106a857604052565b606081019081106001600160401b038211176106a857604052565b604081019081106001600160401b038211176106a857604052565b601f909101601f19168101906001600160401b038211908210176106a857604052565b81601f82011215610d0f578035906001600160401b0382116106a85760405192610dc5601f8401601f191660200185610d6e565b82845260208383010111610d0f57816000926020809301838601378301015290565b919082519283825260005b848110610e13575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610df2565b15610e2e57565b60405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606490fd5b90816020910312610d0f57516001600160a01b0381168103610d0f5790565b91908203918211610e8e57565b634e487b7160e01b600052601160045260246000fd5b9190826040910312610d0f576020825192015190565b90816020910312610d0f57518015158103610d0f5790565b9060209161ffff610f35946040519360018060601b0319809160601b16868601528360601b16603485015260288452610f0a84610d38565b60405195869485938493631ec59c7b60e11b8552166004840152604060248401526044830190610de7565b03916001600160a01b03165afa908115610f6f57600091610f54575090565b610f6c915060203d8111610696576106878183610d6e565b90565b6040513d6000823e3d90fd5b818102918183041481151715610e8e57620186a0610f6c920490610e8156fe7007030f22ba868c6abdfc92d9c47da38dca4e3c200c2d47043b5f5406bd0c0ca26469706673582212207fbbc03489051dc73a6806c3e8e2715ee73f33ed483e98eac87c4f69a500222b64736f6c63430008120033";

type BalancerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalancerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Balancer__factory extends ContractFactory {
  constructor(...args: BalancerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Balancer";
  }

  override deploy(
    _routerETH: PromiseOrValue<string>,
    _router: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Balancer> {
    return super.deploy(
      _routerETH,
      _router,
      _owner,
      overrides || {}
    ) as Promise<Balancer>;
  }
  override getDeployTransaction(
    _routerETH: PromiseOrValue<string>,
    _router: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _routerETH,
      _router,
      _owner,
      overrides || {}
    );
  }
  override attach(address: string): Balancer {
    return super.attach(address) as Balancer;
  }
  override connect(signer: Signer): Balancer__factory {
    return super.connect(signer) as Balancer__factory;
  }
  static readonly contractName: "Balancer";

  public readonly contractName: "Balancer";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalancerInterface {
    return new utils.Interface(_abi) as BalancerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Balancer {
    return new Contract(address, _abi, signerOrProvider) as Balancer;
  }
}
