/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Magnetar,
  MagnetarInterface,
} from "../Magnetar";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "allowFailure",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "call",
            type: "bytes",
          },
        ],
        internalType: "struct MagnetarData.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "burst",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "returnData",
            type: "bytes",
          },
        ],
        internalType: "struct MagnetarData.Result[]",
        name: "returnData",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBasefee",
    outputs: [
      {
        internalType: "uint256",
        name: "basefee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getBlockHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "chainid",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentBlockCoinbase",
    outputs: [
      {
        internalType: "address",
        name: "coinbase",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentBlockDifficulty",
    outputs: [
      {
        internalType: "uint256",
        name: "difficulty",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentBlockGasLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "gaslimit",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentBlockTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getEthBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastBlockHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200012757601f6200253238819003918201601f19168301916001600160401b038311848410176200012c578084926020946040528339810103126200012757516001600160a01b03808216908183036200012757620000623362000142565b33906000541603620000e357156200008f576200007f9062000142565b6040516123a890816200018a8239f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe6080604052600436101561001257600080fd5b60003560e01c8063013546e1146100f75780630f28c97d146100f257806327e86d6e146100ed5780633408e470146100e85780633e64a696146100e357806342cbb15c146100de5780634d2301cc146100d9578063715018a6146100d457806372425d9d146100cf57806386d516e8146100ca5780638da5cb5b146100c5578063a8b0574e146100c0578063ee82ac5e146100bb5763f2fde38b146100b657600080fd5b61123a565b61121c565b611201565b6111da565b6111bf565b6111a4565b61113a565b611112565b6110d9565b6110be565b6110a3565b611083565b611068565b6101bb565b60005b83811061010f5750506000910152565b81810151838201526020016100ff565b90602091610138815180928185528580860191016100fc565b601f01601f1916010190565b602080820190808352835180925260409283810182858560051b8401019601946000925b858410610179575050505050505090565b9091929394959685806101aa600193603f1986820301885286838d518051151584520151918185820152019061011f565b990194019401929594939190610168565b6020806003193601126103fe5760049067ffffffffffffffff9082358281116103fe57366023820112156103fe57808401359283116103fe5760248101916005916024369186851b0101116103fe57600094610216856114db565b94865b81811061023f5761023b8761022f8a341461205a565b60405191829182610144565b0390f35b61024a818388611589565b60608082019061026061025c836115ba565b1590565b61101d575b600161027a610273856116bd565b61ffff1690565b036102bd5750816102ad6102b3926102a561029a8a6102b8989701611800565b9360808101906115c7565b9290916115ba565b926121b7565b61154e565b610219565b61ffff6002816102cc866116bd565b16036102f4575050816102ee6102b3926102a561029a8a6102b8989701611800565b926120e3565b909150600a81610306859d96956116bd565b16036104b057505061033061032861032160808c018c6115c7565b80916116c7565b810190611e80565b61034961034482516001600160a01b031690565b612240565b60408a8101359384156104035787858192019c0161036690611800565b9201516001600160a01b039081169216803b156103fe576000926103c692519586809481937f2479d8630000000000000000000000000000000000000000000000000000000083528b83019190916001600160a01b036020820193169052565b03925af19182156103f9576102b8926103e0575b5061154e565b806103ed6103f392611391565b8061105d565b386103da565b611858565b600080fd5b9a61042591929450610419886104199201611800565b6001600160a01b031690565b81610439888601516001600160a01b031690565b94015190803b156103fe5791517f62355638000000000000000000000000000000000000000000000000000000008152338782019081526001600160a01b039095166020860152604085019190915292600091849182908490829060600103925af19182156103f9576102b8926103e0575061154e565b600b816104bc8d6116bd565b160361058c575089906080938483016104d590846115c7565b806104df926116c7565b81016104ea91611f31565b9485516104fd906001600160a01b031690565b61050690612240565b886040809501358093019d0161051b90611800565b6001600160a01b03166001600160a01b0316918987015161053d9061ffff1690565b918588015194880151970151833b156103fe576103c68a9160009751998a97889687957f695ef6bf00000000000000000000000000000000000000000000000000000000875233908701612001565b60038161059a8d969d6116bd565b160361070c575061066c906080906105e96104196104198a6105cc6105c4610321888c018c6115c7565b810190611ed9565b986105e3610344838c01516001600160a01b031690565b01611800565b87600087516040968796610606888c01516001600160a01b031690565b968b01519a015187519a8b97889687957f9a9af97a0000000000000000000000000000000000000000000000000000000087523391870191608093969594919660a084019784526001600160a01b03809216602085015216604083015260608201520152565b03925af180156103f9576102b89360009081926106d4575b5091518781019283526020830191909152906106ae9082906040015b03601f198101835282611453565b6106b6611475565b6001815290868201526106c9828a611d96565b526103da8189611d96565b6106ae92506106a091506106fd90843d8611610705575b6106f58183611453565b810190611ec3565b925090610684565b503d6106eb565b87816107198694966116bd565b16036107e9575061075a6104196104198861074561073d61032160808801886115c7565b810190611d30565b946105e361034487516001600160a01b031690565b9061076e878201516001600160a01b031690565b9160409461077e86840151151590565b92015191813b156103fe5794517f25be7824000000000000000000000000000000000000000000000000000000008152338882019081526001600160a01b039094166020850152941515604084015260608301919091526000918491908290849082906080016103c6565b6006816107f5846116bd565b16036108f05750610890925061081e6104196104198861074561032861032160808801886115c7565b90610832878201516001600160a01b031690565b604092838093015191600084518098819582947f5224372c0000000000000000000000000000000000000000000000000000000084528d339085016040919493929460608201956001600160a01b0380921683521660208201520152565b03925af180156103f9576102b89360009081926108c8575b5091518781019283526020830191909152906106ae9082906040016106a0565b6106ae92506106a091506108e890843d8611610705576106f58183611453565b9250906108a8565b6007816108fc846116bd565b16036109d15750608092610920610918610321868501856115c7565b810190611daa565b9161093561034484516001600160a01b031690565b6109466104196104198a8401611800565b8389015161ffff1690604061097160a08288015196880151998801519701516001600160a01b031690565b823b156103fe576109b58b9160009884519b8c998a9889967f1f9dbf0400000000000000000000000000000000000000000000000000000000885233908801611e3a565b03930135905af19182156103f9576102b8926103e0575061154e565b6008816109df8496946116bd565b1603610af8575085610a1961041961041983610a0461073d61032160808b018b6115c7565b976105e36103448a516001600160a01b031690565b93610a2d828201516001600160a01b031690565b94604093610a3d85840151151590565b92015184517f6587adb800000000000000000000000000000000000000000000000000000000815233818b019081526001600160a01b039098166020890152921515604088015260608701529094859190829060009082906080015b03925af19283156103f9576102b8936106a0926106ae92600092610ac9575b505188810191825292839160200190565b610aea919250893d8b11610af1575b610ae28183611453565b810190611d87565b9038610ab8565b503d610ad8565b600981610b04866116bd565b1603610bad575085610b2961041961041983610a0461073d61032160808b018b6115c7565b93610b3d828201516001600160a01b031690565b94604093610b4d85840151151590565b92015184517fcd0211eb00000000000000000000000000000000000000000000000000000000815233818b019081526001600160a01b03909816602089015292151560408801526060870152909485919082906000908290608001610a99565b600c81610bb9866116bd565b1603610c5f575050610bdc610bd461032160808501856115c7565b810190611bbf565b8086018051870151610bf6906001600160a01b0316612240565b610c07610419610419898701611800565b93610c14835161ffff1690565b91519160408094015195803b156103fe5784896109b560009751998a97889687947f38c4d7180000000000000000000000000000000000000000000000000000000086528501611c83565b600d81610c6d8694966116bd565b1603610d525750608092610c91610c89610321868501856115c7565b810190611a98565b91610ca661034484516001600160a01b031690565b610cb76104196104198a8401611800565b838901516001600160a01b0316906040610ce28187015195870151988701516001600160a01b031690565b60a08701516001600160a01b031690610d0060c089015161ffff1690565b9761010060e082015191015190853b156103fe576000998e946109b59487519e8f9c8d9b8c997f980322ad000000000000000000000000000000000000000000000000000000008b5233908b01611b2e565b600e81610d5e846116bd565b1603610e3d5750608092610d82610d7a610321868501856115c7565b81019061199a565b91610d9761034484516001600160a01b031690565b610da86104196104198a8401611800565b838901516001600160a01b0316906040610de2610dd282880151968801516001600160a01b031690565b988701516001600160a01b031690565b9560c0610df460a083015161ffff1690565b91015196833b156103fe576000978c926109b59285519c8d9a8b998a977f47d2517500000000000000000000000000000000000000000000000000000000895233908901611a22565b600f81610e49846116bd565b1603610f025750608092610e6d610e65610321868501856115c7565b8101906118bb565b91610e8261034484516001600160a01b031690565b610e936104196104198a8401611800565b838901516001600160a01b031690604060a0610ebb82880151968801519988015161ffff1690565b960151823b156103fe576109b58b9160009884519b8c998a9889967f14d274d20000000000000000000000000000000000000000000000000000000088523390880161192f565b601090610f0e836116bd565b1603610fcc57608092610f31610f29610321868501856115c7565b81019061175d565b91610f4661034484516001600160a01b031690565b610f576104196104198a8401611800565b88840151906040610f73610dd2828801519688015161ffff1690565b95610f8660c060a0830151920151151590565b96833b156103fe576000978c926109b59285519c8d9a8b998a977f9f3a056d0000000000000000000000000000000000000000000000000000000089523390890161180a565b6110198560405191829162461bcd60e51b8352820160609060208152601a60208201527f4d61676e657461723a20616374696f6e206e6f742076616c696400000000000060408201520190565b0390fd5b61105861102d60808501856115c7565b604051808b018881529192506110509161104b9082906020016106a0565b6115fa565b901515611685565b610265565b60009103126103fe57565b346103fe5760003660031901126103fe576020604051428152f35b346103fe5760003660031901126103fe5760206040516000194301408152f35b346103fe5760003660031901126103fe576020604051468152f35b346103fe5760003660031901126103fe576020604051488152f35b346103fe5760003660031901126103fe576020604051438152f35b6001600160a01b038116036103fe57565b3590611110826110f4565b565b346103fe5760203660031901126103fe576020600435611131816110f4565b31604051908152f35b346103fe576000806003193601126111a157611154611323565b806001600160a01b03815473ffffffffffffffffffffffffffffffffffffffff1981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b346103fe5760003660031901126103fe576020604051448152f35b346103fe5760003660031901126103fe576020604051458152f35b346103fe5760003660031901126103fe5760206001600160a01b0360005416604051908152f35b346103fe5760003660031901126103fe576020604051418152f35b346103fe5760203660031901126103fe576020604051600435408152f35b346103fe5760203660031901126103fe57600435611257816110f4565b61125f611323565b6001600160a01b0380911680156112b95760009182548273ffffffffffffffffffffffffffffffffffffffff198216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b608460405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b6001600160a01b0360005416330361133757565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116113a557604052565b61137b565b6080810190811067ffffffffffffffff8211176113a557604052565b60c0810190811067ffffffffffffffff8211176113a557604052565b60e0810190811067ffffffffffffffff8211176113a557604052565b6060810190811067ffffffffffffffff8211176113a557604052565b610100810190811067ffffffffffffffff8211176113a557604052565b60a0810190811067ffffffffffffffff8211176113a557604052565b90601f8019910116810190811067ffffffffffffffff8211176113a557604052565b604051906040820182811067ffffffffffffffff8211176113a557604052565b60405190611110826113e2565b60405190610120820182811067ffffffffffffffff8211176113a557604052565b67ffffffffffffffff81116113a55760051b60200190565b906114e5826114c3565b6040906114f482519182611453565b8381528093611505601f19916114c3565b0190600090815b83811061151a575050505050565b8451908582019180831067ffffffffffffffff8411176113a55760209287528481528260608183015282850101520161150c565b600019811461155d5760010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b91908110156115ab5760051b81013590609e19813603018212156103fe570190565b611573565b801515036103fe57565b356115c4816115b0565b90565b903590601e19813603018212156103fe570180359067ffffffffffffffff82116103fe576020019181360383136103fe57565b90611110604c60405180947f4d61676e657461723a204d697373696e672063616c6c20666f7220616374696f60208301527f6e207769746820696e6465780000000000000000000000000000000000000000604083015261166481518092602086860191016100fc565b810103602c810185520183611453565b9060206115c492818152019061011f565b1561168d5750565b6110199060405191829162461bcd60e51b835260206004840152602483019061011f565b61ffff8116036103fe57565b356115c4816116b1565b90929192836004116103fe5783116103fe57600401916003190190565b3590611110826116b1565b67ffffffffffffffff81116113a557601f01601f191660200190565b81601f820112156103fe57803590611722826116ef565b926117306040519485611453565b828452602083830101116103fe57816000926020809301838601378301015290565b3590611110826115b0565b6020818303126103fe57803567ffffffffffffffff918282116103fe57019160e0838203126103fe5761178e611495565b9261179881611105565b845260208101356020850152604081013560408501526117ba606082016116e4565b60608501526117cb60808201611105565b608085015260a08101359283116103fe576117ed60c0926117f894830161170b565b60a085015201611752565b60c082015290565b356115c4816110f4565b95926118509461ffff9160c09793949a999a6001600160a01b038096168a5260208a0152604089015216606087015216608085015260e060a085015260e084019061011f565b931515910152565b6040513d6000823e3d90fd5b91908260809103126103fe5760405161187c816113aa565b6060808294803584526020810135611893816110f4565b602085015260408101356118a6816115b0565b60408501520135916118b7836115b0565b0152565b90610120828203126103fe576119279060a0604051936118da856113c6565b80356118e5816110f4565b855260208101356118f5816110f4565b60208601526040810135604086015260608101356060860152608081013561191c816116b1565b608086015201611864565b60a082015290565b91969593946111109560a09461ffff9361012086019a6001600160a01b03809216875216602086015260408501526060840152166080820152019060608091805184526001600160a01b03602082015116602085015260408101511515604085015201511515910152565b90610140828203126103fe576117f89060c0604051936119b9856113e2565b80356119c4816110f4565b855260208101356119d4816110f4565b60208601526040810135604086015260608101356119f1816110f4565b60608601526080810135611a04816110f4565b608086015260a0810135611a17816116b1565b60a086015201611864565b929796949161ffff92611110979260c09661014087019b6001600160a01b038095818095168a5216602089015260408801521660608601521660808401521660a0820152019060608091805184526001600160a01b03602082015116602085015260408101511515604085015201511515910152565b610180818303126103fe57611b27611aae6114a2565b92611ab883611105565b8452611ac660208401611105565b60208501526040830135604085015260608301356060850152611aeb60808401611105565b6080850152611afc60a08401611105565b60a0850152611b0d60c084016116e4565b60c085015260e083013560e0850152610100809301611864565b9082015290565b949561ffff939a99979291610100976111109a9661018089019d6001600160a01b038096818096168c521660208b015260408a015260608901521660808701521660a08501521660c083015260e0820152019060608091805184526001600160a01b03602082015116602085015260408101511515604085015201511515910152565b359060ff821682036103fe57565b808203916101a083126103fe5760405192611bd9846113fe565b8235611be4816116b1565b84526101008091601f1901126103fe57611c7b926101209160405190611c098261141a565b611c1560208401611105565b8252611c2360408401611105565b6020830152611c3460608401611105565b60408301526080830135606083015260a08301356080830152611c5960c08401611bb1565b60a083015260e083013560c083015282013560e0820152602086015201611864565b604082015290565b6101209060e0611110949695939661ffff6101a08401981683526001600160a01b03808251166020850152806020830151166040850152604082015116606084015260608101516080840152608081015160a0840152611ced60a082015160c085019060ff169052565b60c0810151828401520151610100820152019060608091805184526001600160a01b03602082015116602085015260408101511515604085015201511515910152565b908160809103126103fe57606060405191611d4a836113aa565b8035611d55816110f4565b83526020810135611d65816110f4565b60208401526040810135611d78816115b0565b60408401520135606082015290565b908160209103126103fe575190565b80518210156115ab5760209160051b010190565b6020818303126103fe57803567ffffffffffffffff918282116103fe57019160c0838203126103fe5760405192611de0846113c6565b8035611deb816110f4565b8452611df9602082016116e4565b6020850152604081013560408501526060810135606085015260808101359283116103fe57611e2f60a09261192794830161170b565b608085015201611105565b9490929360a09461ffff611e79949998996001600160a01b0380971689521660208801526040870152606086015260c0608086015260c085019061011f565b9416910152565b908160609103126103fe576040805191611e99836113fe565b8035611ea4816110f4565b83526020810135611eb4816110f4565b60208401520135604082015290565b91908260409103126103fe576020825192015190565b908160a09103126103fe57608060405191611ef383611437565b803583526020810135611f05816110f4565b60208401526040810135611f18816110f4565b6040840152606081013560608401520135608082015290565b6020818303126103fe57803567ffffffffffffffff918282116103fe57019160a0838203126103fe57604090815193611f6985611437565b8035611f74816110f4565b85526020810135611f84816116b1565b60208601528281013583860152606081013560608601526080810135908482116103fe5701906060828203126103fe57825193611fc0856113fe565b8235611fcb816110f4565b85526020830135611fdb816110f4565b6020860152838301359081116103fe57611ff5920161170b565b90820152608082015290565b93906115c495916101009461ffff6040956001600160a01b03809516895216602088015284870152606086015260a060808601528082511660a086015260208201511660c0850152015191606060e0820152019061011f565b1561206157565b606460405162461bcd60e51b815260206004820152601860248201527f4d61676e657461723a2076616c7565206d69736d6174636800000000000000006044820152fd5b908092918237016000815290565b3d156120de573d906120c4826116ef565b916120d26040519384611453565b82523d6000602084013e565b606090565b826004116103fe5760e0600319838581010301126103fe5760009283809361217c6001600160a01b03604051612118816113e2565b600484013590612127826110f4565b8181526024850135612138816110f4565b6020820152604485013560408201526064850135606082015261215d60848601611bb1565b608082015260a485013560a082015260c060c486013591015216612240565b61218b604051809481936120a5565b03925af1906121986120b3565b911590816121ae575b506121a95750565b612295565b905015386121a1565b60c0926121c58180856116c7565b90809591810103126103fe57600080949361217c6001600160a01b0383966040516121ef816113c6565b60a0808335936121fe856110f4565b848452602081013561220f816110f4565b60208501526040810135604085015261222a60608201611bb1565b6060850152608081013560808501520135910152165b6001600160a01b0316330361225157565b606460405162461bcd60e51b815260206004820152601660248201527f4d61676e657461723a20756e617574686f72697a6564000000000000000000006044820152fd5b604481511061232e576004810151810190602081602484019303126103fe5760248101519067ffffffffffffffff82116103fe570190806043830112156103fe576024820151916122e5836116ef565b916122f36040519384611453565b838352604484830101116103fe57611019926123169160446020850191016100fc565b60405191829162461bcd60e51b835260048301611674565b606460405162461bcd60e51b815260206004820152600e60248201527f526561736f6e20756e6b6e6f776e0000000000000000000000000000000000006044820152fdfea264697066735822122012548fd7998ce94714883cd926426d6c4821f24b21fcc070696a932af356fb7e64736f6c63430008120033";

type MagnetarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MagnetarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Magnetar__factory extends ContractFactory {
  constructor(...args: MagnetarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Magnetar> {
    return super.deploy(_owner, overrides || {}) as Promise<Magnetar>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override attach(address: string): Magnetar {
    return super.attach(address) as Magnetar;
  }
  override connect(signer: Signer): Magnetar__factory {
    return super.connect(signer) as Magnetar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MagnetarInterface {
    return new utils.Interface(_abi) as MagnetarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Magnetar {
    return new Contract(address, _abi, signerOrProvider) as Magnetar;
  }
}
