/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  YieldBoxMock,
  YieldBoxMockInterface,
} from "../../mocks/YieldBoxMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "addAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "assets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "depositAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523461001a57604051610695610020823961069590f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806327e235e31461006257806351c8c3f11461005d5780638d2e63b8146100585780639a9af97a146100535763cf35bdd003610088576102a2565b61022c565b6101fa565b61017d565b610118565b6001600160a01b031690565b90565b6001600160a01b0381165b0361008857565b600080fd5b9050359061009a82610076565b565b90602082820312610088576100739161008d565b61007390610067906001600160a01b031682565b610073906100b0565b610073906100c4565b906100e0906100cd565b600052602052604060002090565b610073916008021c81565b9061007391546100ee565b600061011361007392826100d6565b6100f9565b346100885761014361013361012e36600461009c565b610104565b6040519182918290815260200190565b0390f35b80610081565b9050359061009a82610147565b91906040838203126100885761007390610174818561014d565b9360200161008d565b346100885761019661019036600461015a565b90610307565b604051005b919060a083820312610088576101b1818461014d565b926101bf826020830161008d565b926100736101d0846040850161008d565b936101de816060860161014d565b9360800161014d565b90815260408101929161009a9160200152565b346100885761021661020d36600461019b565b939290926105a2565b9061014361022360405190565b928392836101e7565b346100885761021661023f36600461019b565b9392909261045c565b90602082820312610088576100739161014d565b6100736100736100739290565b906100e09061025c565b610073916008021c610067565b906100739154610273565b6100739061029d600191600092610269565b610280565b34610088576101436102bd6102b8366004610248565b61028b565b604051918291826001600160a01b03909116815260200190565b906001600160a01b03905b9181191691161790565b906102fc610073610303926100cd565b82546102d7565b9055565b9061031661009a926001610269565b6102ec565b61007390610067565b610073905461031b565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761036657604052565b61032e565b801515610081565b9050519061009a8261036b565b906020828203126100885761007391610373565b6001600160a01b0391821681529116602082015260608101929161009a9160400152565b6040513d6000823e3d90fd5b156103cb57565b60405162461bcd60e51b815260206004820152600f60248201526e3330b4b632b2103a3930b739b332b960891b6044820152606490fd5b6100739081565b6100739054610402565b634e487b7160e01b600052601160045260246000fd5b9190820180921161043657565b610413565b90600019906102e2565b906104556100736103039261025c565b825461043b565b6020919395945061048561048561048061048a93610478600090565b506001610269565b610324565b6100cd565b926323b872dd936104ba600061049f306100cd565b966104c58a6104ad60405190565b998a978896879560e01b90565b855260048501610394565b03925af190811561053a576104e96104f0926105089460009161050c575b506103c4565b60006100d6565b610502846104fd83610409565b610429565b90610445565b8190565b61052d915060203d8111610533575b6105258183610344565b810190610380565b386104e3565b503d61051b565b6103b8565b1561054657565b60405162461bcd60e51b815260206004820152600a6024820152690dcdee840cadcdeeaced60b31b6044820152606490fd5b6001600160a01b03909116815260408101929161009a9160200152565b9190820391821161043657565b91839594506020906105b2600090565b506105e66104856104856104806000976105df6105d76105d28a8c6100d6565b610409565b8b111561053f565b6001610269565b6106088563a9059cbb6106136105fb60405190565b998a968795869460e01b90565b845260048401610578565b03925af191821561053a576105089361063193610643575b506100d6565b6105028461063e83610409565b610595565b61065a9060203d8111610533576105258183610344565b61062b56fea264697066735822122003884fa76c03fd834222bef390619cc2a758983062f484b3a3032fd8c2c6ffee64736f6c63430008120033";

type YieldBoxMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YieldBoxMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YieldBoxMock__factory extends ContractFactory {
  constructor(...args: YieldBoxMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "YieldBoxMock";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YieldBoxMock> {
    return super.deploy(overrides || {}) as Promise<YieldBoxMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): YieldBoxMock {
    return super.attach(address) as YieldBoxMock;
  }
  override connect(signer: Signer): YieldBoxMock__factory {
    return super.connect(signer) as YieldBoxMock__factory;
  }
  static readonly contractName: "YieldBoxMock";

  public readonly contractName: "YieldBoxMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YieldBoxMockInterface {
    return new utils.Interface(_abi) as YieldBoxMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YieldBoxMock {
    return new Contract(address, _abi, signerOrProvider) as YieldBoxMock;
  }
}
