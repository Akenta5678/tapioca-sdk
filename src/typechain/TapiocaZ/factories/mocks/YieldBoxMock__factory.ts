/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  YieldBoxMock,
  YieldBoxMockInterface,
} from "../../mocks/YieldBoxMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "addAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "assets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "depositAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761043e908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816327e235e3146103415750806351c8c3f1146102e15780638d2e63b8146101c85780639a9af97a1461008d5763cf35bdd01461005a57600080fd5b3461008957602036600319011261008957816020936001600160a01b0392358152600185522054169051908152f35b8280fd5b508290346101c45761009e36610376565b5093928592919552602094600186526001600160a01b039186836064818b8820541693878c5195869485937f23b872dd000000000000000000000000000000000000000000000000000000008552168b8401523060248401528b60448401525af19081156101ba57849161018d575b501561014b571681528084528481209081549284840180941161013857505055825191818352820152f35b906011602492634e487b7160e01b835252fd5b6064848789519162461bcd60e51b8352820152600f60248201527f6661696c6564207472616e7366657200000000000000000000000000000000006044820152fd5b6101ad9150873d89116101b3575b6101a581836103b8565b8101906103f0565b8861010d565b503d61019b565b88513d86823e3d90fd5b5080fd5b508290346101c4576101d936610376565b5093929491906001600160a01b038092169182845260209684885286898620541061029f579087918552600182526044818a8720541693868b5195869485937fa9059cbb000000000000000000000000000000000000000000000000000000008552168a8401528a60248401525af1801561029557610278575b5081528084528481209081549284840393841161013857505055825191818352820152f35b61028e90863d88116101b3576101a581836103b8565b5086610253565b87513d85823e3d90fd5b606486898b519162461bcd60e51b8352820152600a60248201527f6e6f7420656e6f756768000000000000000000000000000000000000000000006044820152fd5b509034610089578060031936011261008957602435916001600160a01b03831680930361033d5735835260016020528220907fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905580f35b8380fd5b929190503461033d57602036600319011261033d57356001600160a01b03811680910361033d57835260208381529220548152f35b60a09060031901126103b357600435906001600160a01b039060243582811681036103b3579160443590811681036103b357906064359060843590565b600080fd5b90601f8019910116810190811067ffffffffffffffff8211176103da57604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126103b3575180151581036103b3579056fea2646970667358221220c00286531162b03bc4aec8f7fb1e18c6834a90eb5debcc0eddcbd80b26005c6464736f6c63430008120033";

type YieldBoxMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YieldBoxMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YieldBoxMock__factory extends ContractFactory {
  constructor(...args: YieldBoxMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "YieldBoxMock";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YieldBoxMock> {
    return super.deploy(overrides || {}) as Promise<YieldBoxMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): YieldBoxMock {
    return super.attach(address) as YieldBoxMock;
  }
  override connect(signer: Signer): YieldBoxMock__factory {
    return super.connect(signer) as YieldBoxMock__factory;
  }
  static readonly contractName: "YieldBoxMock";

  public readonly contractName: "YieldBoxMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YieldBoxMockInterface {
    return new utils.Interface(_abi) as YieldBoxMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YieldBoxMock {
    return new Contract(address, _abi, signerOrProvider) as YieldBoxMock;
  }
}
