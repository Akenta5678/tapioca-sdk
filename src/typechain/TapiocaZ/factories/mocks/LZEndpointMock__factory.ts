/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  LZEndpointMock,
  LZEndpointMockInterface,
} from "../../mocks/LZEndpointMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_chainId",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "srcChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "srcAddress",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dstAddress",
        type: "address",
      },
    ],
    name: "PayloadCleared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "srcChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "srcAddress",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dstAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "reason",
        type: "bytes",
      },
    ],
    name: "PayloadStored",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "srcAddress",
        type: "bytes",
      },
    ],
    name: "UaForceResumeReceive",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "ValueTransferFailed",
    type: "event",
  },
  {
    inputs: [],
    name: "blockNextMsg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultAdapterParams",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "_userApplication",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "_payInZRO",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "_adapterParams",
        type: "bytes",
      },
    ],
    name: "estimateFees",
    outputs: [
      {
        internalType: "uint256",
        name: "nativeFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "zroFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_srcChainId",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "_path",
        type: "bytes",
      },
    ],
    name: "forceResumeReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getConfig",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_chainID",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "_path",
        type: "bytes",
      },
    ],
    name: "getInboundNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_srcChainId",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "_srcAddress",
        type: "bytes",
      },
    ],
    name: "getLengthOfQueue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_chainID",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "_srcAddress",
        type: "address",
      },
    ],
    name: "getOutboundNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getReceiveLibraryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getReceiveVersion",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getSendLibraryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getSendVersion",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_srcChainId",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "_path",
        type: "bytes",
      },
    ],
    name: "hasStoredPayload",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "inboundNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isReceivingPayload",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isSendingPayload",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lzEndpointLookup",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mockChainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "msgsToDeliver",
    outputs: [
      {
        internalType: "address",
        name: "dstAddress",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextMsgBlocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "outboundNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFeeConfig",
    outputs: [
      {
        internalType: "uint256",
        name: "zroFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nativeBP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_srcChainId",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "_path",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "_dstAddress",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_nonce",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "_gasLimit",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
    ],
    name: "receivePayload",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "relayerFeeConfig",
    outputs: [
      {
        internalType: "uint128",
        name: "dstPriceRatio",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "dstGasPriceInWei",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "dstNativeAmtCap",
        type: "uint128",
      },
      {
        internalType: "uint64",
        name: "baseGas",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "gasPerByte",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_srcChainId",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "_path",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
    ],
    name: "retryPayload",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_chainId",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "_path",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
      {
        internalType: "address payable",
        name: "_refundAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_zroPaymentAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_adapterParams",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "setConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_adapterParams",
        type: "bytes",
      },
    ],
    name: "setDefaultAdapterParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "destAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "lzEndpointAddr",
        type: "address",
      },
    ],
    name: "setDestLzEndpoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_oracleFee",
        type: "uint256",
      },
    ],
    name: "setOracleFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_zroFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nativeBP",
        type: "uint256",
      },
    ],
    name: "setProtocolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "setReceiveVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_dstPriceRatio",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_dstGasPriceInWei",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_dstNativeAmtCap",
        type: "uint128",
      },
      {
        internalType: "uint64",
        name: "_baseGas",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "_gasPerByte",
        type: "uint64",
      },
    ],
    name: "setRelayerPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "setSendVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "storedPayload",
    outputs: [
      {
        internalType: "uint64",
        name: "payloadLength",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "dstAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "payloadHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523462000030576200001e62000018620000c2565b620005d4565b604051613391620007b7823961339190f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200006d57604052565b62000035565b906200008a6200008260405190565b92836200004b565b565b61ffff8116036200003057565b905051906200008a826200008c565b906020828203126200003057620000bf9162000099565b90565b620000bf62003b4880380380620000d98162000073565b928339810190620000a8565b9060ff905b9181191691161790565b62000104620000bf620000bf9290565b60ff1690565b906200011e620000bf6200012692620000f4565b8254620000e5565b9055565b9061ff009060081b620000ea565b906200014c620000bf6200012692620000f4565b82546200012a565b9061ffff90620000ea565b62000173620000bf620000bf9261ffff1690565b61ffff1690565b906200018e620000bf62000126926200015f565b825462000154565b620000bf60a062000073565b620001b2620000bf620000bf9290565b6001600160801b031690565b9052565b620001d2620000bf620000bf9290565b6001600160401b031690565b906001600160801b0390620000ea565b620000bf90620001b2906001600160801b031682565b9062000218620000bf6200012692620001ee565b8254620001de565b906001600160801b03199060801b620000ea565b9062000248620000bf6200012692620001ee565b825462000220565b90600160801b600160c01b039060801b620000ea565b620000bf90620001d2906001600160401b031682565b9062000290620000bf620001269262000266565b825462000250565b906001600160c01b03199060c01b620000ea565b90620002c0620000bf620001269262000266565b825462000298565b6200008a919062000360906080906001906200031081620002fb620002f488516001600160801b031690565b8262000204565b60208701516001600160801b03169062000234565b0192620003326200032b60408301516001600160801b031690565b8562000204565b620003526200034b60608301516001600160401b031690565b856200027c565b01516001600160401b031690565b90620002ac565b906200008a91620002c8565b620000bf604062000073565b620000bf620000bf620000bf9290565b9060001990620000ea565b90620003ae620000bf62000126926200037f565b82546200038f565b6200008a9190620003d290602090600190620003d98185875190565b906200039a565b0192015190565b906200008a91620003b6565b634e487b7160e01b600052602260045260246000fd5b906001600283049216801562000425575b60208310146200041f57565b620003ec565b91607f169162000413565b9160001960089290920291821b911b620000ea565b91906200045a620000bf62000126936200037f565b90835462000430565b6200008a9160009162000445565b8181106200047d575050565b806200048d600060019362000463565b0162000471565b9190601f8111620004a457505050565b620004b86200008a93600052602060002090565b906020601f840181900483019310620004dc575b6020601f90910104019062000471565b9091508190620004cc565b90620004f1815190565b906001600160401b0382116200006d57620005198262000512855462000402565b8562000494565b602090601f83116001146200055857620001269291600091836200054c575b5050600019600883021c1916906002021790565b01519050388062000538565b601f198316916200056e85600052602060002090565b9260005b818110620005af5750916002939185600196941062000595575b50505002019055565b01516000196008601f8516021c191690553880806200058c565b9193602060018192878701518155019501920162000572565b906200008a91620004e7565b62000648620006a562000695620006ad936200060d600191620005f983600c6200010a565b6200060683600c62000138565b826200017a565b6200067f620006856064826200066f678ac7230489e80000620006696000620006596402540be4006200063f62000196565b9d8e91620001a2565b6001600160801b0381169190930152565b6001600160801b031660208c0152565b620001a2565b6001600160801b03166040890152565b620001c2565b6001600160401b03166060860152565b6001600160401b03166080830152565b600262000367565b620006f7670de0b6b3a7640000620006ef620006e86103e8620006e2620006de620006d762000373565b956200037f565b8552565b6200037f565b6020830152565b6004620003e0565b620007156200070d662386f26fc100006200037f565b60066200039a565b6200008a620007316200072b62030d406200037f565b62000778565b6007620005c8565b62000173620000bf620000bf9290565b620001be9061ffff1660f01b90565b6002816200076e62000774936020969562000749565b01918252565b0190565b620000bf620007a9916200078a606090565b5062000797600162000739565b60405193849260208401928362000758565b908103825203826200004b56fe6080604052600436101561001257600080fd5b60003560e01c806307d3277f1461025357806307e0db1714610249578063096568f6146101cc5780630eaf6ea61461024e57806310ddb1371461024957806312a9ee6b14610244578063240de2771461023f578063272bd3841461023a5780632c365e25146102355780633408e470146102305780633e0dd83e1461022b57806340a7bb101461022657806342d65a8d1461022157806371ba2fd61461020357806376a386dc1461021c5780637a145748146102175780637f6df8e614610212578063907c5e7e1461020d5780639924d33b146102085780639c729da114610203578063aaff5f16146101fe578063b2086499146101f9578063b6d9ef60146101f4578063c08f15a1146101ef578063c2fa4813146101ea578063c5803100146101e5578063c81b383a146101e0578063ca066b35146101db578063cbed8b9c146101d6578063d23104f1146101d1578063da1a7c9a146101cc578063db14f305146101c7578063e97a448a146101c2578063f5ecbdbc146101bd578063f9cd3ceb146101b8578063fbba623b146101b35763fdc07c70036102635761124b565b611233565b6111f3565b6111b2565b61115b565b611140565b61035e565b611104565b6110e7565b61107d565b611062565b61101c565b610f68565b610ed1565b610e9f565b610e6f565b610e09565b610aab565b610d99565b610d36565b610c05565b610bcf565b610b81565b610a82565b610a66565b6109c5565b610984565b610968565b6108bd565b610856565b610808565b610311565b6103f6565b6102b1565b600091031261026357565b600080fd5b61026f9081565b90565b61026f9054610268565b60049061026f600161028d84610272565b9301610272565b9052565b9081526040810192916102af9160200152565b0152565b565b34610263576102c1366004610258565b6102c961027c565b906102df6102d660405190565b92839283610298565b0390f35b61ffff81165b0361026357565b905035906102af826102e3565b906020828203126102635761026f916102f0565b34610263576103213660046102fd565b506040515b005b6001600160a01b031690565b6102e981610328565b905035906102af82610334565b906020828203126102635761026f9161033d565b34610263576102df61037961037436600461034a565b6128b3565b6040519182918261ffff909116815260200190565b909182601f83011215610263578135916001600160401b03831161026357602001926001830284011161026357565b919091604081840312610263576103d483826102f0565b9260208201356001600160401b038111610263576103f2920161038e565b9091565b34610263576102df61041261040c3660046103bd565b91612838565b60405191829182901515815260200190565b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b0382111761045b57604052565b610424565b906102af61046d60405190565b928361043a565b6001600160401b03811161045b57602090601f01601f19160190565b0190565b90826000939282370152565b909291926104b56104b082610474565b610460565b93818552602085019082840111610263576102af92610494565b9080601f830112156102635781602061026f933591016104a0565b806102e9565b905035906102af826104ea565b90916060828403126102635761051383836102f0565b926020830135906001600160401b038211610263576105378161026f9386016104cf565b936040016104f0565b61055161026f61026f9261ffff1690565b61ffff1690565b9061056290610540565b600052602052604060002090565b60005b8381106105835750506000910152565b8181015183820152602001610573565b6104906105ab926020926105a5815190565b94859290565b93849101610570565b6105c46104909160209493610593565b918252565b6105de6105d560405190565b928392836105b4565b03902090565b61026f916105c9565b634e487b7160e01b600052603260045260246000fd5b80548210156106265761061d600291600052602060002090565b91020190600090565b6105ed565b61026f9054610328565b61026f9060a01c5b6001600160401b031690565b61026f9054610635565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610689575b602083101461068457565b610653565b91607f1691610679565b805460009392916106b06106a683610669565b8085529360200190565b916001811690811561070257506001146106c957505050565b6106dc9192939450600052602060002090565b916000925b8184106106ee5750500190565b8054848401526020909301926001016106e1565b92949550505060ff1916825215156020020190565b9061026f91610693565b906102af61073b9261073260405190565b93848092610717565b038361043a565b600093929161075b9161075690600b610558565b6105e4565b805482101561078f5761076f929350610603565b506107798161062b565b9161026f600161078884610649565b9301610721565b8380fd5b61029490610328565b6107bd6107c6602093610490936107b1815190565b80835293849260200190565b95869101610570565b601f01601f191690565b6107fb61026f9492936107eb60608401956000850190610793565b6001600160401b03166020830152565b604081840391015261079c565b34610263576102df61082461081e3660046104fd565b91610742565b604051919391938493846107d0565b91906040838203126102635761026f9061084d81856104f0565b936020016104f0565b346102635761086f610869366004610833565b90612b47565b604051005b634e487b7160e01b600052600060045260246000fd5b9060001061089b5761026f90610721565b610874565b61026f6000600761088a565b602080825261026f9291019061079c565b34610263576108cd366004610258565b6102df6108d86108a0565b604051918291826108ac565b6001600160801b0381166102e9565b905035906102af826108e4565b6001600160401b0381166102e9565b905035906102af82610900565b919060a0838203126102635761093281846108f3565b9261094082602083016108f3565b9261026f61095184604085016108f3565b9361095f816060860161090f565b9360800161090f565b346102635761086f61097b36600461091c565b93929092612afc565b3461026357610994366004610258565b6102df6103796125aa565b61026f916008021c5b60ff1690565b9061026f915461099f565b61026f600260016109ae565b34610263576109d5366004610258565b6102df6104126109b9565b8015156102e9565b905035906102af826109e0565b91909160a08184031261026357610a0c83826102f0565b92610a1a816020840161033d565b9260408301356001600160401b0381116102635782610a3a9185016104cf565b92610a4883606083016109e8565b9260808201356001600160401b0381116102635761026f92016104cf565b34610263576102c9610a793660046109f5565b93929092612504565b346102635761086f610a953660046103bd565b91612933565b6020810192916102af9190610793565b34610263576102df610ac6610ac136600461034a565b61286e565b60405191829182610a9b565b91909160408184031261026357610ae983826102f0565b9260208201356001600160401b0381116102635761026f92016104cf565b61026f9061063d565b61026f9054610b07565b61026f9060401c610328565b61026f9054610b1a565b90610756610b3f92600a610558565b610b4881610b10565b9161026f600161028d84610b26565b6001600160401b0390911681526060810193926102af9290916040916102ab906020830190610793565b34610263576102df610b9d610b97366004610ad2565b90610b30565b60405191939193849384610b57565b91906040838203126102635761026f90610bc681856102f0565b9360200161033d565b34610263576102df610beb610be5366004610bac565b906124dc565b604051918291826001600160401b03909116815260200190565b34610263576102df610c21610c1b3660046103bd565b916129f7565b6040519182918290815260200190565b61026f905b6001600160801b031690565b61026f9054610c31565b61026f9060801c610c36565b61026f9054610c4c565b61026f9060801c61063d565b61026f9054610c62565b61026f9060c01c61063d565b61026f9054610c78565b6002610c9981610c42565b91610ca382610c58565b91610cb060018201610c42565b9161026f6001610cc1818501610c6e565b9301610c84565b909594926102af94610d17610d2792610d07608096610cf760a088019c60008901906001600160801b03169052565b6001600160801b03166020870152565b6001600160801b03166040850152565b6001600160401b03166060830152565b01906001600160401b03169052565b3461026357610d46366004610258565b6102df610d51610c8e565b91610d5e95939560405190565b95869586610cc8565b61026f916008021c61063d565b9061026f9154610d67565b610d9461026f92610756600893600094610558565b610d74565b34610263576102df610beb610daf366004610ad2565b90610d7f565b60608183031261026357610dc982826102f0565b9260208201356001600160401b0381116102635783610de991840161038e565b92909360408201356001600160401b038111610263576103f2920161038e565b346102635761086f610e1c366004610db5565b939290926126b6565b61026f90610328906001600160a01b031682565b61026f90610e25565b61026f90610e39565b9061056290610e42565b610d9461026f92610e6a600993600094610558565b610e4b565b34610263576102df610beb610e85366004610bac565b90610e55565b906020828203126102635761026f916104f0565b346102635761086f610eb2366004610e8b565b612b63565b91906040838203126102635761026f90610bc6818561033d565b346102635761086f610ee4366004610eb7565b90612a22565b60c08183031261026357610efe82826102f0565b9260208201356001600160401b0381116102635783610f1e91840161038e565b929093610f2e816040840161033d565b92610f3c826060850161090f565b92610f4a83608083016104f0565b9260a08201356001600160401b038111610263576103f2920161038e565b346102635761086f610f7b366004610eea565b969590959491949392936124ab565b909160c08284031261026357610fa083836102f0565b9260208301356001600160401b0381116102635781610fc09185016104cf565b9260408101356001600160401b0381116102635782610fe091830161038e565b929093610ff0826060850161033d565b92610ffe836080830161033d565b9260a08201356001600160401b0381116102635761026f92016104cf565b61086f61102a366004610f8a565b9594909493919361199d565b61026f916008021c610328565b9061026f9154611036565b600061105d61026f9282610e4b565b611043565b34610263576102df610ac661107836600461034a565b61104e565b346102635761108d366004610258565b6102df610412612894565b90608082820312610263576110ad81836102f0565b926110bb82602085016102f0565b926110c983604083016104f0565b9260608201356001600160401b0381116102635761026f92016104cf565b34610263576110f7366004611098565b5050505061032660405190565b3461026357611114366004610258565b61086f612a17565b61026f916008021c610551565b9061026f915461111c565b61026f60006001611129565b3461026357611150366004610258565b6102df610379611134565b346102635761116b366004610258565b6102df610412612878565b6080818303126102635761118a82826102f0565b9261026f61119b84602085016102f0565b936111a9816040860161033d565b936060016104f0565b34610263576102df6108d86111c8366004611176565b9291909161289e565b61026f916008021c81565b9061026f91546111d1565b61026f600060066111dc565b3461026357611203366004610258565b6102df610c216111e7565b906020828203126102635781356001600160401b0381116102635761026f92016104cf565b346102635761086f61124636600461120e565b612b6e565b34610263576102df610beb6112613660046103bd565b916124bb565b61026f906109a8565b61026f9054611267565b6109a861026f61026f9290565b61026f600161127a565b60208082526021908201527f4c617965725a65726f4d6f636b3a206e6f2073656e64207265656e7472616e636040820152607960f81b606082015260800190565b156112d957565b60405162461bcd60e51b8152806112f260048201611291565b0390fd5b61026f600261127a565b9060ff905b9181191691161790565b6109a861026f61026f9260ff1690565b9061132f61026f6113369261130f565b8254611300565b9055565b9491926102af969361137e9592611351600c611270565b9761137361135d611287565b9961136d60ff8c165b9160ff1690565b146112d2565b61138561137e6112f6565b600c61131f565b6116d7565b61026f61026f61026f9290565b6020808252602c908201527f4c617965725a65726f4d6f636b3a20696e636f72726563742072656d6f74652060408201526b616464726573732073697a6560a01b606082015260800190565b156113ea57565b60405162461bcd60e51b8152806112f260048201611397565b61032861026f61026f9290565b61026f90611403565b60208082526037908201527f4c617965725a65726f4d6f636b3a2064657374696e6174696f6e204c6179657260408201527f5a65726f20456e64706f696e74206e6f7420666f756e64000000000000000000606082015260800190565b1561147d57565b60405162461bcd60e51b8152806112f260048201611419565b61026f90610721565b61026f9136916104a0565b60208082526029908201527f4c617965725a65726f4d6f636b3a206e6f7420656e6f756768206e617469766560408201526820666f72206665657360b81b606082015260800190565b156114fa57565b60405162461bcd60e51b8152806112f2600482016114aa565b634e487b7160e01b600052601160045260246000fd5b6001600160401b03166001600160401b0381146115465760010190565b611513565b906001600160401b0390611305565b61063d61026f61026f926001600160401b031690565b9061158061026f6113369261155a565b825461154b565b9190820391821161154657565b906105c46104b083610474565b3d156115bb576115b03d611594565b903d6000602084013e565b606090565b6020808252601f908201527f4c617965725a65726f4d6f636b3a206661696c656420746f20726566756e6400604082015260600190565b156115fe57565b60405162461bcd60e51b8152806112f2600482016115c0565b60601b90565b61026f90611617565b61163261029491610328565b61161d565b60148161164961049093839695611626565b018092611626565b61026f90610551565b61026f9054611651565b92949061026f96946116a761169c6116b7936116be9661168f60c08a019260008b019061ffff169052565b88820360208a015261079c565b976040870190610793565b6001600160401b03166060850152565b6080830152565b60a081840391015261079c565b6040513d6000823e3d90fd5b919060149096959394966117036116ec825190565b6116fd6116f9602861138a565b9190565b146113e3565b0151926000968761171c6117178783610e4b565b61062b565b9661172682611410565b986117436117338b610328565b61173c8b610328565b1415611476565b80516117516116f98561138a565b111561198c57935b339961176490610328565b9061176e90610328565b14158461177b838861149f565b91611787928c8a612504565b50958934916117938990565b83101561179f906114f3565b6117aa906009610558565b906117b491610e4b565b966117be88610b10565b6117c790611529565b97886117d291611570565b6117db91611587565b926117e58361138a565b8411946118509461184a94611805936118559861194f575b505050613293565b90919792506118138d61138a565b82116118d7575b505061184561182860405190565b809b6118398b602084019283611637565b9081038252038b61043a565b61149f565b95610e42565b610e42565b9163c2fa4813611865600161165a565b94843b1561026357889661188f94889461189a9361188260405190565b9b8c9a8b998a9860e01b90565b885260048801611664565b03925af180156118d2576118ac575050565b816102af92903d106118cb575b6118c3818361043a565b810190610258565b503d6118b9565b6116cb565b6118e090610e42565b61190b8d806118ee60405190565b806118f88161026f565b039086865af16119066115a1565b501590565b1561181a5761193a7f2c7a964ca3de5ec1d42d9822f9bbd0eb142a59cc9f855e9d93813b773192c7a39261138a565b9161194460405190565b600090a3388061181a565b6119849261195d8392610e42565b9061196760405190565b90816119728161026f565b03925af161197e6115a1565b506115f7565b388c816117fd565b506119976007611496565b93611759565b906102af96959493929161133a565b61026f9060081c6109a8565b61026f90546119ac565b60208082526024908201527f4c617965725a65726f4d6f636b3a206e6f2072656365697665207265656e7472604082015263616e637960e01b606082015260800190565b15611a0d57565b60405162461bcd60e51b8152806112f2600482016119c2565b9061ff009060081b611305565b90611a4361026f6113369261130f565b8254611a26565b9592611a8b95926102af989592611a61600c6119b8565b98611a80611a6d611287565b9a611a7a60ff8d16611366565b14611a06565b611a92611a8b6112f6565b600c611a33565b6120e4565b90916104909083908093610494565b6105c4906020949361049093611a97565b90916105de90611ac660405190565b93849384611aa6565b909161026f92611ab7565b6020808252601a908201527f4c617965725a65726f4d6f636b3a2077726f6e67206e6f6e6365000000000000604082015260600190565b15611b1857565b60405162461bcd60e51b8152806112f260048201611ada565b61026f9060101c6109a8565b61026f9054611b31565b91906107c681611b5e816104909560209181520190565b8095610494565b91611ba99161026f97959694611b9792611b8a6080870193600088019061ffff169052565b8583036020870152611b47565b6001600160401b039095166040830152565b6060818503910152611b47565b61063d61026f61026f9290565b61026f6060610460565b9061029490610328565b516001600160401b031690565b61026f9051610328565b9068010000000000000000600160e01b039060401b611305565b90611c1861026f61133692610e42565b8254611bee565b5190565b9060001990611305565b90611c3d61026f6113369261026f565b8254611c23565b6102af9190611c8390604090600190611c7b81611c69611c6388611bd7565b82611570565b611c7560208801611be4565b90611c08565b019201611c1f565b90611c2d565b906102af91611c44565b969294611cd7611ccc89611cf49861026f9c9a96611cbf611ce797600060c0860195019061ffff169052565b8c830360208e0152611b47565b9560408a0190610793565b6001600160401b03166060880152565b8583036080870152611b47565b9160a081840391015261079c565b9062ff00009060101b611305565b151590565b90611d2561026f61133692611d10565b8254611d02565b61026f6000611594565b61026f611d2c565b906001600160a01b0390611305565b90611d5d61026f61133692610e42565b8254611d3e565b9067ffffffffffffffff60a01b9060a01b611305565b90611d8a61026f6113369261155a565b8254611d64565b9160001960089290920291821b911b611305565b9190611db661026f6113369361138a565b908354611d91565b6102af91600091611da5565b818110611dd5575050565b80611de36000600193611dbe565b01611dca565b9190601f8111611df857505050565b611e0a6102af93600052602060002090565b906020601f840181900483019310611e2d575b6020601f909101045b0190611dca565b9091508190611e1d565b600019600883021c1916906002021790565b90611e52815190565b906001600160401b03821161045b57611e7582611e6f8554610669565b85611de9565b602090601f8311600114611ea357611336929160009183611e98575b5050611e37565b015190503880611e91565b601f19831691611eb885600052602060002090565b9260005b818110611ef757509160029391856001969410611edd575b50505002019055565b01516000196008601f8516021c19165b9055388080611ed4565b91936020600181928787015181550195019201611ebc565b906102af91611e49565b6102af9190611f5790604090600190611f5081611f3e611f3888611be4565b82611d4d565b611f4a60208801611bd7565b90611d7a565b0192015190565b90611f0f565b919061089b576102af91611f19565b90815491600160401b83101561045b5782611f8f9160016102af95018155610603565b90611f5d565b60001981146115465760010190565b9190820180921161154657565b61026f9054610669565b9080821461208a57611fcc81611fb1565b906001600160401b03821161045b57611fe982611e6f8554610669565b600090601f83116001146120165761133692916000918361200b575050611e37565b015490503880611e91565b9061202b601f19841692600052602060002090565b9061203b85600052602060002090565b92815b8181106120725750916002939185600196941061205e5750505002019055565b01546000196008601f8516021c1916611eed565b9193600180602092878701548155019501920161203e565b5050565b906102af91611fbb565b908082036120a4575050565b6102af9160019081906120cc81611f4a866120c76120c18261062b565b84611d4d565b610649565b0191019061208e565b919061089b576102af91612098565b61026f98959794969397600a9061215b600161210d61026f88886121088989610558565b611acf565b6121558c61214f6121426121278c8c6121088d6008610558565b61063d61213b61213683610b10565b611529565b8092611570565b916001600160401b031690565b14611b11565b01610272565b61216a6116f960009d8e61138a565b1461225e57505061218f61026f6121bb96946121b4969461210861184595600b610558565b966121a461219b611bc3565b998b8b01611bcd565b6001600160401b03166020890152565b6040850152565b81546121c96116f98661138a565b1115612252576121d98383611f6c565b6121e28461138a565b82546121fc61026f6001926121f68461138a565b90611587565b821015612241579061223761223c9261223161222b61222561221e868a610603565b509361138a565b85611fa4565b87610603565b906120d5565b611f95565b6121e2565b505092611f8f906102af9392610603565b9250906102af91611f6c565b61227460019b999a95989b979497969396611b3d565b156123465750906102af986122ff896122fa8a8a6121088b8a996122f58a6122ee61233c9f9e8f906122b8816122b26122ad6122e59490565b611bb6565b9561149f565b6122ca6122c3825190565b9160200190565b20936122d4611bc3565b9c8d01906001600160401b03169052565b60208b01611bcd565b6040890152565b610558565b611c89565b612307611d36565b937f0f9e4d95b62f08222d612b5ab92039cd8fbbbea550a95e8df9f927436bbdf5db9861233360405190565b98899889611c93565b0390a16001611d15565b61235a611850869998979695949395610e42565b621d3567813b1561026357879261238e8c80948f946123998a8f8e988c9161238160405190565b9c8d9b8c9a8b9860e01b90565b885260048801611b65565b0393f1908161248f575b50612484576001986123bc565b50505050505050505050565b8886886123c76115a1565b96886123d288611bb6565b6123dc898961149f565b80519060200120906123ec611bc3565b9687019061240291906001600160401b03169052565b61240f8e60208801611bcd565b604086015261241d91610558565b9161242792611acf565b9061243191611c89565b7f0f9e4d95b62f08222d612b5ab92039cd8fbbbea550a95e8df9f927436bbdf5db9761245c60405190565b9788976124699789611c93565b0390a161247591611d15565b388080808080808080806123b0565b505050505050505050565b6124a5908a3d8c116118cb576118c3818361043a565b386123a3565b906102af97969594939291611a4a565b916124d79161210861026f946124cf600090565b506008610558565b610b10565b61026f91610e6a6124d7926124ef600090565b506009610558565b61055161026f61026f9290565b61254d9192949394612514600090565b93849561251f815190565b61252c6116f9600061138a565b111561259957925b6125476125416001945190565b936124f7565b90613062565b9161256261255b6006610272565b8486612f3b565b931561258957506125869161257691611fa4565b6125806006610272565b90611fa4565b91565b9261258692612576925090611fa4565b506125a46007611496565b92612534565b61026f600161165a565b6020808252818101527f4c617965725a65726f4d6f636b3a206e6f2073746f726564207061796c6f6164604082015260600190565b156125f057565b60405162461bcd60e51b8152806112f2600482016125b4565b61026f61026f61026f926001600160401b031690565b6020808252601e908201527f4c617965725a65726f4d6f636b3a20696e76616c6964207061796c6f61640000604082015260600190565b1561265d57565b60405162461bcd60e51b8152806112f26004820161261f565b9061269d6126af916102af96989795606095611b8a6080870193600088019061ffff169052565b6001600160401b039097166040830152565b0190610793565b91939290926126ce61026f868661210887600a610558565b90600182016127496126df82610272565b6000926126f96126ee8561138a565b9283905b14156125e9565b83859601956127126116f961270d89610b10565b612609565b1480612807575b61272290612656565b61274461272e87610b26565b9661273b611c6387611bb6565b611c7586611410565b611c2d565b61275c6124d78888612108896008610558565b9161276961185085610e42565b621d356790803b156102635761238e84899361279b82968d9b8f8b9061278e60405190565b9e8f9a8b998a9860e01b90565b03925af19384156118d2576127e5946127ea575b50507f612434f39581c8e7d99746c9c20c6eb0ce8c0eb99f007c5719d620841370957d956127dc60405190565b95869586612676565b0390a1565b8161280092903d106118cb576118c3818361043a565b38806127af565b50612722612815868961149f565b6128206122c3825190565b206128306116f961026f85610272565b149050612719565b61026f6128599360019361210861215594612851600090565b50600a610558565b6128696116f961026f600061138a565b141590565b5061026f30610e42565b612882600c611270565b6128906113666109a86112f6565b1490565b612882600c6119b8565b505050506128aa606090565b5061026f611d36565b5061026f60016124f7565b6020808252601d908201527f4c617965725a65726f4d6f636b3a20696e76616c69642063616c6c6572000000604082015260600190565b156128fc57565b60405162461bcd60e51b8152806112f2600482016128be565b61ffff91909116815260406020820181905261026f93910191611b47565b906102af92916129b861294f61026f858561210886600a610558565b6001810161274461295f82610272565b92611c756000809261297b6129738361138a565b9788906126f2565b01916129a161298984610b26565b61299b61299533610328565b91610328565b146128f5565b6129b36129ad82611bb6565b84611570565b611410565b7f23d2684f396e92a6e2ff2d16f98e6fea00d50cb27a64b531bc0748f730211f986129e260405190565b806129ef86868684612915565b0390a1612e21565b91612a139161210861026f94612a0b600090565b50600b610558565b5490565b6102af600180611d15565b90612a316102af926000610e4b565b611d4d565b906001600160801b0390611305565b610c3661026f61026f926001600160801b031690565b90612a6b61026f61133692612a45565b8254612a36565b906fffffffffffffffffffffffffffffffff199060801b611305565b90612a9e61026f61133692612a45565b8254612a72565b9067ffffffffffffffff60801b9060801b611305565b90612acb61026f6113369261155a565b8254612aa5565b906001600160c01b03199060c01b611305565b90612af561026f6113369261155a565b8254612ad2565b92612b2c60016102af9695612b24612b3295600292612b1f600085019182612a5b565b612a8e565b019384612a5b565b82612abb565b612ae5565b90611c3d61026f6113369261138a565b9060016102af92612b5d60049160008301612b37565b01612b37565b6102af906006612b37565b6102af906007611f0f565b906102af612bbf6001612b8a611bc3565b94612b9d612b978261062b565b87611bcd565b612bb9612ba982610649565b6001600160401b03166020880152565b01610721565b6040840152565b61026f90612b79565b91612c049161026f9694612bf292611b8a6080870193600088019061ffff169052565b6001600160401b039094166040830152565b606081840391015261079c565b634e487b7160e01b600052603160045260246000fd5b90612c3a90600019906020036008021c90565b8154169055565b90600091612c5f612c5782600052602060002090565b928354611e37565b905555565b9192906020821015612cbc57601f8411600114612c8657611336929350611e37565b5090612cb76102af936001612cae612ca385600052602060002090565b92601f602091010490565b82019101611dca565b612c41565b50612cf58293612cd3600194600052602060002090565b611e266020601f860104820192601f861680612cfd575b50601f602091010490565b600202179055565b612d0990888603612c27565b38612cea565b929091600160401b821161045b5760201115612d56576020811015612d375761133691611e37565b60019160ff1916612d4d84600052602060002090565b55600202019055565b60019150600202019055565b908154612d6e81610669565b90818311612d97575b818310612d85575b50505050565b612d8e93612c64565b38808080612d7f565b612da383838387612d0f565b612d77565b8181029291811591840414171561154657565b60006102af91612d62565b9060000361089b576102af90612dbb565b60008082556102af91600101612dc6565b9060000361089b576102af90612dd7565b80548015612e1c576000190190612e19612e138383610603565b90612de8565b55565b612c11565b91929092612e3861026f828661210887600b610558565b925b8354600090612e4b6116f98361138a565b1115612f0b57612e72612e6c61222b612e62885490565b6121f6600161138a565b50612bc6565b612e83611850611850848401611be4565b621d35676040612e9560208501611bd7565b93015191803b1561026357612ec3858b93612ecf82968b98612eb660405190565b998a988997889660e01b90565b86528d60048701612bcf565b03925af180156118d257612eee575b5050612ee984612df9565b612e3a565b81612f0492903d106118cb576118c3818361043a565b3880612ede565b505050915050565b634e487b7160e01b600052601260045260246000fd5b905b908115612f36570490565b612f13565b90919015612f50575061026f90506004610272565b612f60612f709161026f93611fa4565b612f6a6005610272565b90612da8565b612f7b61271061138a565b90612f29565b61026f61026f61026f926001600160801b031690565b60208082526026908201527f4c617965725a65726f4d6f636b3a206473744e6174697665416d7420746f6f2060408201526503630b933b2960d51b606082015260800190565b15612fe457565b60405162461bcd60e51b8152806112f260048201612f97565b610c3661026f61026f926001600160401b031690565b61302e906001600160801b03165b916001600160801b031690565b02906001600160801b03821691820361154657565b610c3661026f61026f9290565b612f2b906001600160801b0316613021565b505050613076613070600090565b92613293565b506000949194508160029361309561308d866124f7565b9161ffff1690565b14613182575b508290506130a881610c58565b90600101946130b686610c6e565b6130bf90612609565b906130c991611fa4565b906130d390612f81565b906130dd91612da8565b6130e691611fa4565b6130ef82610c42565b6130f890612f81565b61310191612da8565b906402540be400916131128361138a565b61311b91612f29565b9361312582610c58565b9061312f90610c84565b61313890612ffd565b61314191613013565b9061314b90610c42565b61315491613013565b9061315e90613043565b61316791613050565b61317090612f81565b61317991612da8565b61026f91611fa4565b6131ac92506131a761319660018601610c42565b6131a08491612f81565b1015612fdd565b611fa4565b388061309b565b602080825260159082015274496e76616c69642061646170746572506172616d7360581b604082015260600190565b156131e957565b60405162461bcd60e51b8152806112f2600482016131b3565b602080825260129082015271556e737570706f727465642074785479706560701b604082015260600190565b1561323557565b60405162461bcd60e51b8152806112f260048201613202565b6020808252600b908201526a47617320746f6f206c6f7760a81b604082015260600190565b1561327a57565b60405162461bcd60e51b8152806112f26004820161324e565b6000808251936022946132a86116f98761138a565b14801561333a575b6132b9906131e2565b600284015194840151936132cd60016124f7565b61ffff871614801561331f575b6132e39061322e565b6132f76132f0600061138a565b8611613273565b61330160026124f7565b61ffff87161461330e5750565b925090506056604283015192015190565b506132e361332d60026124f7565b61ffff88161490506132da565b506132b9613346855190565b6133536116f9604261138a565b1190506132b056fea264697066735822122003fd2d0cb81d2bde814fe191ae153cdbca2cff79d6a08f45de99df4dfecbb17964736f6c63430008120033";

type LZEndpointMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LZEndpointMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LZEndpointMock__factory extends ContractFactory {
  constructor(...args: LZEndpointMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "LZEndpointMock";
  }

  override deploy(
    _chainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LZEndpointMock> {
    return super.deploy(_chainId, overrides || {}) as Promise<LZEndpointMock>;
  }
  override getDeployTransaction(
    _chainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_chainId, overrides || {});
  }
  override attach(address: string): LZEndpointMock {
    return super.attach(address) as LZEndpointMock;
  }
  override connect(signer: Signer): LZEndpointMock__factory {
    return super.connect(signer) as LZEndpointMock__factory;
  }
  static readonly contractName: "LZEndpointMock";

  public readonly contractName: "LZEndpointMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LZEndpointMockInterface {
    return new utils.Interface(_abi) as LZEndpointMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LZEndpointMock {
    return new Contract(address, _abi, signerOrProvider) as LZEndpointMock;
  }
}
