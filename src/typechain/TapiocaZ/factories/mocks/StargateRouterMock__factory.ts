/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  StargateRouterMock,
  StargateRouterMockInterface,
} from "../../mocks/StargateRouterMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_refundAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountLD",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "dstGasForCall",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dstNativeAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "dstNativeAddr",
            type: "bytes",
          },
        ],
        internalType: "struct IStargateRouterBase.lzTxObj",
        name: "",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "_to",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523461002a576100196100146100c2565b610136565b6040516106ae61014282396106ae90f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b0382111761006657604052565b61002f565b9061007f61007860405190565b9283610045565b565b6001600160a01b031690565b90565b6001600160a01b0381160361002a57565b9050519061007f82610090565b9060208282031261002a5761008d916100a1565b61008d6107f0803803806100d58161006b565b9283398101906100ae565b61008d90610081906001600160a01b031682565b61008d906100e0565b61008d906100f4565b9061011661008d610132926100fd565b82546001600160a01b0319166001600160a01b03919091161790565b9055565b61007f90600061010656fe6080604052600436101561001257600080fd5b60003560e01c80639fbf10fc146100325763fc0c546a036100445761034d565b6102ac565b61ffff81165b0361004457565b600080fd5b9050359061005682610037565b565b8061003d565b9050359061005682610058565b6001600160a01b031690565b90565b6001600160a01b03811661003d565b905035906100568261007a565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176100ce57604052565b610096565b906100566100e060405190565b92836100ac565b67ffffffffffffffff81116100ce57602090601f01601f19160190565b90826000939282370152565b90929192610125610120826100e7565b6100d3565b938185526020850190828401116100445761005692610104565b9080601f830112156100445781602061007793359101610110565b9190916060818403126100445761017160606100d3565b92600061017e828461005e565b9085015260206101908282850161005e565b90850152604082013567ffffffffffffffff8111610044576101b2920161013f565b6040830152565b909182601f830112156100445781359167ffffffffffffffff831161004457602001926001830284011161004457565b61012081830312610044576101fe8282610049565b9261020c836020840161005e565b9261021a816040850161005e565b926102288260608301610089565b92610236836080840161005e565b926102448160a0850161005e565b9260c081013567ffffffffffffffff8111610044578261026591830161015a565b9260e082013567ffffffffffffffff811161004457836102869184016101b9565b92909361010082013567ffffffffffffffff8111610044576102a892016101b9565b9091565b6102cc6102ba3660046101e9565b9998909897919796929695939561050c565b604051005b0390f35b600091031261004457565b610077916008021c6001600160a01b031690565b9061007791546102e0565b6100776000806102f4565b6100779061006b906001600160a01b031682565b6100779061030a565b6100779061031e565b61033990610327565b9052565b6020810192916100569190610330565b346100445761035d3660046102d5565b6102d16103686102ff565b6040519182918261033d565b6100776100776100779290565b1561038857565b60405162461bcd60e51b815260206004820152601760248201527f53746172676174653a2063616e6e6f74207377617020300000000000000000006044820152606490fd5b61006b6100776100779290565b610077906103cd565b156103ea57565b60405162461bcd60e51b815260206004820152602660248201527f53746172676174653a205f726566756e64416464726573732063616e6e6f742060448201526506265203078360d41b6064820152608490fd5b90939293848311610044578411610044578101920390565b359060208110610464575090565b61047690600019906020036008021b90565b1690565b61007790610374565b6100779061006b565b6100779054610483565b80151561003d565b9050519061005682610496565b90602082820312610044576100779161049e565b6001600160a01b039182168152911660208201526060810192916100569160400152565b6040513d6000823e3d90fd5b6001600160a01b0390911681526040810192916100569160200152565b5050509496509450505061057e61057961057461056e6105839461055b60009761053f6105388a610374565b8b11610381565b61055461054e61006b8b6103da565b91610327565b14156103e3565b866020996105688b610374565b9261043e565b90610456565b61047a565b6103cd565b61031e565b61059461058f8361048c565b610327565b91846323b872dd9333906105c6846105ab30610327565b976105d18a6105b960405190565b9a8b978896879560e01b90565b8552600485016104bf565b03925af192831561065857859361065d575b506106126105f361058f8361048c565b9163a9059cbb61061d61060560405190565b9788968795869460e01b90565b8452600484016104ef565b03925af180156106585761062f575050565b8161064e92903d10610651575b61064681836100ac565b8101906104ab565b50565b503d61063c565b6104e3565b61067390843d86116106515761064681836100ac565b6105e356fea2646970667358221220aeb3cabfb257bb0cb3a8ecb340386a2dd9432c920a7f27bded0c60686530932464736f6c63430008120033";

type StargateRouterMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StargateRouterMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StargateRouterMock__factory extends ContractFactory {
  constructor(...args: StargateRouterMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "StargateRouterMock";
  }

  override deploy(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StargateRouterMock> {
    return super.deploy(_token, overrides || {}) as Promise<StargateRouterMock>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override attach(address: string): StargateRouterMock {
    return super.attach(address) as StargateRouterMock;
  }
  override connect(signer: Signer): StargateRouterMock__factory {
    return super.connect(signer) as StargateRouterMock__factory;
  }
  static readonly contractName: "StargateRouterMock";

  public readonly contractName: "StargateRouterMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StargateRouterMockInterface {
    return new utils.Interface(_abi) as StargateRouterMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StargateRouterMock {
    return new Contract(address, _abi, signerOrProvider) as StargateRouterMock;
  }
}
