/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TapiocaWrapper,
  TapiocaWrapperInterface,
} from "../TapiocaWrapper";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "TapiocaWrapper__AlreadyDeployed",
    type: "error",
  },
  {
    inputs: [],
    name: "TapiocaWrapper__FailedDeploy",
    type: "error",
  },
  {
    inputs: [],
    name: "TapiocaWrapper__MngmtFeeTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "TapiocaWrapper__NoTOFTDeployed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "TapiocaWrapper__TOFTExecutionFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract TapiocaOFT",
        name: "_tapiocaOFT",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "CreateOFT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_caller",
        type: "address",
      },
    ],
    name: "HarvestFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "SetFees",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_bytecode",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
    ],
    name: "createTOFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_toft",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_bytecode",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "_revertOnFailure",
        type: "bool",
      },
    ],
    name: "executeTOFT",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestableTapiocaOFTsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTOFT",
    outputs: [
      {
        internalType: "contract TapiocaOFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mngmtFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mngmtFeeFraction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mngmtFee",
        type: "uint256",
      },
    ],
    name: "setMngmtFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tapiocaOFTLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tapiocaOFTs",
    outputs: [
      {
        internalType: "contract TapiocaOFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tapiocaOFTsByErc20",
    outputs: [
      {
        internalType: "contract TapiocaOFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350610c7f806100616000396000f3fe6080604052600436106100b25760003560e01c80633b6ac5a31161006f5780633b6ac5a3146101615780636406aab9146101af5780638da5cb5b146101cf578063a52dbfef146101ef578063b8454db814610205578063c5181c7014610226578063c99e12b21461023b57600080fd5b8063138cc18f146100b757806313af4035146100ce578063246bf7e8146100ee5780632c5b4e4d1461010e5780632f3e1b911461013757806339930d731461014c575b600080fd5b3480156100c357600080fd5b506100cc61025b565b005b3480156100da57600080fd5b506100cc6100e93660046109aa565b61031c565b3480156100fa57600080fd5b506100cc610109366004610a17565b61039a565b34801561011a57600080fd5b5061012461271081565b6040519081526020015b60405180910390f35b34801561014357600080fd5b50600254610124565b34801561015857600080fd5b50600354610124565b34801561016d57600080fd5b5061019761017c3660046109aa565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161012e565b3480156101bb57600080fd5b506100cc6101ca366004610a73565b6106b4565b3480156101db57600080fd5b50600054610197906001600160a01b031681565b3480156101fb57600080fd5b5061012460015481565b610218610213366004610a9a565b61073b565b60405161012e929190610b4f565b34801561023257600080fd5b50610197610800565b34801561024757600080fd5b50610197610256366004610a73565b61085f565b60005b6003548110156102ee576003818154811061027b5761027b610b6a565b60009182526020822001546040805163138cc18f60e01b815290516001600160a01b039092169263138cc18f9260048084019382900301818387803b1580156102c357600080fd5b505af11580156102d7573d6000803e3d6000fd5b5050505080806102e690610b96565b91505061025e565b5060405133907ffafa110fb81a7f88423c7aa6e23116f2fbbc14aa953f81c5b5bf1571647f76b990600090a2565b6000546001600160a01b0316331461034f5760405162461bcd60e51b815260040161034690610baf565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6000546001600160a01b031633146103c45760405162461bcd60e51b815260040161034690610baf565b6001600160a01b03848116600090815260046020526040902054161561040857604051638a8d142560e01b81526001600160a01b0385166004820152602401610346565b60006104c660007fdb62290e278048916c2988ec8a75a745c627ea5199b22c43d68aad24ce37baf73088866040516020016104749493929190938452606092831b6bffffffffffffffffffffffff1990811660208601529190921b166034830152604882015260680190565b6040516020818303038152906040528051906020012086868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061088992505050565b9050846001600160a01b0316816001600160a01b031663785e9e866040518163ffffffff1660e01b8152600401602060405180830381865afa158015610510573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105349190610bd5565b6001600160a01b03161461055b5760405163f083e5f760e01b815260040160405180910390fd5b60028054600181019091557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b038084166001600160a01b0319928316811790935587166000908152600460208181526040928390208054909416851790935581516363be14b960e11b8152915163c77c297293838301939092908290030181865afa1580156105f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061c9190610bf2565b1561066d57600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b0383161790555b846001600160a01b0316816001600160a01b03167f7512d1d2a31be00735451a10b76db5dca1e1581b1cb23d7910b4741e8eb1487660405160405180910390a35050505050565b6000546001600160a01b031633146106de5760405162461bcd60e51b815260040161034690610baf565b603281111561070057604051634e5594bb60e01b815260040160405180910390fd5b60018190556040518181527fa142c987774756b13db02cb5b530db2fa8a680ce74f42d87f33148e3f7098ebb9060200160405180910390a150565b600080546060906001600160a01b031633146107695760405162461bcd60e51b815260040161034690610baf565b856001600160a01b0316348686604051610784929190610c0f565b60006040518083038185875af1925050503d80600081146107c1576040519150601f19603f3d011682016040523d82523d6000602084013e6107c6565b606091505b5090925090508280156107d7575081155b156107f757806040516310847b0960e01b81526004016103469190610c1f565b94509492505050565b600254600090810361082557604051634df930f160e01b815260040160405180910390fd5b6002805461083590600190610c32565b8154811061084557610845610b6a565b6000918252602090912001546001600160a01b0316919050565b6002818154811061086f57600080fd5b6000918252602090912001546001600160a01b0316905081565b600080844710156108dc5760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152606401610346565b825160000361092d5760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606401610346565b8383516020850187f590506001600160a01b03811661098a5760405162461bcd60e51b8152602060048201526019602482015278437265617465323a204661696c6564206f6e206465706c6f7960381b6044820152606401610346565b949350505050565b6001600160a01b03811681146109a757600080fd5b50565b6000602082840312156109bc57600080fd5b81356109c781610992565b9392505050565b60008083601f8401126109e057600080fd5b50813567ffffffffffffffff8111156109f857600080fd5b602083019150836020828501011115610a1057600080fd5b9250929050565b60008060008060608587031215610a2d57600080fd5b8435610a3881610992565b9350602085013567ffffffffffffffff811115610a5457600080fd5b610a60878288016109ce565b9598909750949560400135949350505050565b600060208284031215610a8557600080fd5b5035919050565b80151581146109a757600080fd5b60008060008060608587031215610ab057600080fd5b8435610abb81610992565b9350602085013567ffffffffffffffff811115610ad757600080fd5b610ae3878288016109ce565b9094509250506040850135610af781610a8c565b939692955090935050565b6000815180845260005b81811015610b2857602081850181015186830182015201610b0c565b81811115610b3a576000602083870101525b50601f01601f19169290920160200192915050565b821515815260406020820152600061098a6040830184610b02565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610ba857610ba8610b80565b5060010190565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b600060208284031215610be757600080fd5b81516109c781610992565b600060208284031215610c0457600080fd5b81516109c781610a8c565b8183823760009101908152919050565b6020815260006109c76020830184610b02565b600082821015610c4457610c44610b80565b50039056fea2646970667358221220bed0eb35a3fca7e9dc65c274376d8f74dd53422b93ce55baceb63bc0cac7627164736f6c634300080f0033";

type TapiocaWrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TapiocaWrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TapiocaWrapper__factory extends ContractFactory {
  constructor(...args: TapiocaWrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TapiocaWrapper";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TapiocaWrapper> {
    return super.deploy(overrides || {}) as Promise<TapiocaWrapper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TapiocaWrapper {
    return super.attach(address) as TapiocaWrapper;
  }
  override connect(signer: Signer): TapiocaWrapper__factory {
    return super.connect(signer) as TapiocaWrapper__factory;
  }
  static readonly contractName: "TapiocaWrapper";

  public readonly contractName: "TapiocaWrapper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TapiocaWrapperInterface {
    return new utils.Interface(_abi) as TapiocaWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TapiocaWrapper {
    return new Contract(address, _abi, signerOrProvider) as TapiocaWrapper;
  }
}
