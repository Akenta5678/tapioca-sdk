/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TapiocaWrapper,
  TapiocaWrapperInterface,
} from "../TapiocaWrapper";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "TapiocaWrapper__MngmtFeeTooHigh",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_bytecode",
        type: "bytes",
      },
    ],
    name: "createTOFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_toft",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_bytecode",
        type: "bytes",
      },
    ],
    name: "executeTOFT",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTOFT",
    outputs: [
      {
        internalType: "contract TapiocaOFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mngmtFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mngmtFeeFraction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mngmtFee",
        type: "uint256",
      },
    ],
    name: "setMngmtFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tapiocaOFTLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tapiocaOFTs",
    outputs: [
      {
        internalType: "contract TapiocaOFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tapiocaOFTsByErc20",
    outputs: [
      {
        internalType: "contract TapiocaOFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350610893806100616000396000f3fe60806040526004361061009c5760003560e01c80638616e3d4116100645780638616e3d41461016f5780638da5cb5b1461018f578063a52dbfef146101af578063c5181c70146101c5578063c99e12b2146101da578063fe898fe7146101fa57600080fd5b806313af4035146100a15780632c5b4e4d146100c35780632f3e1b91146100ec5780633b6ac5a3146101015780636406aab91461014f575b600080fd5b3480156100ad57600080fd5b506100c16100bc36600461070d565b61021d565b005b3480156100cf57600080fd5b506100d961271081565b6040519081526020015b60405180910390f35b3480156100f857600080fd5b506002546100d9565b34801561010d57600080fd5b5061013761011c36600461070d565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100e3565b34801561015b57600080fd5b506100c161016a366004610731565b61029b565b34801561017b57600080fd5b506100c161018a36600461074a565b6102d3565b34801561019b57600080fd5b50600054610137906001600160a01b031681565b3480156101bb57600080fd5b506100d960015481565b3480156101d157600080fd5b506101376104cf565b3480156101e657600080fd5b506101376101f5366004610731565b61050d565b61020d61020836600461074a565b610537565b60405190151581526020016100e3565b6000546001600160a01b031633146102505760405162461bcd60e51b8152600401610247906107cf565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6000546001600160a01b031633146102c55760405162461bcd60e51b8152600401610247906107cf565b6102ce816105ca565b600155565b6000546001600160a01b031633146102fd5760405162461bcd60e51b8152600401610247906107cf565b60006103b260007fdb62290e278048916c2988ec8a75a745c627ea5199b22c43d68aad24ce37baf7308760405160200161036093929190928352606091821b6bffffffffffffffffffffffff199081166020850152911b16603482015260480190565b6040516020818303038152906040528051906020012085858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506105ef92505050565b60028054600181019091557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b038084166001600160a01b031992831681179093558716600081815260036020908152604091829020805490941685179093558051633c2f4f4360e11b81529051949550909363785e9e86926004808401939192918290030181865afa158015610456573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047a91906107f5565b6001600160a01b0316146104c95760405162461bcd60e51b815260206004820152601660248201527508aa486646040c2c8c8e4cae6e640dad2e6dac2e8c6d60531b6044820152606401610247565b50505050565b60028054600091906104e390600190610812565b815481106104f3576104f3610837565b6000918252602090912001546001600160a01b0316919050565b6002818154811061051d57600080fd5b6000918252602090912001546001600160a01b0316905081565b600080546001600160a01b031633146105625760405162461bcd60e51b8152600401610247906107cf565b836001600160a01b031634848460405161057d92919061084d565b60006040518083038185875af1925050503d80600081146105ba576040519150601f19603f3d011682016040523d82523d6000602084013e6105bf565b606091505b509095945050505050565b60328111156105ec57604051634e5594bb60e01b815260040160405180910390fd5b50565b600080844710156106425760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152606401610247565b82516000036106935760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606401610247565b8383516020850187f590506001600160a01b0381166106f05760405162461bcd60e51b8152602060048201526019602482015278437265617465323a204661696c6564206f6e206465706c6f7960381b6044820152606401610247565b949350505050565b6001600160a01b03811681146105ec57600080fd5b60006020828403121561071f57600080fd5b813561072a816106f8565b9392505050565b60006020828403121561074357600080fd5b5035919050565b60008060006040848603121561075f57600080fd5b833561076a816106f8565b9250602084013567ffffffffffffffff8082111561078757600080fd5b818601915086601f83011261079b57600080fd5b8135818111156107aa57600080fd5b8760208285010111156107bc57600080fd5b6020830194508093505050509250925092565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b60006020828403121561080757600080fd5b815161072a816106f8565b60008282101561083257634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fd5b818382376000910190815291905056fea26469706673582212206b7728c179bf5612efbd5f474d05bf4f2d940d36338a33c805edcf35a53021a564736f6c634300080f0033";

type TapiocaWrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TapiocaWrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TapiocaWrapper__factory extends ContractFactory {
  constructor(...args: TapiocaWrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TapiocaWrapper";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TapiocaWrapper> {
    return super.deploy(overrides || {}) as Promise<TapiocaWrapper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TapiocaWrapper {
    return super.attach(address) as TapiocaWrapper;
  }
  override connect(signer: Signer): TapiocaWrapper__factory {
    return super.connect(signer) as TapiocaWrapper__factory;
  }
  static readonly contractName: "TapiocaWrapper";

  public readonly contractName: "TapiocaWrapper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TapiocaWrapperInterface {
    return new utils.Interface(_abi) as TapiocaWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TapiocaWrapper {
    return new Contract(address, _abi, signerOrProvider) as TapiocaWrapper;
  }
}
