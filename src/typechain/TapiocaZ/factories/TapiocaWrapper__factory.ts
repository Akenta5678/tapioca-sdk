/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TapiocaWrapper,
  TapiocaWrapperInterface,
} from "../TapiocaWrapper";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "TapiocaWrapper__AlreadyDeployed",
    type: "error",
  },
  {
    inputs: [],
    name: "TapiocaWrapper__FailedDeploy",
    type: "error",
  },
  {
    inputs: [],
    name: "TapiocaWrapper__MngmtFeeTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "TapiocaWrapper__NoTOFTDeployed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "TapiocaWrapper__TOFTExecutionFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract ITapiocaOFT",
        name: "_tapiocaOFT",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "CreateOFT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_caller",
        type: "address",
      },
    ],
    name: "HarvestFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "SetFees",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_bytecode",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_linked",
        type: "bool",
      },
    ],
    name: "createTOFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_toft",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_bytecode",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "_revertOnFailure",
        type: "bool",
      },
    ],
    name: "executeTOFT",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestableTapiocaOFTsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTOFT",
    outputs: [
      {
        internalType: "contract ITapiocaOFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mngmtFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mngmtFeeFraction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mngmtFee",
        type: "uint256",
      },
    ],
    name: "setMngmtFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tapiocaOFTLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tapiocaOFTs",
    outputs: [
      {
        internalType: "contract ITapiocaOFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tapiocaOFTsByErc20",
    outputs: [
      {
        internalType: "contract ITapiocaOFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461004f57600080546001600160a01b031916339081178255907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768180a3610eb290816100558239f35b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c8063138cc18f146109bd57806313af40351461092c5780632c5b4e4d1461090f5780632f3e1b91146108f057806339930d73146108d15780633b6ac5a31461088d5780636406aab9146107f45780638da5cb5b146107c1578063a52dbfef1461079e578063b3c7d6a3146102e6578063b8454db8146101be578063c5181c70146101045763c99e12b2146100b057600080fd5b346101005760206003193601126101005735916002548310156100fd575073ffffffffffffffffffffffffffffffffffffffff6100ee602093610be4565b92905490519260031b1c168152f35b80fd5b8280fd5b5091346100fd57806003193601126100fd57600254928315610197577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff840193841161016b5760208373ffffffffffffffffffffffffffffffffffffffff6100ee87610be4565b9060116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b82517f4df930f1000000000000000000000000000000000000000000000000000000008152fd5b508260606003193601126100fd576101d4610b30565b9160243567ffffffffffffffff8111610100576101f49036908301610b58565b6044359485151586036102e25791849291839273ffffffffffffffffffffffffffffffffffffffff9261022b848654163314610c4a565b828a519384928337810185815203923491165af1923d156102d9573d61025081610d1f565b9061025d87519283610caf565b8152809360203d92013e5b806102d1575b610292575061028e90835193849315158452806020850152830190610b86565b0390f35b6102cd60209285519384937f10847b090000000000000000000000000000000000000000000000000000000085528401526024830190610b86565b0390fd5b50821561026e565b60609250610268565b8480fd5b50903461010057608060031936011261010057610301610b30565b60243567ffffffffffffffff81116102e2576103209036908501610b58565b91909360443594606435938415948515036106d35773ffffffffffffffffffffffffffffffffffffffff93610359858a54163314610c4a565b84811697888a5260209685885286898c20541661076f579186949291888a8796946000146106e8579161042e610439949261040261043f98955193849283019530879190606893917fdb62290e278048916c2988ec8a75a745c627ea5199b22c43d68aad24ce37baf784527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000809260601b16602085015260601b16603483015260488201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610caf565b519020923691610d59565b90610d90565b165b169380517f785e9e8600000000000000000000000000000000000000000000000000000000815284818481895afa9081156106de57879185918a9161069f575b501603610679576002549268010000000000000000938481101561064d578060016104af9201600255610be4565b819291549060031b9188831b921b1916179055858752818452808720937fffffffffffffffffffffffff00000000000000000000000000000000000000009486868254161790558151907fc77c2972000000000000000000000000000000000000000000000000000000008252808285818a5afa92831561064457508892610609575b5050610563575b5050507f7512d1d2a31be00735451a10b76db5dca1e1581b1cb23d7910b4741e8eb148768380a380f35b600354918210156105dd5760018201806003558210156105b1575082907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0191825416179055388080610539565b8560326024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8560416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b90809250813d831161063d575b6106208183610caf565b8101031261063957518015158103610639573880610532565b8680fd5b503d610616565b513d8a823e3d90fd5b6024896041867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b517ff083e5f7000000000000000000000000000000000000000000000000000000008152fd5b925050508481813d83116106d7575b6106b88183610caf565b810103126106d3575183811681036106d35783879138610481565b8780fd5b503d6106ae565b82513d8a823e3d90fd5b9161042e610439949261040261076998955193849283019530879190606893917fdb62290e278048916c2988ec8a75a745c627ea5199b22c43d68aad24ce37baf784527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000809260601b16602085015260601b16603483015260488201520190565b16610441565b6024868b8b51917f8a8d1425000000000000000000000000000000000000000000000000000000008352820152fd5b5050346107bd57816003193601126107bd576020906001549051908152f35b5080fd5b5050346107bd57816003193601126107bd5773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b5090346101005760206003193601126101005781359161082c73ffffffffffffffffffffffffffffffffffffffff8554163314610c4a565b603283116108665750816020917fa142c987774756b13db02cb5b530db2fa8a680ce74f42d87f33148e3f7098ebb9360015551908152a180f35b90517f4e5594bb000000000000000000000000000000000000000000000000000000008152fd5b5034610100576020600319360112610100578160209373ffffffffffffffffffffffffffffffffffffffff92836108c2610b30565b16825285522054169051908152f35b5050346107bd57816003193601126107bd576020906003549051908152f35b5050346107bd57816003193601126107bd576020906002549051908152f35b5050346107bd57816003193601126107bd57602090516127108152f35b83346100fd5760206003193601126100fd577fffffffffffffffffffffffff0000000000000000000000000000000000000000610967610b30565b82549073ffffffffffffffffffffffffffffffffffffffff9061098d8284163314610c4a565b1691829116178255337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768380a380f35b508290346107bd57816003193601126107bd57815b60038054821015610b0757835273ffffffffffffffffffffffffffffffffffffffff817fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b015416803b15610b0357838091848751809481937f138cc18f0000000000000000000000000000000000000000000000000000000083525af18015610af957610ab6575b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a8a576001016109d2565b6024836011847f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b67ffffffffffffffff8111610acd57845284610a5a565b6024846041857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b85513d86823e3d90fd5b8380fd5b83337ffafa110fb81a7f88423c7aa6e23116f2fbbc14aa953f81c5b5bf1571647f76b98280a280f35b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610b5357565b600080fd5b9181601f84011215610b535782359167ffffffffffffffff8311610b535760208381860195010111610b5357565b919082519283825260005b848110610bd05750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201610b91565b600254811015610c1b5760026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0190600090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b15610c5157565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610cf057604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff8111610cf057601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b929192610d6582610d1f565b91610d736040519384610caf565b829481845281830111610b53578281602093846000960137010152565b90805115610e1e576020815191016000f59073ffffffffffffffffffffffffffffffffffffffff821615610dc057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152fdfea2646970667358221220a5a92ab3d55ef06fdf2006ea7f875b3418ac5627de02ee312b38d8b65570eb4c64736f6c63430008120033";

type TapiocaWrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TapiocaWrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TapiocaWrapper__factory extends ContractFactory {
  constructor(...args: TapiocaWrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TapiocaWrapper";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TapiocaWrapper> {
    return super.deploy(overrides || {}) as Promise<TapiocaWrapper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TapiocaWrapper {
    return super.attach(address) as TapiocaWrapper;
  }
  override connect(signer: Signer): TapiocaWrapper__factory {
    return super.connect(signer) as TapiocaWrapper__factory;
  }
  static readonly contractName: "TapiocaWrapper";

  public readonly contractName: "TapiocaWrapper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TapiocaWrapperInterface {
    return new utils.Interface(_abi) as TapiocaWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TapiocaWrapper {
    return new Contract(address, _abi, signerOrProvider) as TapiocaWrapper;
  }
}
