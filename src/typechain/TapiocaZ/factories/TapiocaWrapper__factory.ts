/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TapiocaWrapper,
  TapiocaWrapperInterface,
} from "../TapiocaWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "TapiocaWrapper__AlreadyDeployed",
    type: "error",
  },
  {
    inputs: [],
    name: "TapiocaWrapper__FailedDeploy",
    type: "error",
  },
  {
    inputs: [],
    name: "TapiocaWrapper__MngmtFeeTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "TapiocaWrapper__NoTOFTDeployed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "TapiocaWrapper__TOFTExecutionFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract ITapiocaOFT",
        name: "_tapiocaOFT",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "CreateOFT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_caller",
        type: "address",
      },
    ],
    name: "HarvestFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "SetFees",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_bytecode",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_linked",
        type: "bool",
      },
    ],
    name: "createTOFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "toft",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "bytecode",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "revertOnFailure",
            type: "bool",
          },
        ],
        internalType: "struct TapiocaWrapper.ExecutionCall[]",
        name: "_call",
        type: "tuple[]",
      },
    ],
    name: "executeCalls",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_toft",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_bytecode",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "_revertOnFailure",
        type: "bool",
      },
    ],
    name: "executeTOFT",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestableTapiocaOFTsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTOFT",
    outputs: [
      {
        internalType: "contract ITapiocaOFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tapiocaOFTLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tapiocaOFTs",
    outputs: [
      {
        internalType: "contract ITapiocaOFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tapiocaOFTsByErc20",
    outputs: [
      {
        internalType: "contract ITapiocaOFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461007057601f610e1438819003918201601f19168301916001600160401b038311848410176100755780849260209460405283398101031261007057516001600160a01b0381168103610070576100619061005c3361008b565b61008b565b604051610d4190816100d38239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe6040608081526004908136101561001557600080fd5b600091823560e01c8063138cc18f1461091f5780632f3e1b911461090057806339930d73146108e15780633b6ac5a3146108a6578063715018a61461084c5780638da5cb5b14610824578063b3c7d6a3146104ec578063b8454db814610422578063c5181c70146103cd578063c99e12b21461038a578063e4c472061461016a5763f2fde38b146100a557600080fd5b34610166576020366003190112610166576100be610a03565b906100c7610ad9565b6001600160a01b0391821692831561011457505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b506020806003193601126103675781359067ffffffffffffffff8083116103865736602384011215610386578284013593818511610382576024808501948136918860051b01011161037e579296939491906101c4610ad9565b84936101cf84610bda565b966101dc89519889610b56565b848852601f196101eb86610bda565b01875b81811061036f57505086945b80861061026857505050505050835193808501911515855285850152825180915260608401948060608360051b870101940192955b82871061023c5785850386f35b909192938280610258600193605f198a82030186528851610a4c565b960192019601959291909261022f565b909192939496809a965061027d888385610bf2565b356001600160a01b0381169081900361036b5761029b898486610bf2565b8881013590601e1981360301821215610367570190813591888311610367578901918036038313610367578392818e5192839283378101848152039134905af1966102e4610baa565b6102ee828b610c14565b52878a6102fc838587610bf2565b0135908115158203610363578161035a575b5061032a5761031c90610b31565b9493929190999695996101fa565b846103568b8661033b8b958e610c14565b5191519485946310847b0960e01b8652850152830190610a4c565b0390fd5b9050153861030e565b8c80fd5b8380fd5b5080fd5b60608a82018d01528b016101ee565b8780fd5b8680fd5b8580fd5b50346101665760203660031901126101665735916001548310156103ca57506103b4602092610a8c565b905491519160018060a01b039160031b1c168152f35b80fd5b5091346103ca57806003193601126103ca57600154928315610414576000198401938411610401576020836103b486610a8c565b634e487b7160e01b825260119052602490fd5b8251634df930f160e01b8152fd5b508260603660031901126103ca57610438610a03565b9060243567ffffffffffffffff811161036b576104589036908501610a1e565b604435939184151585036103675790839291610472610ad9565b81885192839283378101848152039134906001600160a01b03165af191610497610baa565b91806104e4575b6104c257506104be90835193849315158452806020850152830190610a4c565b0390f35b61035660209285519384936310847b0960e01b85528401526024830190610a4c565b50821561049e565b50903461016657608036600319011261016657610507610a03565b60243567ffffffffffffffff8111610820576105269036908501610a1e565b919093604435946064359384159485150361037e57610543610ad9565b60018060a01b039384811697888a526020966003885286898c20541661080957869492888695938b936000146107e757916105e16105ec94926105d36105f2989561058f368a89610c28565b838151910120955194859384019630908892606894929184526bffffffffffffffffffffffff19809260601b16602085015260601b16603483015260488201520190565b03601f198101835282610b56565b519020923691610c28565b90610c5f565b165b16938051633c2f4f4360e11b815284818481895afa9081156107dd57879185918a916107a2575b5016036107955760015492680100000000000000009384811015610782578060016106499201600155610a8c565b8154600391821b89811b94901b1916929092179055868852845280872080546001600160a01b0319908116871790915581516363be14b960e11b81529094808285818a5afa92831561077957508892610742575b50506106ce575b5050507f7512d1d2a31be00735451a10b76db5dca1e1581b1cb23d7910b4741e8eb148768380a380f35b6002549182101561072f57600182018060025582101561071c575082907f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01918254161790553880806106a4565b634e487b7160e01b865260329052602485fd5b634e487b7160e01b865260419052602485fd5b90809250813d8311610772575b6107598183610b56565b810103126103825751801515810361038257388061069d565b503d61074f565b513d8a823e3d90fd5b634e487b7160e01b895260418452602489fd5b5163f083e5f760e01b8152fd5b925050508481813d83116107d6575b6107bb8183610b56565b8101031261037e5751838116810361037e578387913861061b565b503d6107b1565b82513d8a823e3d90fd5b916105e16105ec94926105d3610803989561058f368a89610c28565b166105f4565b8851638a8d142560e01b81528087018b9052602490fd5b8480fd5b50503461036b578160031936011261036b57905490516001600160a01b039091168152602090f35b83346103ca57806003193601126103ca57610865610ad9565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461036b57602036600319011261036b576020916001600160a01b03908290826108d0610a03565b168152600385522054169051908152f35b50503461036b578160031936011261036b576020906002549051908152f35b50503461036b578160031936011261036b576020906001549051908152f35b5091346103ca57806003193601126103ca57805b600280548210156109da5782527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace8101546001600160a01b0316803b15610166578280918686518094819363138cc18f60e01b83525af180156109d0576109a4575b5061099f90610b31565b610933565b67ffffffffffffffff81116109bd57835261099f610995565b634e487b7160e01b835260418552602483fd5b84513d85823e3d90fd5b82337ffafa110fb81a7f88423c7aa6e23116f2fbbc14aa953f81c5b5bf1571647f76b98280a280f35b600435906001600160a01b0382168203610a1957565b600080fd5b9181601f84011215610a195782359167ffffffffffffffff8311610a195760208381860195010111610a1957565b919082519283825260005b848110610a78575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610a57565b600154811015610ac35760016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600090565b634e487b7160e01b600052603260045260246000fd5b6000546001600160a01b03163303610aed57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6000198114610b405760010190565b634e487b7160e01b600052601160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610b7857604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff8111610b7857601f01601f191660200190565b3d15610bd5573d90610bbb82610b8e565b91610bc96040519384610b56565b82523d6000602084013e565b606090565b67ffffffffffffffff8111610b785760051b60200190565b9190811015610ac35760051b81013590605e1981360301821215610a19570190565b8051821015610ac35760209160051b010190565b929192610c3482610b8e565b91610c426040519384610b56565b829481845281830111610a19578281602093846000960137010152565b90805115610cc7576020815191016000f5906001600160a01b03821615610c8257565b60405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152fdfea26469706673582212202ce2cb7af91cf322d0399d547930316dc81ddc05d531df888a417f5a420d214564736f6c63430008120033";

type TapiocaWrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TapiocaWrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TapiocaWrapper__factory extends ContractFactory {
  constructor(...args: TapiocaWrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TapiocaWrapper";
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TapiocaWrapper> {
    return super.deploy(_owner, overrides || {}) as Promise<TapiocaWrapper>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override attach(address: string): TapiocaWrapper {
    return super.attach(address) as TapiocaWrapper;
  }
  override connect(signer: Signer): TapiocaWrapper__factory {
    return super.connect(signer) as TapiocaWrapper__factory;
  }
  static readonly contractName: "TapiocaWrapper";

  public readonly contractName: "TapiocaWrapper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TapiocaWrapperInterface {
    return new utils.Interface(_abi) as TapiocaWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TapiocaWrapper {
    return new Contract(address, _abi, signerOrProvider) as TapiocaWrapper;
  }
}
