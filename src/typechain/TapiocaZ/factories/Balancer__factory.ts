/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Balancer, BalancerInterface } from "../Balancer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_routerETH",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DestinationNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "DestinationOftNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "ExceedsBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FeeAmountNotSet",
    type: "error",
  },
  {
    inputs: [],
    name: "PoolInfoRequired",
    type: "error",
  },
  {
    inputs: [],
    name: "RebalanceAmountNotSet",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "SlippageNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_srcOft",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_dstOft",
        type: "address",
      },
    ],
    name: "ConnectedChainUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_srcOft",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_totalAmount",
        type: "uint256",
      },
    ],
    name: "RebalanceAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_srcOft",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_slippage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_isNative",
        type: "bool",
      },
    ],
    name: "Rebalanced",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_srcOft",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "addRebalanceAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_srcOft",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
    ],
    name: "checker",
    outputs: [
      {
        internalType: "bool",
        name: "canExec",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "execPayload",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "connectedOFTs",
    outputs: [
      {
        internalType: "uint256",
        name: "srcPoolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dstPoolId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "dstOft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rebalanceable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_srcOft",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "_dstOft",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_ercData",
        type: "bytes",
      },
    ],
    name: "initConnectedOFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_srcOft",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "_slippage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_ercData",
        type: "bytes",
      },
    ],
    name: "rebalance",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c03461010f57601f61116338819003918201601f19168301916001600160401b038311848410176101145780849260609460405283398101031261010f5761006c61004a8261012a565b60406100586020850161012a565b936001600160a01b0393849283920161012a565b16938460018060a01b031960005416176000556040519460007f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768180a31692831561010057501680156100ee5760805260a052604051611024908161013f823960805181610202015260a0518181816105040152818161056201526106480152f35b604051630801eaf160e01b8152600490fd5b630801eaf160e01b8152600490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361010f5756fe6080604052600436101561001b575b361561001957600080fd5b005b6000803560e01c806303d5692614610b8457806313af403514610b175780635dd94d4e14610aa3578063623c12f81461092b57806380fd8987146108365780638da5cb5b1461080f57639c25e27d14610074575061000e565b60a036600319011261080c57610088610d49565b610090610d64565b9060843567ffffffffffffffff811161038b576100b1903690600401610de3565b6100c560018060a01b038554163314610e7a565b6001600160a01b03828116855260016020908152604080872061ffff8716885290915285206002015416156107fa57620186a060443510156107e85760018060a01b038216845260016020526040842061ffff841685526020526064356003604086200154106107d6576001600160a01b0382811680865260016020908152604080882061ffff88168952909152862060020154610167928692911690610f06565b156107c4576001600160a01b0382163b1561038b5760405163411950f360e11b815260643560048201528481602481836001600160a01b0388165af180156106e8576107b1575b506040516339e7e35960e11b8152906020826004816001600160a01b0387165afa9182156106e8578592610790575b5081156103be57506064353411156103ac57606435471061039a578360018060a01b037f00000000000000000000000000000000000000000000000000000000000000001660018060a01b038416825260016020526040822061ffff8616600052602052600260406000200154604051906001600160601b03199060601b1660208201526014815261026e81610da5565b61027c604435606435610fcf565b90823b1561038b5760405163088a669560e11b815261ffff881660048201526001600160a01b038716602482015260a060448201529284928492839185918391906102cb9060a4840190610e3a565b906064356064840152608483015203925af1801561038f57610377575b50507f7007030f22ba868c6abdfc92d9c47da38dca4e3c200c2d47043b5f5406bd0c0c916080915b60018060a01b038216865260016020526040862061ffff861660005260205260036040600020016103446064358254610ecd565b90556040805161ffff969096168652604435602087015260643590860152151560608501526001600160a01b031692a280f35b61038090610d75565b61038b5783386102e8565b8380fd5b6040513d84823e3d90fd5b604051637fa62f9d60e01b8152600490fd5b604051637b063a8960e11b8152600490fd5b34156103ac57604051633c2f4f4360e11b81526020816004816001600160a01b0388165afa908115610768576024916020918891610773575b506040516370a0823160e01b815230600482015292839182906001600160a01b03165afa908115610768578691610736575b506064351161039a578060208061044593518301019101610ef0565b6001600160a01b03848116875260016020908152604080892061ffff891660009081529083528190206002015490519216828201528152919061048783610da5565b6040519182606081011067ffffffffffffffff606085011117610720578793606084016040528484523460208501526040840152604051633c2f4f4360e11b815260208160048160018060a01b038b165afa9081156106e857859160209183916106f3575b5060405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152606435602483015290938492604492849291165af180156106e8576106b9575b50610559604435606435610fcf565b604084015193907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163b156106b55761ffff9461060d6040809461061f948a988e9884519b8c9a6327efc43f60e21b8c521660048b015260248a0152604489015260018060a01b038d166064890152606435608489015260a488015261012060c48801528051610124880152602081015161014488015201516060610164870152610184860190610e3a565b8481036003190160e486015290610e3a565b61060f60f31b602084830392600319840161010487015260028152015201818360018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1801561038f576106a1575b50507f7007030f22ba868c6abdfc92d9c47da38dca4e3c200c2d47043b5f5406bd0c0c91608091610310565b6106aa90610d75565b61038b578338610675565b8580fd5b6106da9060203d6020116106e1575b6106d28183610dc1565b810190610eb5565b503861054a565b503d6106c8565b6040513d87823e3d90fd5b6107139150823d8411610719575b61070b8183610dc1565b810190610fb0565b386104ec565b503d610701565b634e487b7160e01b600052604160045260246000fd5b90506020813d602011610760575b8161075160209383610dc1565b810103126106b5575138610429565b3d9150610744565b6040513d88823e3d90fd5b61078a9150823d84116107195761070b8183610dc1565b386103f7565b6107aa91925060203d6020116106e1576106d28183610dc1565b90386101dd565b6107bd90949194610d75565b92386101ae565b604051635e8ea7db60e01b8152600490fd5b60405163bb6a783760e01b8152600490fd5b604051631224b81560e01b8152600490fd5b6040516304889dcf60e01b8152600490fd5b80fd5b503461080c578060031936011261080c57546040516001600160a01b039091168152602090f35b503461080c57606036600319011261080c57610850610d49565b610858610d64565b9060443560018060a01b03809216928385526020926001845261ffff60408720921691828752845280600260408820015416156107fa5761089d908654163314610e7a565b8385526001835260408520818652835260036040862001805490838201809211610917575583855260018352604080862082875284528086206003015481519586529385019190915283015260608201527f3b100c278a9436e8a77b205a5395872158b05a3f1a0bc5e6052c1d92827c7bd590608090a180f35b634e487b7160e01b87526011600452602487fd5b503461080c57604036600319011261080c57610945610d49565b9061094e610d64565b6040516339e7e35960e11b81526020936001600160a01b0316906060908581600481865afa9081156106e85791610a29949391610a13938791610a86575b50610a2d575b610a05908287526001885261ffff6040882095169485885288526003604081818a20015415159885815260018b528181208882528b52200154604051958694639c25e27d60e01b8b870152602486015260448501526103e86064850152608484015260a060a484015260c4830190610e3a565b03601f198101835282610dc1565b6040805194859485528401526040830190610e3a565b0390f35b5080855260018652610a056040862061ffff85169081885288526040872054908388526001895260408820908852885260016040882001546040519189830152604082015260408152610a7f81610d89565b9050610992565b610a9d9150883d8a116106e1576106d28183610dc1565b3861098c565b503461080c57604036600319011261080c576080906040610ac2610d49565b91610acb610d64565b60018060a01b038094168252600160205261ffff838320911682526020522090815491600360018201549260028301541691015491604051938452602084015260408301526060820152f35b503461080c57602036600319011261080c57610b31610d49565b8154906001600160a01b0390610b4a3383851614610e7a565b1680916001600160601b0360a01b16178255337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768380a380f35b503461080c57608036600319011261080c57610b9e610d49565b610ba6610d64565b6044356001600160a01b03818116939192908484036106b55767ffffffffffffffff90606435828111610d4557610be1903690600401610de3565b610bef828954163314610e7a565b6040516339e7e35960e11b815285831696602096909187816004818c5afa908115610d3a578b91610d1d575b501580610d14575b610d0257610c32918691610f06565b156107c457808580610c4993518301019101610ef0565b919060405193608085019085821090821117610cee57917f977b844ab5bd8c7c7282986679102e8c18c4374f0560736566e586613272191796959493916003936040528452858401918252604084019089825260608501928b8452898c526001885261ffff60408d20971696878d52885260408c2095518655516001860155600285019151166001600160601b0360a01b82541617905551910155604051908152a380f35b634e487b7160e01b8a52604160045260248afd5b60405163c804944560e01b8152600490fd5b50825115610c23565b610d349150883d8a116106e1576106d28183610dc1565b38610c1b565b6040513d8d823e3d90fd5b8780fd5b600435906001600160a01b0382168203610d5f57565b600080fd5b6024359061ffff82168203610d5f57565b67ffffffffffffffff811161072057604052565b6060810190811067ffffffffffffffff82111761072057604052565b6040810190811067ffffffffffffffff82111761072057604052565b90601f8019910116810190811067ffffffffffffffff82111761072057604052565b81601f82011215610d5f5780359067ffffffffffffffff82116107205760405192610e18601f8401601f191660200185610dc1565b82845260208383010111610d5f57816000926020809301838601378301015290565b919082519283825260005b848110610e66575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610e45565b15610e8157565b60405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606490fd5b90816020910312610d5f57518015158103610d5f5790565b91908203918211610eda57565b634e487b7160e01b600052601160045260246000fd5b9190826040910312610d5f576020825192015190565b9060209161ffff610f6a94604051936001600160601b0319809160601b16868601528360601b16603485015260288452610f3f84610d89565b60405195869485938493631ec59c7b60e11b8552166004840152604060248401526044830190610e3a565b03916001600160a01b03165afa908115610fa457600091610f89575090565b610fa1915060203d81116106e1576106d28183610dc1565b90565b6040513d6000823e3d90fd5b90816020910312610d5f57516001600160a01b0381168103610d5f5790565b818102918183041481151715610eda57620186a0610fa1920490610ecd56fea2646970667358221220d8ac892b075dab9b94a0c88a8b7ef96459250d11ba142c49dce2a2afee69145064736f6c63430008120033";

type BalancerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalancerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Balancer__factory extends ContractFactory {
  constructor(...args: BalancerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Balancer";
  }

  override deploy(
    _routerETH: PromiseOrValue<string>,
    _router: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Balancer> {
    return super.deploy(
      _routerETH,
      _router,
      _owner,
      overrides || {}
    ) as Promise<Balancer>;
  }
  override getDeployTransaction(
    _routerETH: PromiseOrValue<string>,
    _router: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _routerETH,
      _router,
      _owner,
      overrides || {}
    );
  }
  override attach(address: string): Balancer {
    return super.attach(address) as Balancer;
  }
  override connect(signer: Signer): Balancer__factory {
    return super.connect(signer) as Balancer__factory;
  }
  static readonly contractName: "Balancer";

  public readonly contractName: "Balancer";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalancerInterface {
    return new utils.Interface(_abi) as BalancerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Balancer {
    return new Contract(address, _abi, signerOrProvider) as Balancer;
  }
}
