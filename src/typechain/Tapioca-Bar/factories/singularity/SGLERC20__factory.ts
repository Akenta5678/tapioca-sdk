/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { SGLERC20, SGLERC20Interface } from "../../singularity/SGLERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ApprovalBorrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowanceBorrow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approveBorrow",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permitBorrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101406040908082523461019857610e60803803809161001f828561019d565b83398101602080838303126101985782516001600160401b0393848211610198570182601f820112156101985780519084821161016e5785519361006c601f8401601f191685018661019d565b82855283838301011161019857829060005b8381106101845750506000918401015283518481018181108582111761016e57600191839187528281520192603160f81b84528281519101209220908260e052610100948286524660a0528051918201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f948585528284015260608301524660808301523060a083015260a0825260c08201948286109086111761016e578490525190206080523060c052610120908152610c9f92836101c1843960805183610b77015260a05183610c43015260c05183610b48015260e05183610bc601525182610bec01525181610ba30152f35b634e487b7160e01b600052604160045260246000fd5b81810183015186820184015284920161007e565b600080fd5b601f909101601f19168101906001600160401b0382119082101761016e5760405256fe608060408181526004918236101561001657600080fd5b600092833560e01c918262a02a201461070957508163095ea7b3146106df57816318160ddd146106c45781631da8bf101461060757816323b872dd146104305781633644e5151461040c57816370a08231146103d55781637ecebe001461039b5781637fa0b84e1461036a578163a9059cbb1461028e578163d505accf146100f3575063dd62ed3e146100a857600080fd5b346100ef57806003193601126100ef57806020926100c461074f565b6100cc61076a565b6001600160a01b0391821683526002865283832091168252845220549051908152f35b5080fd5b839150346100ef5761010436610780565b9083979497969596421161024b576001600160a01b039283871694858b52866020528b8b20805490600019821461023857878b8f9294848f6101d8999760016101e09c9a980190558b86519460208601967f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9885288870152166060850152608084015260a083015260c082015260c0815261019e81610947565b5190206101a9610b3e565b915190602082019261190160f01b845260228301526042820152604281526101d081610979565b519020610aaf565b919091610995565b16036101f557506101f2939450610897565b80f35b606490602087519162461bcd60e51b8352820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152fd5b634e487b7160e01b8d526011895260248dfd5b895162461bcd60e51b8152602081870152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606490fd5b5050346100ef57806003193601126100ef576020916001600160a01b036102b361074f565b8360243593841580159061035f575b6102fa575b505192835216907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a35160018152f35b3381526001875281812054610311868210156107cf565b8484169086823303610326575b5050506102c7565b61033a9161033584151561081b565b610867565b338352600189528383205581522061035384825461088a565b9055833880808661031e565b5083831633146102c2565b5050346100ef57806003193601126100ef5760209061039461038a61074f565b60243590336108ef565b5160018152f35b9050346103d15760203660031901126103d15760209282916001600160a01b036103c361074f565b168252845220549051908152f35b8280fd5b5050346100ef5760203660031901126100ef57806020926001600160a01b036103fc61074f565b1681526001845220549051908152f35b5050346100ef57816003193601126100ef57602090610429610b3e565b9051908152f35b8284346106045760603660031901126106045761044b61074f565b9061045461076a565b60443591826104a1575b5060208095507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9185519384526001600160a01b03809116941692a35160018152f35b6001600160a01b0395868516968783526020906001825287842054906104c9878310156107cf565b851692838a036104dd575b5050505061045e565b898552600283528885203386528352888520549060018201610559575b5050928260209960018a946105388a8e996103357fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9c9a151561081b565b928552528383205581522061054e85825461088a565b9055918780806104d4565b8782106105c157509260209960018a946105388a8e999661059c827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9d9b610867565b86895260028552898920338a52855289892055969950505094505099819496506104fa565b895162461bcd60e51b8152908101849052601860248201527f45524332303a20616c6c6f77616e636520746f6f206c6f7700000000000000006044820152606490fd5b80fd5b839150346100ef5761061836610780565b9083979497969596421161024b576001600160a01b039283871694858b52866020528b8b20805490600019821461023857878b8f9294848f6101d8999760016106b29c9a980190558b86519460208601967fe9685ff6d48c617fe4f692c50e602cce27cbad0290beb93cfa77eac43968d58c885288870152166060850152608084015260a083015260c082015260c0815261019e81610947565b16036101f557506101f29394506108ef565b5050346100ef57816003193601126100ef5751908152602090f35b5050346100ef57806003193601126100ef576020906103946106ff61074f565b6024359033610897565b849084346103d157806003193601126103d15760209261072761074f565b61072f61076a565b6001600160a01b0391821683526003865283832091168252845220548152f35b600435906001600160a01b038216820361076557565b600080fd5b602435906001600160a01b038216820361076557565b60e0906003190112610765576001600160a01b03906004358281168103610765579160243590811681036107655790604435906064359060843560ff81168103610765579060a4359060c43590565b156107d657565b60405162461bcd60e51b815260206004820152601660248201527f45524332303a2062616c616e636520746f6f206c6f77000000000000000000006044820152606490fd5b1561082257565b60405162461bcd60e51b815260206004820152601660248201527f45524332303a206e6f207a65726f2061646472657373000000000000000000006044820152606490fd5b9190820391821161087457565b634e487b7160e01b600052601160045260246000fd5b9190820180921161087457565b909160207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925916001600160a01b03809416938460005260028352604060002095169485600052825280604060002055604051908152a3565b909160207fe50de2333c10a9502fcb1d8ae13a51bbf423153dfc63c2b8997665b32154afc3916001600160a01b03809416938460005260038352604060002095169485600052825280604060002055604051908152a3565b60e0810190811067ffffffffffffffff82111761096357604052565b634e487b7160e01b600052604160045260246000fd5b6080810190811067ffffffffffffffff82111761096357604052565b6005811015610a9957806109a65750565b600181036109f35760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b60028103610a405760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b600314610a4957565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311610b325791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa15610b255781516001600160a01b03811615610b1f579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016301480610c40575b15610b99577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f000000000000000000000000000000000000000000000000000000000000000082527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff8211176109635760405251902090565b507f00000000000000000000000000000000000000000000000000000000000000004614610b7056fea2646970667358221220a7383784f8d67b0be8d62783ea6dc64ca4718ff4c9451609c11dcff0bd62ef7364736f6c63430008120033";

type SGLERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SGLERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SGLERC20__factory extends ContractFactory {
  constructor(...args: SGLERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SGLERC20";
  }

  override deploy(
    name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SGLERC20> {
    return super.deploy(name, overrides || {}) as Promise<SGLERC20>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, overrides || {});
  }
  override attach(address: string): SGLERC20 {
    return super.attach(address) as SGLERC20;
  }
  override connect(signer: Signer): SGLERC20__factory {
    return super.connect(signer) as SGLERC20__factory;
  }
  static readonly contractName: "SGLERC20";

  public readonly contractName: "SGLERC20";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SGLERC20Interface {
    return new utils.Interface(_abi) as SGLERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SGLERC20 {
    return new Contract(address, _abi, signerOrProvider) as SGLERC20;
  }
}
