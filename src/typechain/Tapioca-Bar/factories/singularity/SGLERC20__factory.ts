/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { SGLERC20, SGLERC20Interface } from "../../singularity/SGLERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101406040908082523461019857610cce803803809161001f828561019d565b83398101602080838303126101985782516001600160401b0393848211610198570182601f820112156101985780519084821161016e5785519361006c601f8401601f191685018661019d565b82855283838301011161019857829060005b8381106101845750506000918401015283518481018181108582111761016e57600191839187528281520192603160f81b84528281519101209220908260e052610100948286524660a0528051918201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f948585528284015260608301524660808301523060a083015260a0825260c08201948286109086111761016e578490525190206080523060c052610120908152610b0d92836101c18439608051836109cf015260a05183610ab1015260c051836109a0015260e05183610a1e01525182610a44015251816109fb0152f35b634e487b7160e01b600052604160045260246000fd5b81810183015186820184015284920161007e565b600080fd5b601f909101601f19168101906001600160401b0382119082101761016e5760405256fe6040608081526004908136101561001557600080fd5b600091823560e01c908163095ea7b31461065557816318160ddd1461063a57816323b872dd146104645781633644e5151461044057816370a08231146104095781637ecebe00146103d2578163a9059cbb146102f6578163d505accf146100d1575063dd62ed3e1461008657600080fd5b346100cd57806003193601126100cd57806020926100a2610686565b6100aa6106a1565b6001600160a01b0391821683526002865283832091168252845220549051908152f35b5080fd5b839150346100cd5760e03660031901126100cd576100ed610686565b6100f56106a1565b90604435926064356084359060ff821682036102f2578042116102af576001600160a01b0390818516928389526003602052898920805490600019821461029c576001820190558a519260208401917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98352868d860152858a1660608601528a608086015260a085015260c084015260c0835260e083019267ffffffffffffffff9381811085821117610289578c52519020906101b0610996565b928b519260208401947f190100000000000000000000000000000000000000000000000000000000000086526022850152604284015260428352608083019083821090821117610276579161021e9391610216938d5260c4359260a43592519020610907565b9190916107d5565b1603610233575061023093945061077d565b80f35b606490602087519162461bcd60e51b8352820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152fd5b60248b604189634e487b7160e01b835252fd5b60248c60418a634e487b7160e01b835252fd5b60248b601189634e487b7160e01b835252fd5b60648360208a519162461bcd60e51b8352820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152fd5b8680fd5b5050346100cd57806003193601126100cd576020916001600160a01b0361031b610686565b836024359384158015906103c7575b610362575b505192835216907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a35160018152f35b3381526001875281812054610379868210156106b7565b848416908682330361038e575b50505061032f565b6103a29161039d841515610702565b61074d565b33835260018952838320558152206103bb848254610770565b90558338808086610386565b50838316331461032a565b5050346100cd5760203660031901126100cd57806020926001600160a01b036103f9610686565b1681526003845220549051908152f35b5050346100cd5760203660031901126100cd57806020926001600160a01b03610430610686565b1681526001845220549051908152f35b5050346100cd57816003193601126100cd5760209061045d610996565b9051908152f35b8284346106375760603660031901126106375761047f610686565b906104886106a1565b60443591826104d5575b5060208095507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9185519384526001600160a01b03809116941692a35160018152f35b6001600160a01b0395868516968783526020906001825287842054906104fd878310156106b7565b851692838a03610511575b50505050610492565b89855260028352888520338652835288852054906001820161058d575b5050928260209960018a9461056c8a8e9961039d7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9c9a1515610702565b9285525283832055815220610582858254610770565b905591878080610508565b8782106105f557509260209960018a9461056c8a8e99966105d0827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9d9b61074d565b86895260028552898920338a528552898920559699505050945050998194965061052e565b606490848b519162461bcd60e51b8352820152601860248201527f45524332303a20616c6c6f77616e636520746f6f206c6f7700000000000000006044820152fd5b80fd5b5050346100cd57816003193601126100cd5751908152602090f35b5050346100cd57806003193601126100cd5760209061067f610675610686565b602435903361077d565b5160018152f35b600435906001600160a01b038216820361069c57565b600080fd5b602435906001600160a01b038216820361069c57565b156106be57565b606460405162461bcd60e51b815260206004820152601660248201527f45524332303a2062616c616e636520746f6f206c6f77000000000000000000006044820152fd5b1561070957565b606460405162461bcd60e51b815260206004820152601660248201527f45524332303a206e6f207a65726f2061646472657373000000000000000000006044820152fd5b9190820391821161075a57565b634e487b7160e01b600052601160045260246000fd5b9190820180921161075a57565b909160207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925916001600160a01b03809416938460005260028352604060002095169485600052825280604060002055604051908152a3565b60058110156108f157806107e65750565b6001810361083257606460405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152fd5b6002810361087e57606460405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152fd5b60031461088757565b608460405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152fd5b634e487b7160e01b600052602160045260246000fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831161098a5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa1561097d5781516001600160a01b03811615610977579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016301480610aae575b156109f1577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f000000000000000000000000000000000000000000000000000000000000000082527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff821117610a985760405251902090565b634e487b7160e01b600052604160045260246000fd5b507f000000000000000000000000000000000000000000000000000000000000000046146109c856fea2646970667358221220f8e418ed033405f0ec9d0773ead0f3cf4c84ef2d1603374e4601adae521d48bf64736f6c63430008120033";

type SGLERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SGLERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SGLERC20__factory extends ContractFactory {
  constructor(...args: SGLERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SGLERC20";
  }

  override deploy(
    name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SGLERC20> {
    return super.deploy(name, overrides || {}) as Promise<SGLERC20>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, overrides || {});
  }
  override attach(address: string): SGLERC20 {
    return super.attach(address) as SGLERC20;
  }
  override connect(signer: Signer): SGLERC20__factory {
    return super.connect(signer) as SGLERC20__factory;
  }
  static readonly contractName: "SGLERC20";

  public readonly contractName: "SGLERC20";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SGLERC20Interface {
    return new utils.Interface(_abi) as SGLERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SGLERC20 {
    return new Contract(address, _abi, signerOrProvider) as SGLERC20;
  }
}
