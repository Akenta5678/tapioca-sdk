/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BeachBar,
  BeachBarInterface,
} from "../../../contracts/bar/BeachBar";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract YieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "tapToken_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newFeeTo",
        type: "address",
      },
    ],
    name: "FeeToUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newFeeVeTap",
        type: "address",
      },
    ],
    name: "FeeVeTapUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "markets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ProtocolWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "location",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum ContractType",
        name: "risk",
        type: "uint8",
      },
    ],
    name: "RegisterMasterContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "location",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "masterContract",
        type: "address",
      },
    ],
    name: "RegisterMixologist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "swapper",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isRegistered",
        type: "bool",
      },
    ],
    name: "SwapperUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "usdoToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
    ],
    name: "UsdoTokenUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "mc",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "executeMixologistFn",
    outputs: [
      {
        internalType: "bool[]",
        name: "success",
        type: "bool[]",
      },
      {
        internalType: "bytes[]",
        name: "result",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeTo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeVeTap",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "masterContractLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "masterContracts",
    outputs: [
      {
        internalType: "address",
        name: "location",
        type: "address",
      },
      {
        internalType: "enum ContractType",
        name: "risk",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mcAddress",
        type: "address",
      },
      {
        internalType: "enum ContractType",
        name: "contractType_",
        type: "uint8",
      },
    ],
    name: "registerMasterContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mc",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "useCreate2",
        type: "bool",
      },
    ],
    name: "registerMixologist",
    outputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeTo_",
        type: "address",
      },
    ],
    name: "setFeeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeVeTap_",
        type: "address",
      },
    ],
    name: "setFeeVeTap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract MultiSwapper",
        name: "swapper",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enable",
        type: "bool",
      },
    ],
    name: "setSwapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_usdoToken",
        type: "address",
      },
    ],
    name: "setUsdoToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract MultiSwapper",
        name: "",
        type: "address",
      },
    ],
    name: "swappers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tapAssetId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tapToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tapiocaMarkets",
    outputs: [
      {
        internalType: "address[]",
        name: "markets",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdoAssetId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usdoToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract MultiSwapper[]",
        name: "swappers_",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "minAssetAmount",
            type: "uint256",
          },
        ],
        internalType: "struct SwapData[]",
        name: "swapData_",
        type: "tuple[]",
      },
    ],
    name: "withdrawAllProtocolFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract YieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162001d4538038062001d45833981016040819052620000349162000128565b600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36001600160a01b03808316608081905290821660a052604051632c1876e560e21b815263b061db9490620000b4906001908590600090819060040162000167565b6020604051808303816000875af1158015620000d4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000fa9190620001ad565b6001600160601b031660c05250620001c79050565b6001600160a01b03811681146200012557600080fd5b50565b600080604083850312156200013c57600080fd5b825162000149816200010f565b60208401519092506200015c816200010f565b809150509250929050565b60808101600486106200018a57634e487b7160e01b600052602160045260246000fd5b9481526001600160a01b0393841660208201529190921660408201526060015290565b600060208284031215620001c057600080fd5b5051919050565b60805160a05160c051611b246200022160003960006101af015260006103840152600081816104360152818161063101528181610c5f01528181610dfe01528181610f5101528181610ffc01526111820152611b246000f3fe6080604052600436106101405760003560e01c80636100ff14116100b6578063cf7470fa1161006f578063cf7470fa146103a6578063d164c241146103d4578063dc2d27b7146103f6578063de40657714610424578063e30c397814610458578063f46901ed1461047857600080fd5b80636100ff14146102bc57806386c8e21d146102dc5780638cad7fbe146102f25780638da5cb5b14610332578063aedf427214610352578063c7cee5321461037257600080fd5b80632324248e116101085780632324248e146102125780632c76e7f8146102325780633f2617cb146102525780634e71e0c8146102725780634eb51e2914610287578063515104a81461029c57600080fd5b8063017e7e5814610145578063078dfbe71461017b5780630e7ee2271461019d5780630feb123d146101df578063226a414b146101ff575b600080fd5b34801561015157600080fd5b50600654610165906001600160a01b031681565b60405161017291906113cf565b60405180910390f35b34801561018757600080fd5b5061019b610196366004611410565b610498565b005b3480156101a957600080fd5b506101d17f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610172565b3480156101eb57600080fd5b50600754610165906001600160a01b031681565b61016561020d366004611455565b6105b0565b34801561021e57600080fd5b50600254610165906001600160a01b031681565b34801561023e57600080fd5b5061019b61024d366004611535565b6106fe565b34801561025e57600080fd5b5061019b61026d3660046115a0565b610900565b34801561027e57600080fd5b5061019b61098d565b34801561029357600080fd5b506004546101d1565b3480156102a857600080fd5b5061019b6102b73660046115d5565b610a4a565b3480156102c857600080fd5b5061019b6102d7366004611612565b610c06565b3480156102e857600080fd5b506101d160035481565b3480156102fe57600080fd5b5061032261030d366004611612565b60086020526000908152604090205460ff1681565b6040519015158152602001610172565b34801561033e57600080fd5b50600054610165906001600160a01b031681565b34801561035e57600080fd5b5061019b61036d366004611612565b610d35565b34801561037e57600080fd5b506101657f000000000000000000000000000000000000000000000000000000000000000081565b3480156103b257600080fd5b506103c66103c1366004611636565b610db5565b604051610172929190611665565b3480156103e057600080fd5b506103e9610dea565b60405161017291906116d6565b34801561040257600080fd5b5061041661041136600461172f565b6110af565b60405161017292919061189e565b34801561043057600080fd5b506101657f000000000000000000000000000000000000000000000000000000000000000081565b34801561046457600080fd5b50600154610165906001600160a01b031681565b34801561048457600080fd5b5061019b610493366004611612565b61135e565b6000546001600160a01b031633146104cb5760405162461bcd60e51b81526004016104c290611950565b60405180910390fd5b811561058e576001600160a01b0383161515806104e55750805b6105295760405162461bcd60e51b81526020600482015260156024820152744f776e61626c653a207a65726f206164647265737360581b60448201526064016104c2565b600080546040516001600160a01b03808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0385166001600160a01b031991821617909155600180549091169055505050565b600180546001600160a01b0385166001600160a01b0319909116179055505050565b600080546001600160a01b031633146105db5760405162461bcd60e51b81526004016104c290611950565b6001600160a01b038516600090815260056020526040902054859060ff16151560011461061a5760405162461bcd60e51b81526004016104c290611985565b604051631f54245b60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631f54245b9061066c9089908990899089906004016119bc565b6020604051808303816000875af115801561068b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106af9190611a06565b604080516001600160a01b038084168252891660208201529193507fd319b549895a1e94f537d0fca704a174ab4c6b5d804b0f5442a90e0817904f78910160405180910390a150949350505050565b60008484828161071057610710611a23565b90506020020160208101906107259190611612565b6001600160a01b0316036107745760405162461bcd60e51b815260206004820152601660248201527542656163684261723a207a65726f206164647265737360501b60448201526064016104c2565b600454838114156000610785610dea565b805190915060005b818110156108bc578281815181106107a7576107a7611a23565b60200260200101516001600160a01b0316630fde08e3856107ee578a8a848181106107d4576107d4611a23565b90506020020160208101906107e99190611612565b610816565b8a8a600081811061080157610801611a23565b90506020020160208101906108169190611612565b866108385789898581811061082d5761082d611a23565b905060200201610852565b8989600081811061084b5761084b611a23565b9050602002015b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152356024820152604401600060405180830381600087803b15801561089957600080fd5b505af11580156108ad573d6000803e3d6000fd5b5050505080600101905061078d565b507fdc0aec64e01514853db7bc1f49a7321726ef185b59f680c9bc9edcf499722bc782426040516108ee929190611a39565b60405180910390a15050505050505050565b6000546001600160a01b0316331461092a5760405162461bcd60e51b81526004016104c290611950565b6001600160a01b038216600081815260086020908152604091829020805460ff19168515159081179091558251938452908301527fa893ff5e6c8549e5f4e3d6bb1d38cbf1ede3443ef5726c0477f01c296f7eaf02910160405180910390a15050565b6001546001600160a01b03163381146109e85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e657260448201526064016104c2565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316179055600180549091169055565b6000546001600160a01b03163314610a745760405162461bcd60e51b81526004016104c290611950565b6001600160a01b03821660009081526005602052604090205460ff1615610ad75760405162461bcd60e51b815260206004820152601760248201527610995858da10985c8e881350c81c9959da5cdd195c9959604a1b60448201526064016104c2565b604080518082019091526000602082019081526001600160a01b0384168252826002811115610b0857610b0861164f565b90816002811115610b1b57610b1b61164f565b9052506004805460018101825560009190915281517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90910180546001600160a01b039092166001600160a01b031983168117825560208401518493909183916001600160a81b03191617600160a01b836002811115610b9d57610b9d61164f565b021790555050506001600160a01b03831660009081526005602052604090819020805460ff19166001179055517f1b171ff9e281f7033f8c4d90b0d08fa61c8ad18aba517793d5b6619a21d4c04c90610bf99085908590611665565b60405180910390a1505050565b6000546001600160a01b03163314610c305760405162461bcd60e51b81526004016104c290611950565b600280546001600160a01b0319166001600160a01b0383811691909117909155604051632c1876e560e21b81527f00000000000000000000000000000000000000000000000000000000000000009091169063b061db9490610c9e9060019085906000908190600401611a5b565b6020604051808303816000875af1158015610cbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce19190611a92565b6bffffffffffffffffffffffff1660038190556040519081526001600160a01b038216907fa8bcc850e0dd5734a654196b5949251a22dec7d076dcdde7c355a1a2d6006e069060200160405180910390a250565b6000546001600160a01b03163314610d5f5760405162461bcd60e51b81526004016104c290611950565b600780546001600160a01b0319166001600160a01b0383161790556040517fe8fb39e0250fa1bfc54b044703d7949c0630d364b2f315a8bb7b42f267faf34990610daa9083906113cf565b60405180910390a150565b60048181548110610dc557600080fd5b6000918252602090912001546001600160a01b0381169150600160a01b900460ff1682565b6004546060906000805b82811015610ec1577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fba96be860048381548110610e3e57610e3e611a23565b6000918252602090912001546040516001600160e01b031960e084901b168152610e74916001600160a01b0316906004016113cf565b602060405180830381865afa158015610e91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb59190611a92565b90910190600101610df4565b50806001600160401b03811115610eda57610eda6116e9565b604051908082528060200260200182016040528015610f03578160200160208202803683370190505b50925060008060005b848110156110a757600060048281548110610f2957610f29611a23565b600091825260209091200154604051631f752d7d60e31b81526001600160a01b0391821692507f00000000000000000000000000000000000000000000000000000000000000009091169063fba96be890610f889084906004016113cf565b602060405180830381865afa158015610fa5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc99190611a92565b925060005b8381101561109d576040516323f50d9560e21b81526001600160a01b038381166004830152602482018390527f00000000000000000000000000000000000000000000000000000000000000001690638fd4365490604401602060405180830381865afa158015611043573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110679190611a06565b88868151811061107957611079611a23565b6001600160a01b039092166020928302919091019091015260019485019401610fce565b5050600101610f0c565b505050505090565b60005460609081906001600160a01b031633146110de5760405162461bcd60e51b81526004016104c290611950565b83806001600160401b038111156110f7576110f76116e9565b604051908082528060200260200182016040528015611120578160200160208202803683370190505b509250806001600160401b0381111561113b5761113b6116e9565b60405190808252806020026020018201604052801561116e57816020015b60608152602001906001900390816111595790505b50915060005b8181101561135457600560007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bafe4f148a8a868181106111c1576111c1611a23565b90506020020160208101906111d69190611612565b6040518263ffffffff1660e01b81526004016111f291906113cf565b602060405180830381865afa15801561120f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112339190611a06565b6001600160a01b0316815260208101919091526040016000205460ff1661126c5760405162461bcd60e51b81526004016104c290611985565b86868281811061127e5761127e611a23565b90506020020160208101906112939190611612565b6001600160a01b03168582815181106112ae576112ae611a23565b60200260200101516040516112c39190611aab565b6000604051808303816000865af19150503d8060008114611300576040519150601f19603f3d011682016040523d82523d6000602084013e611305565b606091505b5085838151811061131857611318611a23565b6020026020010185848151811061133157611331611a23565b6020908102919091010191909152901515905261134d81611ac7565b9050611174565b5050935093915050565b6000546001600160a01b031633146113885760405162461bcd60e51b81526004016104c290611950565b600680546001600160a01b0319166001600160a01b0383161790556040517f68953050a837881c7c6f52c422b0f82e1fd474e6931654ea29f569d19fcc42c290610daa9083905b6001600160a01b0391909116815260200190565b6001600160a01b03811681146113f857600080fd5b50565b8035801515811461140b57600080fd5b919050565b60008060006060848603121561142557600080fd5b8335611430816113e3565b925061143e602085016113fb565b915061144c604085016113fb565b90509250925092565b6000806000806060858703121561146b57600080fd5b8435611476816113e3565b935060208501356001600160401b038082111561149257600080fd5b818701915087601f8301126114a657600080fd5b8135818111156114b557600080fd5b8860208285010111156114c757600080fd5b6020830195508094505050506114df604086016113fb565b905092959194509250565b60008083601f8401126114fc57600080fd5b5081356001600160401b0381111561151357600080fd5b6020830191508360208260051b850101111561152e57600080fd5b9250929050565b6000806000806040858703121561154b57600080fd5b84356001600160401b038082111561156257600080fd5b61156e888389016114ea565b9096509450602087013591508082111561158757600080fd5b50611594878288016114ea565b95989497509550505050565b600080604083850312156115b357600080fd5b82356115be816113e3565b91506115cc602084016113fb565b90509250929050565b600080604083850312156115e857600080fd5b82356115f3816113e3565b915060208301356003811061160757600080fd5b809150509250929050565b60006020828403121561162457600080fd5b813561162f816113e3565b9392505050565b60006020828403121561164857600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b038316815260408101600383106116855761168561164f565b8260208301529392505050565b600081518084526020808501945080840160005b838110156116cb5781516001600160a01b0316875295820195908201906001016116a6565b509495945050505050565b60208152600061162f6020830184611692565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611727576117276116e9565b604052919050565b6000806000604080858703121561174557600080fd5b84356001600160401b038082111561175c57600080fd5b611768888389016114ea565b909650945060209150868201358181111561178257600080fd5b8701601f8101891361179357600080fd5b8035828111156117a5576117a56116e9565b8060051b6117b48582016116ff565b918252828101850191858101908c8411156117ce57600080fd5b86850192505b8383101561185c578235868111156117ec5760008081fd5b8501603f81018e136117fe5760008081fd5b8781013587811115611812576118126116e9565b611824601f8201601f19168a016116ff565b8181528f8b8385010111156118395760008081fd5b818b84018b83013760009181018a019190915283525091860191908601906117d4565b80985050505050505050509250925092565b60005b83811015611889578181015183820152602001611871565b83811115611898576000848401525b50505050565b604080825283519082018190526000906020906060840190828701845b828110156118d95781511515845292840192908401906001016118bb565b50505083810382850152845180825282820190600581901b8301840187850160005b8381101561194157601f198087850301865282518051808652611923818b88018c850161186e565b96890196601f019091169390930187019250908601906001016118fb565b50909998505050505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601b908201527f42656163684261723a204d43206e6f7420726567697374657265640000000000604082015260600190565b6001600160a01b038516815260606020820181905281018390528284608083013760008184016080908101919091529115156040820152601f909201601f19169091010192915050565b600060208284031215611a1857600080fd5b815161162f816113e3565b634e487b7160e01b600052603260045260246000fd5b604081526000611a4c6040830185611692565b90508260208301529392505050565b6080810160048610611a6f57611a6f61164f565b9481526001600160a01b0393841660208201529190921660408201526060015290565b600060208284031215611aa457600080fd5b5051919050565b60008251611abd81846020870161186e565b9190910192915050565b600060018201611ae757634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220ced69b5d12584488def3f4735c3a86b334d36a5915ca9bffc526386f220a9d9064736f6c634300080f0033";

type BeachBarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BeachBarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BeachBar__factory extends ContractFactory {
  constructor(...args: BeachBarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BeachBar";
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    tapToken_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BeachBar> {
    return super.deploy(
      _yieldBox,
      tapToken_,
      overrides || {}
    ) as Promise<BeachBar>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    tapToken_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_yieldBox, tapToken_, overrides || {});
  }
  override attach(address: string): BeachBar {
    return super.attach(address) as BeachBar;
  }
  override connect(signer: Signer): BeachBar__factory {
    return super.connect(signer) as BeachBar__factory;
  }
  static readonly contractName: "BeachBar";

  public readonly contractName: "BeachBar";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BeachBarInterface {
    return new utils.Interface(_abi) as BeachBarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BeachBar {
    return new Contract(address, _abi, signerOrProvider) as BeachBar;
  }
}
