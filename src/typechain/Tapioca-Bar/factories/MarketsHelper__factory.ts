/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MarketsHelper, MarketsHelperInterface } from "../MarketsHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "contract IBigBang[]",
        name: "markets",
        type: "address[]",
      },
    ],
    name: "bigBangMarketInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "collateral",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "collateralId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "asset",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "assetId",
                type: "uint256",
              },
              {
                internalType: "contract IOracle",
                name: "oracle",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "oracleData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "totalCollateralShare",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "userCollateralShare",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint128",
                    name: "elastic",
                    type: "uint128",
                  },
                  {
                    internalType: "uint128",
                    name: "base",
                    type: "uint128",
                  },
                ],
                internalType: "struct Rebase",
                name: "totalBorrow",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "userBorrowPart",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "currentExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "spotExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "oracleExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalBorrowCap",
                type: "uint256",
              },
            ],
            internalType: "struct MarketsHelper.MarketInfo",
            name: "market",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "debtRate",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "lastAccrued",
                type: "uint64",
              },
            ],
            internalType: "struct IBigBang.AccrueInfo",
            name: "accrueInfo",
            type: "tuple",
          },
        ],
        internalType: "struct MarketsHelper.BigBangInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "deposit_",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "withdraw_",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "_withdrawData",
        type: "bytes",
      },
    ],
    name: "depositAddCollateralAndBorrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "deposit_",
        type: "bool",
      },
    ],
    name: "depositAndAddAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_repayAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "deposit_",
        type: "bool",
      },
    ],
    name: "depositAndRepay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_repayAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_collateralAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "deposit_",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "withdraw_",
        type: "bool",
      },
    ],
    name: "depositRepayAndRemoveCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fraction",
        type: "uint256",
      },
    ],
    name: "getAmountForAssetFraction",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "borrowPart",
        type: "uint256",
      },
    ],
    name: "getAmountForBorrowPart",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
    ],
    name: "getCollateralAmountForShare",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "borrowPart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidationMultiplierPrecision",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRatePrecision",
        type: "uint256",
      },
    ],
    name: "getCollateralSharesForBorrowPart",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralShares",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "contract IMarket",
        name: "bingBang",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "deposit_",
        type: "bool",
      },
    ],
    name: "mintAndLend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "contract IMarket",
        name: "bingBang",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_removeShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_repayAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_collateralShare",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdraw_",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "withdrawData_",
        type: "bytes",
      },
    ],
    name: "removeAssetAndRepay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "contract ISingularity[]",
        name: "markets",
        type: "address[]",
      },
    ],
    name: "singularityMarketInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "collateral",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "collateralId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "asset",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "assetId",
                type: "uint256",
              },
              {
                internalType: "contract IOracle",
                name: "oracle",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "oracleData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "totalCollateralShare",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "userCollateralShare",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint128",
                    name: "elastic",
                    type: "uint128",
                  },
                  {
                    internalType: "uint128",
                    name: "base",
                    type: "uint128",
                  },
                ],
                internalType: "struct Rebase",
                name: "totalBorrow",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "userBorrowPart",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "currentExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "spotExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "oracleExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalBorrowCap",
                type: "uint256",
              },
            ],
            internalType: "struct MarketsHelper.MarketInfo",
            name: "market",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "elastic",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "base",
                type: "uint128",
              },
            ],
            internalType: "struct Rebase",
            name: "totalAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userAssetFraction",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "interestPerSecond",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "lastAccrued",
                type: "uint64",
              },
              {
                internalType: "uint128",
                name: "feesEarnedFraction",
                type: "uint128",
              },
            ],
            internalType: "struct ISingularity.AccrueInfo",
            name: "accrueInfo",
            type: "tuple",
          },
        ],
        internalType: "struct MarketsHelper.SingularityInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761369c908161001c8239f35b600080fdfe608080604052600436101561001d575b50361561001b57600080fd5b005b600090813560e01c90816314ecf5a814611f585750806326dd79a614611b9b5780632f7de8d71461189e578063443c73a7146116295780634b96e5711461113d5780636dd55c0b14610eb7578063700ea12414610c265780638bebc1b514610794578063a306dfd5146106d2578063e4e802e814610248578063e552cb41146102125763ea881c180361000f573461020f57604036600319011261020f576001600160a01b0390816100cd61210a565b16916040519263de40657760e01b84526020938481600481855afa9081156101d457859085926101df575b506040516377607a1760e11b81529192829060049082905afa9081156101d4579085929185916101a3575b50606490604051948593849263442c159960e01b845260048401526024356024840152876044840152165afa9182156101975791610165575b50604051908152f35b90508181813d8311610190575b61017c81836121ea565b8101031261018b57513861015c565b600080fd5b503d610172565b604051903d90823e3d90fd5b83819492503d83116101cd575b6101ba81836121ea565b8101031261018b57606485925190610123565b503d6101b0565b6040513d86823e3d90fd5b6004925061020290823d8411610208575b6101fa81836121ea565b810190612482565b916100f8565b503d6101f0565b80fd5b503461020f57608036600319011261020f5761024561022f61210a565b610237612145565b906044359060243590612588565b80f35b503461020f57604036600319011261020f5761026261210a565b6024359067ffffffffffffffff82116106ce57366023830112156106ce57816004013561028e8161220c565b9261029c60405194856121ea565b8184526024602085019260051b820101903682116106ca57602401915b8183106106aa575050508151906102cf8261220c565b926102dd60405194856121ea565b828452601f196102ec8461220c565b01855b81811061062f57505060006020604051610308816121b2565b82815201526103156123c7565b50845b8381106103fd5784866040519182916020830160208452825180915260408401602060408360051b870101940192905b82821061035757505050500390f35b919360019193955060208091603f1989820301855287519060c06001600160801b03604061038e855160e0865260e086019061226c565b946103b58782015188870190602090816001600160801b0391828151168552015116910152565b818101519060609182870152015167ffffffffffffffff815116608086015267ffffffffffffffff878201511660a08601520151169101529601920192018594939192610348565b6001600160a01b0361040f828461240b565b51169061041c8285612906565b610426828861240b565b51526040805163f9557ccb60e01b81529081600481865afa80156105ea57889189916105f5575b506001600160801b03908160405193610465856121b2565b168352166020820152602061047a838961240b565b5101526040516370a0823160e01b81526001600160a01b0385166004820152602081602481865afa9081156105ea5788916105b7575b5060049260609160406104c3858b61240b565b510152604051632c9f039d60e21b815293849182905afa9182156105ac57879088908994610539575b506105349367ffffffffffffffff6001600160801b03928160405195610511876121ce565b168552166020840152166040820152606061052c838961240b565b5101526123e6565b610318565b935050506060823d6060116105a4575b81610556606093836121ea565b810103126105a057816001600160801b036105736105349461246d565b67ffffffffffffffff610594604061058d6020870161246d565b9501612435565b919391955050906104ec565b8680fd5b3d9150610549565b6040513d89823e3d90fd5b90506020813d6020116105e2575b816105d2602093836121ea565b8101031261018b575160046104b0565b3d91506105c5565b6040513d8a823e3d90fd5b6001600160801b039250610621915060403d604011610628575b61061981836121ea565b810190612449565b909161044d565b503d61060f565b60405190608082019180831067ffffffffffffffff84111761069457602092604052610659612338565b8152604051610667816121b2565b60008152600084820152838201528860408201526106836123c7565b6060820152828289010152016102ef565b634e487b7160e01b600052604160045260246000fd5b82356001600160a01b038116810361018b578152602092830192016102b9565b8580fd5b8280fd5b503461020f57604036600319011261020f576001600160a01b0360406106f661210a565b600060208351610705816121b2565b8281520152600482518094819363020a17bd60e61b8352165afa90811561078957908261075f926020949192610767575b5060405191610744836121b2565b6001600160801b0380921683521683820152602435906124d4565b604051908152f35b9050610782915060403d6040116106285761061981836121ea565b9038610736565b6040513d84823e3d90fd5b5060e036600319011261020f576107a961210a565b6107b1612120565b6107b9612154565b906107c2612136565b9260c43567ffffffffffffffff81116106ca576107e3903690600401612170565b9094866040519563de40657760e01b87526020876004816001600160a01b0389165afa968715610789578297610c05575b506040516377607a1760e11b8152906020826004816001600160a01b038a165afa918215610bfa578392610bc3575b50604051630cf35bdd60e41b815260048101839052916080836024816001600160a01b038d165afa80156101d4576001600160a01b03938591610b91575b5060208a606460405180978193638eb22cdd60e01b835287600484015260443560248401528a6044840152165afa938415610b4d578594610b58575b5082610a24575b50506108d96001600160a01b03891687613428565b15610a1e57305b6001600160a01b0386163b156106ce5760405163096f9e0960e21b81526001600160a01b0391821660048201529087166024820152600060448201526064810191909152818180608481010381836001600160a01b038a165af1801561078957610a0a575b505080156109ff5761098e604030955b81516314890dcb60e21b81526001600160a01b039182166004820152908716602482015260648035604483015290928391829190820190565b03818b6001600160a01b0389165af180156105ea576109d1575b506109b1578580f35b6109c8946001600160a01b036064359516936131f7565b38808080808580f35b6109f29060403d6040116109f8575b6109ea81836121ea565b810190612572565b506109a8565b503d6109e0565b61098e604085610955565b610a139061219e565b6105a0578638610945565b856108e0565b6020610a756001600160a01b0392610a3e6044358261358c565b60405163095ea7b360e01b81526001600160a01b03858f161660048201526044803560248301529094859384928b92918491820190565b0393165af18015610b4d5784918b91610b02575b5060408051634d4d7cbd60e11b8152600481019490945230602485018190526044850152600060648501526084840192909252829081876001600160a01b038260a481015b0393165af180156101d457610ae4575b806108c4565b610afc9060403d6040116109f8576109ea81836121ea565b50610ade565b9150506020813d602011610b45575b81610b1e602093836121ea565b81010312610b4157838a610ace93610b37604094612565565b5093509091610a89565b8480fd5b3d9150610b11565b6040513d87823e3d90fd5b92935093506020823d602011610b89575b81610b76602093836121ea565b8101031261018b578a93839251936108bd565b3d9150610b69565b610bb2915060803d8111610bbc575b610baa81836121ea565b810190612522565b5050905038610881565b503d610ba0565b925090506020823d602011610bf2575b81610be0602093836121ea565b8101031261018b578891519038610843565b3d9150610bd3565b6040513d85823e3d90fd5b610c1f91975060203d602011610208576101fa81836121ea565b9538610814565b503461020f5760c036600319011261020f57610c4061210a565b606435610c4b612154565b610c53612136565b60405163de40657760e01b81526020926001600160a01b03868116939291908583600481885afa8015610eac57610c9b938a91610e8f575b5016966044359060243590612588565b8015610e885730905b866040516377607a1760e11b938482528682600481895afa918215610bfa578392610e56575b5060405191638eb22cdd60e01b8352600483015287602483015282604483015286826064818c5afa918215610bfa578392610e24575b50853b156106ce5760405163cce19f8160e01b81523360048201526001600160a01b039190911660248201526044810191909152818160648183895af1801561078957610e10575b5050610d52578580f35b829060046040518094819382525afa918215610b4d578592610ddf575b5050604080516311a5cc7760e31b8152600481019290925230602483015233604483015260648201929092526000608482015291829060a490829086905af1801561078957610dc1575b808080808580f35b610dd99060403d6040116109f8576109ea81836121ea565b50610db9565b9080939250813d8311610e09575b610df781836121ea565b8101031261018b579051826040610d6f565b503d610ded565b610e199061219e565b6105a0578638610d48565b925090508582813d8111610e4f575b610e3d81836121ea565b8101031261018b578891519038610d00565b503d610e33565b925090508582813d8111610e81575b610e6f81836121ea565b8101031261018b578891519038610cca565b503d610e65565b3390610ca4565b610ea69150873d8911610208576101fa81836121ea565b38610c8b565b6040513d8b823e3d90fd5b503461020f57604036600319011261020f57610ed161210a565b60243567ffffffffffffffff9283821161020f573660238301121561020f57816004013592610eff8461220c565b92610f0d60405194856121ea565b84845260209460248686019160051b83010191368311610b4157602401905b82821061111e57505050825190610f428261220c565b93610f5060405195866121ea565b828552601f19610f5f8461220c565b0186855b8281106110e0575060009150604051610f7b816121b2565b8281520152835b83811061100c575050505060405192808401908085528351809252604085018160408460051b880101950193965b838810610fbd5786860387f35b90919293948380600192603f198a82030186528851906040868480610fea8651606080885287019061226c565b9501518281511682860152015116910152970193019701969093929193610fb0565b8060406001600160a01b036110236004948661240b565b511661102f8187612906565b611039848b61240b565b51528151632c9f039d60e21b815293849182905afa80156110d5578987918890611089575b61108494508160405193611071856121b2565b16835216898201528861052c838a61240b565b610f82565b505050906040813d6040116110cd575b816110a6604093836121ea565b810103126106ca579081896110c88a6110c16110849661246d565b930161246d565b61105e565b3d9150611099565b6040513d88823e3d90fd5b6040516110ec816121b2565b6110f4612338565b8152604051611102816121b2565b600081526000848201528382015282828a010152018790610f63565b81356001600160a01b03811681036106ca578152908601908601610f2c565b503461020f5760a036600319011261020f5761115761210a565b81611160612120565b91611169612154565b6040516377607a1760e11b81526020946001600160a01b0392818416918784600481865afa9384156105ac5787946115f7575b5060405163de40657760e01b8152958516948887600481895afa9687156105ea5788976115d8575b50604051630cf35bdd60e41b81526004810186905296811694608088602481895afa978815610eac5789986115b4575b50604051638eb22cdd60e01b98898252826004830152604435938460248401528b60448401528c836064818c5afa9687156115a9578d938d9861156a575b508995949392918d9161144f575b50505050506113e6575b5050604080516314890dcb60e21b815233600482018190526024820152606480356044830181905294919350839182908a905af180156110d5576113c8575b5060405163226f120560e11b81528681600481875afa9081156110d5578691611397575b50604051948552600485015260248401528360448401528483606481845afa9081156101d4578593859261135e575b50906112ec839261132494613428565b604051630cb0f5b760e31b81523360048201819052602482015260006044820152606481019190915293849283919082906084820190565b03925af18015610bfa57611336578280f35b813d8311611357575b61134981836121ea565b8101031261018b5738808280f35b503d61133f565b92945092905081813d8311611390575b61137881836121ea565b8101031261018b5751849284929091906112ec6112dc565b503d61136e565b809650878092503d83116113c1575b6113b081836121ea565b8101031261018b57869451386112ad565b503d6113a6565b6113e09060403d6040116109f8576109ea81836121ea565b50611289565b6113ef91613428565b813b156106ca5760405163096f9e0960e21b8152306004820152336024820152600060448201526064810191909152858160848183865af19081156110d557869161143b575b8361124a565b6114449061219e565b610b41578438611435565b9582916114939761146188809661358c565b60405180998196829563095ea7b360e01b845260048401602090939291936001600160a01b0360408201951681520152565b0393165af192831561155f57859361151c575b5060408051634d4d7cbd60e11b815260048101929092523060248301819052604483015260006064830152608482019390935291828060a481015b03818c8a5af1918215610eac5786926114fe575b8a818b81611240565b6115169060403d6040116109f8576109ea81836121ea565b506114f5565b92508a83813d8311611558575b61153381836121ea565b81010312611554578460409161154b6114e195612565565b509150926114a6565b8980fd5b503d611529565b6040513d8c823e3d90fd5b929c5096509093929184813d81116115a2575b61158781836121ea565b8101031261018b5792518c9a9095929391928c929089611232565b503d61157d565b6040513d8e823e3d90fd5b6115cd91985060803d8111610bbc57610baa81836121ea565b5050905096386111f4565b6115f0919750893d8b11610208576101fa81836121ea565b95386111c4565b965092508686813d8111611622575b61161081836121ea565b8101031261018b57879551923861119c565b503d611606565b503461020f57608036600319011261020f5761164361210a565b9060405191611651836121b2565b60008084526020938401526040805163020a17bd60e61b8152916001600160a01b03919082169083600481845afa9283156101d4578490859461187a575b506040519361169d856121b2565b6001600160801b039182168552168584015260405163de40657760e01b8152928584600481855afa938415610b4d578594611857575b506116e190602435906124d4565b6040516377607a1760e11b8152918683600481845afa9283156110d5578693611828575b5060405163294c4c7960e11b8152918783600481855afa9283156105ac5790889188946117f5575b5060049361173a916124a1565b9160405193848092633ba0b9a960e01b82525afa9182156110d55790879493929187926117c1575b5061177360649392611786926124a1565b61178084356044356124a1565b906124b4565b926040519586948593638eb22cdd60e01b855260048501526024840152876044840152165afa91821561019757916101655750604051908152f35b809392508591953d83116117ee575b6117da81836121ea565b8101031261018b5790518693611773611762565b503d6117d0565b93509083813d8111611821575b61180c81836121ea565b8101031261018b57915191879061173a61172d565b503d611802565b9092508681813d8311611850575b61184081836121ea565b8101031261018b57519138611705565b503d611836565b6116e191945061187390873d8911610208576101fa81836121ea565b93906116d3565b905061189691935060403d6040116106285761061981836121ea565b92903861168f565b503461020f57608036600319011261020f576118b861210a565b6118c0612120565b90604435906118cd612145565b60405163226f120560e11b81526020946001600160a01b03938416918681600481865afa9081156105ea578891611b6e575b5060405163de40657760e01b81528781600481875afa8015610eac5786918a91611b51575b501695604051630cf35bdd60e41b81528260048201526080816024818b5afa90811561155f578a91611b2f575b508960405197638eb22cdd60e01b89528460048a01528360248a01528160448a01528a896064818d5afa978815610789578b998399611afb575b506119e7575b50505050506119a36113249583613428565b604051630cb0f5b760e31b81523060048201526001600160a01b03909116602482015260006044820152606481019290925290928391908290879082906084820190565b82918a916119fb86611a2d989c979661358c565b60405180978196829563095ea7b360e01b845260048401602090939291936001600160a01b0360408201951681520152565b0393165af180156105ea57611ab9575b5060408051634d4d7cbd60e11b81526004810195909552306024860181905260448601526000606486015260848501849052848060a481015b03818a895af180156105ac576113249587956119a392611a9b575b8197508981611991565b611ab39060403d6040116109f8576109ea81836121ea565b50611a91565b938685813d8311611af4575b611acf81836121ea565b81010312611af05783604091611ae7611a7697612565565b50955050611a3d565b8780fd5b503d611ac5565b925097509781813d8311611b28575b611b1481836121ea565b8101031261018b5789978b9151973861198b565b503d611b0a565b611b47915060803d8111610bbc57610baa81836121ea565b5050905038611951565b611b689150893d8b11610208576101fa81836121ea565b38611924565b90508681813d8311611b94575b611b8581836121ea565b8101031261018b5751386118ff565b503d611b7b565b503461020f5760e036600319011261020f57611bb561210a565b611bbd612120565b6084359060443584611bcd612136565b60c43567ffffffffffffffff81116106ce57611bed903690600401612170565b9290966001600160a01b03809116946040519163de40657760e01b835260209283816004818b5afa8015610b4d5782918691611f3b575b50169716916040519163226f120560e11b83528183600481875afa928315610b4d578593611f0c575b5060405163442c159960e01b815283600482015281602482015285604482015282816064818d5afa9081156110d55783908792611edd575b5060405163f4d9375360e01b815233600482015230602482015260448101939093529091908180606481015b0381898d5af19081156110d5578391611eb4575b505060405163cd0211eb60e01b8152306004820152336024820152600060448201526064803590820152828160848189895af19081156110d5578691611e87575b50818110611d97575b5050505082600014611d905730905b803b156106ce5760405163cce19f8160e01b81523360048201526001600160a01b039290921660248301526044820188905282908290606490829084905af1801561078957611d7c575b5050611d72578580f35b6109c89430612f72565b611d859061219e565b6105a0578638611d68565b3390611d1e565b9080929394955003908111611e735760405190638eb22cdd60e01b825283600483015260248201528a604482015281816064818b5afa918215611e68578b92611e3a575b5050863b156115545760405191630208d92960e11b8352306004840152336024840152604483015260648201528881608481838a5af18015610eac57611e27575b908180808b94611d0f565b611e339098919861219e565b9638611e1c565b90809250813d8311611e61575b611e5181836121ea565b8101031261155457513880611ddb565b503d611e47565b6040513d8d823e3d90fd5b634e487b7160e01b8b52601160045260248bfd5b90508281813d8311611ead575b611e9e81836121ea565b810103126106ca575138611d06565b503d611e94565b813d8311611ed6575b611ec781836121ea565b81010312610b41578138611cc5565b503d611ebd565b809250813d8311611f05575b611ef381836121ea565b810103126106ca575182611cb1611c85565b503d611ee9565b9092508181813d8311611f34575b611f2481836121ea565b81010312610b4157519138611c4d565b503d611f1a565b611f529150853d8711610208576101fa81836121ea565b38611c24565b823461020f57604036600319011261020f576001600160a01b0380611f7b61210a565b63f9557ccb60e01b85521690604084600481855afa908115610bfa57839484926120e6575b506040519163de40657760e01b83526020958684600481885afa9384156110d557879087956120c4575b5060049394956040519485809263226f120560e11b82525afa9283156110d557908794939291879361208c575b506064929161201e916120166001600160801b038092166024356124a1565b9116906124b4565b92604051958694859363442c159960e01b855260048501526024840152876044840152165afa91821561019757809261205c575b5050604051908152f35b9091508282813d8311612085575b61207481836121ea565b8101031261020f5750518280612052565b503d61206a565b80929350859194953d83116120bd575b6120a681836121ea565b810103126106ca575186939290919061201e611ff7565b503d61209c565b60049495506120df90823d8411610208576101fa81836121ea565b9493611fca565b909450612102915060403d6040116106285761061981836121ea565b909385611fa0565b600435906001600160a01b038216820361018b57565b602435906001600160a01b038216820361018b57565b60a43590811515820361018b57565b60643590811515820361018b57565b60843590811515820361018b57565b3590811515820361018b57565b9181601f8401121561018b5782359167ffffffffffffffff831161018b576020838186019501011161018b57565b67ffffffffffffffff811161069457604052565b6040810190811067ffffffffffffffff82111761069457604052565b6060810190811067ffffffffffffffff82111761069457604052565b90601f8019910116810190811067ffffffffffffffff82111761069457604052565b67ffffffffffffffff81116106945760051b60200190565b60005b8381106122375750506000910152565b8181015183820152602001612227565b9060209161226081518092818552858086019101612224565b601f01601f1916010190565b906001600160a01b03808351168252602083015160208301528060408401511660408301526060830151606083015260808301511660808201526101c06122c260a08401516101e08060a0860152840190612247565b9260c081015160c084015260e081015160e08401526123006101008083015190850190602090816001600160801b0391828151168552015116910152565b610120810151610140908185015281015161016090818501528101516101809081850152810151906101a09182850152015191015290565b604051906101c0820182811067ffffffffffffffff82111761069457604052816101a0600091828152826020820152826040820152826060820152826080820152606060a08201528260c08201528260e0820152604051612398816121b2565b838152836020820152610100820152826101208201528261014082015282610160820152826101808201520152565b604051906123d4826121ce565b60006040838281528260208201520152565b60001981146123f55760010190565b634e487b7160e01b600052601160045260246000fd5b805182101561241f5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b51906001600160801b038216820361018b57565b919082604091031261018b5761246a602061246384612435565b9301612435565b90565b519067ffffffffffffffff8216820361018b57565b9081602091031261018b57516001600160a01b038116810361018b5790565b818102929181159184041417156123f557565b81156124be570490565b634e487b7160e01b600052601260045260246000fd5b60208101906001600160801b039081835116156000146124f45750505090565b61246a9382612505925116906124a1565b915116906124b4565b51906001600160a01b038216820361018b57565b919082608091031261018b578151600581101561018b57916125466020820161250e565b9160408201516001600160a01b038116810361018b5760609092015190565b5190811515820361018b57565b919082604091031261018b576020825192015190565b6040805163226f120560e11b8152600496956020956001600160a01b039593949093868216939088828c81885afa91821561288057600092612851575b50865163de40657760e01b815289818d81895afa9081156127b4578c95949392918a91600091612834575b508951630cf35bdd60e41b81529d8e01849052169860808d6024818d5afa90811561282957858c9d9e60009d9b9c9d93612805575b506126d1575b505050506126879761263c91613428565b156126c9576000305b865163cd0211eb60e01b81526001600160a01b039091169281019283523360208401526000604084015260608301949094529295869384929091839160800190565b03925af19081156126bf575061269b575050565b813d83116126b8575b6126ae81836121ea565b8101031261018b57565b503d6126a4565b513d6000823e3d90fd5b600033612645565b91818c6000612720958e9f9a809d9f86999a9b9d9f97876126f19161358c565b519788968795869363095ea7b360e01b85528401602090939291936001600160a01b0360408201951681520152565b0393165af180156127fa57908a92916127bf575b508151634d4d7cbd60e11b815287810193845230602085018190526040850152606084019190915260006080840152918290819060a0015b03816000875af180156127b457928996949261263c926126879a999795612798575b829a82945061262b565b6127ae908a3d8c116109f8576109ea81836121ea565b5061278e565b88513d6000823e3d90fd5b91508a82813d83116127f3575b6127d681836121ea565b8101031261018b5761276c926127ec8b93612565565b5092612734565b503d6127cc565b8a513d6000823e3d90fd5b61281e91935060803d8111610bbc57610baa81836121ea565b505090509138612625565b89513d6000823e3d90fd5b61284b91508c8d3d10610208576101fa81836121ea565b386125f0565b90918982813d8311612879575b61286881836121ea565b8101031261020f57505190386125c5565b503d61285e565b87513d6000823e3d90fd5b67ffffffffffffffff811161069457601f01601f191660200190565b60208183031261018b5780519067ffffffffffffffff821161018b570181601f8201121561018b5780516128da8161288b565b926128e860405194856121ea565b8184526020828401011161018b5761246a9160208085019101612224565b61290e612338565b5060409081519061291e826121b2565b600080835280602080940152612932612338565b845163d8dfeb4560e01b815290956004936001600160a01b039182169286818781875afa908115612d47579083918691612f3a575b5016885286516338d52e0f60e01b815286818781875afa908115612d47579083918691612f02575b50168888015286516307dc0d1d60e41b808252919087818881885afa908115612daa579084918791612ee5575b501660808a015287516374645ff360e01b808252919086818981895afa908115612dd0578791612ecb575b5060a08b0152885163473e3ce760e01b815288818981895afa908115612dd0578791612e9e575b5060c08b01528851631c9e379b60e01b8152908416878201819052908881602481895afa908115612dd0578791612e71575b5060e08b0152885163020a17bd60e61b815289818981895afa908115612dd05787908892612e51575b508a5191612a76836121b2565b6001600160801b03809216835216898201526101008b01528851906324720b1f60e11b8252878201528781602481885afa908115612daa578691612e24575b506101208a01528751633ba0b9a960e01b815287818881885afa908115612daa578691612df7575b506101408a0152875182815287818881885afa908115612daa578691612dda575b5088519082825286828981895afa918215612dd057918a91612b45938992612db4575b508a878b85519687958694859363eeb8a8d360e01b85528401526024830190612247565b0392165afa908115612daa578691612d70575b506101808a0152875191825286828781875afa918215612d47578592612d51575b50875190815284818781875afa908115612d475791612bbd9188938791612d25575b508951948580948193630d39bbef60e41b8352878c8401526024830190612247565b0392165afa908115612cc1578391612cf8575b5061016087015284516340626d8b60e01b815284818581855afa908115612cc1578391612ccb575b506101a0870152845163226f120560e11b815284818581855afa908115612cc157908592918491612c90575b50606088015285516377607a1760e11b815293849182905afa938415612c8657508093612c54575b505082015290565b909180935082813d8311612c7f575b612c6d81836121ea565b8101031261020f575051903880612c4c565b503d612c63565b51903d90823e3d90fd5b8381939492503d8311612cba575b612ca881836121ea565b810103126106ce579084915138612c24565b503d612c9e565b86513d85823e3d90fd5b90508481813d8311612cf1575b612ce281836121ea565b810103126106ce575138612bf8565b503d612cd8565b90508481813d8311612d1e575b612d0f81836121ea565b810103126106ce575138612bd0565b503d612d05565b612d4191503d8089833e612d3981836121ea565b8101906128a7565b38612b9b565b88513d87823e3d90fd5b612d69919250873d8911610208576101fa81836121ea565b9038612b79565b90508881813d8311612da3575b612d8781836121ea565b810103126106ca5780612d9a8992612565565b50015138612b58565b503d612d7d565b89513d88823e3d90fd5b612dc99192503d808b833e612d3981836121ea565b9038612b21565b8a513d89823e3d90fd5b612df19150883d8a11610208576101fa81836121ea565b38612afe565b90508781813d8311612e1d575b612e0e81836121ea565b810103126106ca575138612add565b503d612e04565b90508781813d8311612e4a575b612e3b81836121ea565b810103126106ca575138612ab5565b503d612e31565b9050612e6a91508a3d8c116106285761061981836121ea565b9038612a69565b90508881813d8311612e97575b612e8881836121ea565b810103126105a0575138612a40565b503d612e7e565b90508881813d8311612ec4575b612eb581836121ea565b810103126105a0575138612a0e565b503d612eab565b612edf91503d8089833e612d3981836121ea565b386129e7565b612efc9150893d8b11610208576101fa81836121ea565b386129bc565b809250888092503d8311612f33575b612f1b81836121ea565b81010312610b4157612f2d839161250e565b3861298f565b503d612f11565b809250888092503d8311612f6b575b612f5381836121ea565b81010312610b4157612f65839161250e565b38612967565b503d612f49565b95949093929180156131a65784019560808588031261018b57612f9485612163565b92602092838701359361ffff851680950361018b57604096878901359860608101359067ffffffffffffffff821161018b5701968b601f8901121561018b57873597612fdf8961288b565b9c898b519e8f90612ff090826121ea565b52848a8301011161018b5788908401848e01378b836000998a92010152156130b2575050506001600160a01b03908116913415801591906130ab5734915b156130a557335b843b156105a0578361307f899a9b9c899a519c8d998a9889976307e76fc160e21b89521660048801526024870152604486015289606486015260c0608486015260c4850190612247565b911660a483015203925af1918215612c8657505061309a5750565b6130a39061219e565b565b30613035565b479161302e565b929794509250939480979850516377607a1760e11b815282816004816001600160a01b03809b165afa92831561319c578894939287928992849561315d575b5050859660a4959651998a9788966311a5cc7760e31b885260048801523060248801521660448601528360648601526084850152165af19081156131525750613138575050565b8161314e92903d106109f8576109ea81836121ea565b5050565b8351903d90823e3d90fd5b93509350939594505081813d8311613195575b61317a81836121ea565b81010312610b4157519192869290918590879060a4386130f1565b503d613170565b88513d88823e3d90fd5b60405162461bcd60e51b815260206004820152602360248201527f4d61726b657448656c7065723a2077697468647261774461746120697320656d60448201526270747960e81b6064820152608490fd5b9594919390929560009480156131a6578401966080858903126106ca5761321d85612163565b9360208601359361ffff8516809503611af057604095868801359760608101359067ffffffffffffffff821161342457018b601f82011215611554578035906132658261288b565b9c828a519e8f9061327690826121ea565b528282016020011161342457818b928e6020808095019101378d0101521561334857506001600160a01b03918216923415801592906133415734925b1561333a5733905b853b15611554576133058a9b9c86928a9b9c9a519c8d9a8b998a986307e76fc160e21b8a5216600489015260248801526044870152606486015260c0608486015260c4850190612247565b911660a483015203925af19081156133315750613320575050565b61332a829161219e565b61020f5750565b513d84823e3d90fd5b30906132ba565b47926132b2565b9350939697509490505084519163226f120560e11b83526020836004816001600160a01b038099165afa92831561341957918591879594936000946133da575b509160009160a49493875198899788966311a5cc7760e31b885260048801523060248801521660448601526064850152826084850152165af180156133cf57613138575050565b82513d6000823e3d90fd5b9250939450916020823d602011613411575b816133f9602093836121ea565b8101031261020f575051859392909185916000613388565b3d91506133ec565b86513d6000823e3d90fd5b8a80fd5b6040805163e985e9c560e01b8082523060048301526001600160a01b0393841660248301819052909594919360209392168385604481845afa801561358157600095869161354c575b50156134e6575b82519687523060048801526001600160a01b039091166024870152939493829085908180604481015b03915afa90811561333157506134b657505050565b82813d83116134df575b6134ca81836121ea565b8101031261020f57506134dc90612565565b50565b503d6134c0565b803b15610b4157825163a22cb46560e01b8152600481018390526001602482015296858860448183865af1978815613542576134a1979861352b575b50969550613478565b95613539869493929761219e565b95909192613522565b84513d88823e3d90fd5b90508481813d831161357a575b61356381836121ea565b810103126106ca5761357490612565565b38613471565b503d613559565b83513d6000823e3d90fd5b6040516323b872dd60e01b81523360048201523060248201526044810192909252602090829060649082906000906001600160a01b03165af190811561365a57600091613621575b50156135dc57565b60405162461bcd60e51b815260206004820152600f60248201527f7472616e73666572206661696c656400000000000000000000000000000000006044820152606490fd5b906020823d8211613652575b8161363a602093836121ea565b8101031261020f575061364c90612565565b386135d4565b3d915061362d565b6040513d6000823e3d90fdfea2646970667358221220cf33614521512aa18fb0663fbadb296154d9b4a3cef1acd8c037d434b384119b64736f6c63430008120033";

type MarketsHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketsHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarketsHelper__factory extends ContractFactory {
  constructor(...args: MarketsHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MarketsHelper";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MarketsHelper> {
    return super.deploy(overrides || {}) as Promise<MarketsHelper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MarketsHelper {
    return super.attach(address) as MarketsHelper;
  }
  override connect(signer: Signer): MarketsHelper__factory {
    return super.connect(signer) as MarketsHelper__factory;
  }
  static readonly contractName: "MarketsHelper";

  public readonly contractName: "MarketsHelper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketsHelperInterface {
    return new utils.Interface(_abi) as MarketsHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarketsHelper {
    return new Contract(address, _abi, signerOrProvider) as MarketsHelper;
  }
}
