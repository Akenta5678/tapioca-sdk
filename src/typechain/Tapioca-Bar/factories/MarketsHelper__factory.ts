/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MarketsHelper, MarketsHelperInterface } from "../MarketsHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "contract IBigBang[]",
        name: "markets",
        type: "address[]",
      },
    ],
    name: "bigBangMarketInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "collateral",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "collateralId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "asset",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "assetId",
                type: "uint256",
              },
              {
                internalType: "contract IOracle",
                name: "oracle",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "oracleData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "totalCollateralShare",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "userCollateralShare",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint128",
                    name: "elastic",
                    type: "uint128",
                  },
                  {
                    internalType: "uint128",
                    name: "base",
                    type: "uint128",
                  },
                ],
                internalType: "struct Rebase",
                name: "totalBorrow",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "userBorrowPart",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "currentExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "spotExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "oracleExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalBorrowCap",
                type: "uint256",
              },
            ],
            internalType: "struct MarketsHelper.MarketInfo",
            name: "market",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "debtRate",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "lastAccrued",
                type: "uint64",
              },
            ],
            internalType: "struct IBigBang.AccrueInfo",
            name: "accrueInfo",
            type: "tuple",
          },
        ],
        internalType: "struct MarketsHelper.BigBangInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "deposit_",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "withdraw_",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "_withdrawData",
        type: "bytes",
      },
    ],
    name: "depositAddCollateralAndBorrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "deposit_",
        type: "bool",
      },
    ],
    name: "depositAndAddAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_repayAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "deposit_",
        type: "bool",
      },
    ],
    name: "depositAndRepay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_repayAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_collateralAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "deposit_",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "withdraw_",
        type: "bool",
      },
    ],
    name: "depositRepayAndRemoveCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fraction",
        type: "uint256",
      },
    ],
    name: "getAmountForAssetFraction",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "borrowPart",
        type: "uint256",
      },
    ],
    name: "getAmountForBorrowPart",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
    ],
    name: "getCollateralAmountForShare",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "borrowPart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidationMultiplierPrecision",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRatePrecision",
        type: "uint256",
      },
    ],
    name: "getCollateralSharesForBorrowPart",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralShares",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "contract IMarket",
        name: "bingBang",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "deposit_",
        type: "bool",
      },
    ],
    name: "mintAndLend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "contract IMarket",
        name: "bingBang",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_removeShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_repayAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_collateralShare",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdraw_",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "withdrawData_",
        type: "bytes",
      },
    ],
    name: "removeAssetAndRepay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "contract ISingularity[]",
        name: "markets",
        type: "address[]",
      },
    ],
    name: "singularityMarketInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "collateral",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "collateralId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "asset",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "assetId",
                type: "uint256",
              },
              {
                internalType: "contract IOracle",
                name: "oracle",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "oracleData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "totalCollateralShare",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "userCollateralShare",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint128",
                    name: "elastic",
                    type: "uint128",
                  },
                  {
                    internalType: "uint128",
                    name: "base",
                    type: "uint128",
                  },
                ],
                internalType: "struct Rebase",
                name: "totalBorrow",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "userBorrowPart",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "currentExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "spotExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "oracleExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalBorrowCap",
                type: "uint256",
              },
            ],
            internalType: "struct MarketsHelper.MarketInfo",
            name: "market",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "elastic",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "base",
                type: "uint128",
              },
            ],
            internalType: "struct Rebase",
            name: "totalAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userAssetFraction",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "interestPerSecond",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "lastAccrued",
                type: "uint64",
              },
              {
                internalType: "uint128",
                name: "feesEarnedFraction",
                type: "uint128",
              },
            ],
            internalType: "struct ISingularity.AccrueInfo",
            name: "accrueInfo",
            type: "tuple",
          },
        ],
        internalType: "struct MarketsHelper.SingularityInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576137d2908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c90816314ecf5a814611fb25750806326dd79a614611bc35780632f7de8d7146118c7578063443c73a7146116385780634b96e5711461114d5780636dd55c0b14610ec8578063700ea12414610c375780638bebc1b5146107a6578063a306dfd5146106e4578063e4e802e814610242578063e552cb411461020c5763ea881c18146100a557600080fd5b34610209576040366003190112610209576001600160a01b0390816100c8612164565b16916040519263de40657760e01b84526020938481600481855afa9081156101ce57859085926101d9575b5060049192604051928380926377607a1760e11b82525afa9081156101ce5790859291859161019d575b50606490604051948593849263442c159960e01b845260048401526024356024840152876044840152165afa918215610191579161015f575b50604051908152f35b90508181813d831161018a575b6101768183612244565b81010312610185575138610156565b600080fd5b503d61016c565b604051903d90823e3d90fd5b83819492503d83116101c7575b6101b48183612244565b810103126101855760648592519061011d565b503d6101aa565b6040513d86823e3d90fd5b600492506101fc90823d8411610202575b6101f48183612244565b8101906124dc565b916100f3565b503d6101ea565b80fd5b50346102095760803660031901126102095761023f610229612164565b61023161219f565b9060443590602435906125e2565b80f35b50346102095760403660031901126102095761025c612164565b6024359067ffffffffffffffff82116106e057366023830112156106e057816004013561028881612266565b926102966040519485612244565b8184526024602085019260051b820101903682116106dc57602401915b8183106106bc575050508151906102c982612266565b926102d76040519485612244565b828452601f196102e684612266565b01855b818110610641575050600060206040516103028161220c565b828152015261030f612421565b50845b8381106103f75784866040519182916020830160208452825180915260408401602060408360051b870101940192905b82821061035157505050500390f35b919360019193955060208091603f1989820301855287519060c06001600160801b036040610388855160e0865260e08601906122c6565b946103af8782015188870190602090816001600160801b0391828151168552015116910152565b818101519060609182870152015167ffffffffffffffff815116608086015267ffffffffffffffff878201511660a08601520151169101529601920192018594939192610342565b6001600160a01b036104098284612465565b511690610416828561295d565b6104208288612465565b515260405163f9557ccb60e01b8152604081600481865afa80156105fc5788918991610607575b506001600160801b0390816040519361045f8561220c565b16835216602082015260206104748389612465565b5101526040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602081602481865afa9081156105fc5788916105c9575b5060049260609160406104d6858b612465565b51015260405193848092632c9f039d60e21b82525afa9182156105be5787908890899461054b575b506105469367ffffffffffffffff6001600160801b0392816040519561052387612228565b168552166020840152166040820152606061053e8389612465565b510152612440565b610312565b935050506060823d6060116105b6575b8161056860609383612244565b810103126105b257816001600160801b03610585610546946124c7565b67ffffffffffffffff6105a6604061059f602087016124c7565b950161248f565b919391955050906104fe565b8680fd5b3d915061055b565b6040513d89823e3d90fd5b90506020813d6020116105f4575b816105e460209383612244565b81010312610185575160046104c3565b3d91506105d7565b6040513d8a823e3d90fd5b6001600160801b039250610633915060403d60401161063a575b61062b8183612244565b8101906124a3565b9091610447565b503d610621565b60405190608082019180831067ffffffffffffffff8411176106a65760209260405261066b612392565b81526040516106798161220c565b6000815260008482015283820152886040820152610695612421565b6060820152828289010152016102e9565b634e487b7160e01b600052604160045260246000fd5b82356001600160a01b0381168103610185578152602092830192016102b3565b8580fd5b8280fd5b5034610209576040366003190112610209576001600160a01b036040610708612164565b6000602083516107178161220c565b8281520152600482518094819363020a17bd60e61b8352165afa90811561079b579082610771926020949192610779575b50604051916107568361220c565b6001600160801b03809216835216838201526024359061252e565b604051908152f35b9050610794915060403d60401161063a5761062b8183612244565b9038610748565b6040513d84823e3d90fd5b5060e0366003190112610209576107bb612164565b6107c361217a565b6107cb6121ae565b906107d4612190565b9260c43567ffffffffffffffff81116106dc576107f59036906004016121ca565b9094866040519563de40657760e01b87526020876004816001600160a01b0389165afa96871561079b578297610c16575b50604051906377607a1760e11b82526020826004816001600160a01b038a165afa918215610c0b578392610bd4575b5060405191630cf35bdd60e41b83528060048401526080836024816001600160a01b038d165afa80156101ce576001600160a01b03938591610ba2575b5060208a606460405180978193638eb22cdd60e01b835287600484015260443560248401528a6044840152165afa938415610b5e578594610b69575b5082610a35575b50506108ea6001600160a01b038916876134fe565b15610a2f57305b6001600160a01b0386163b156106e05760405163096f9e0960e21b81526001600160a01b0391821660048201529087166024820152600060448201526064810191909152818180608481010381836001600160a01b038a165af1801561079b57610a1b575b50508015610a105761099f604030955b81516314890dcb60e21b81526001600160a01b039182166004820152908716602482015260648035604483015290928391829190820190565b03818b6001600160a01b0389165af180156105fc576109e2575b506109c2578580f35b6109d9946001600160a01b036064359516936132eb565b38808080808580f35b610a039060403d604011610a09575b6109fb8183612244565b8101906125cc565b506109b9565b503d6109f1565b61099f604085610966565b610a24906121f8565b6105b2578638610956565b856108f1565b6020610a866001600160a01b0392610a4f6044358261369c565b60405163095ea7b360e01b81526001600160a01b03858f161660048201526044803560248301529094859384928b92918491820190565b0393165af18015610b5e5784918b91610b13575b5060408051634d4d7cbd60e11b8152600481019490945230602485018190526044850152600060648501526084840192909252829081876001600160a01b038260a481015b0393165af180156101ce57610af5575b806108d5565b610b0d9060403d604011610a09576109fb8183612244565b50610aef565b9150506020813d602011610b56575b81610b2f60209383612244565b81010312610b5257838a610adf93610b486040946125bf565b5093509091610a9a565b8480fd5b3d9150610b22565b6040513d87823e3d90fd5b92935093506020823d602011610b9a575b81610b8760209383612244565b81010312610185578a93839251936108ce565b3d9150610b7a565b610bc3915060803d8111610bcd575b610bbb8183612244565b81019061257c565b5050905038610892565b503d610bb1565b925090506020823d602011610c03575b81610bf160209383612244565b81010312610185578891519038610855565b3d9150610be4565b6040513d85823e3d90fd5b610c3091975060203d602011610202576101f48183612244565b9538610826565b50346102095760c036600319011261020957610c51612164565b606435610c5c6121ae565b610c64612190565b906001600160a01b0391828516916040519063de40657760e01b82526020948583600481885afa8015610ebd57610cac938a91610ea0575b50169660443590602435906125e2565b8015610e995730905b866040516377607a1760e11b938482528682600481895afa918215610c0b578392610e67575b5060405191638eb22cdd60e01b8352600483015287602483015282604483015286826064818c5afa918215610c0b578392610e35575b50853b156106e05760405163cce19f8160e01b81523360048201526001600160a01b039190911660248201526044810191909152818160648183895af1801561079b57610e21575b5050610d63578580f35b829060046040518094819382525afa918215610b5e578592610df0575b5050604080516311a5cc7760e31b8152600481019290925230602483015233604483015260648201929092526000608482015291829060a490829086905af1801561079b57610dd2575b808080808580f35b610dea9060403d604011610a09576109fb8183612244565b50610dca565b9080939250813d8311610e1a575b610e088183612244565b81010312610185579051826040610d80565b503d610dfe565b610e2a906121f8565b6105b2578638610d59565b925090508582813d8111610e60575b610e4e8183612244565b81010312610185578891519038610d11565b503d610e44565b925090508582813d8111610e92575b610e808183612244565b81010312610185578891519038610cdb565b503d610e76565b3390610cb5565b610eb79150873d8911610202576101f48183612244565b38610c9c565b6040513d8b823e3d90fd5b503461020957604036600319011261020957610ee2612164565b60243567ffffffffffffffff92838211610209573660238301121561020957816004013592610f1084612266565b92610f1e6040519485612244565b84845260209460248686019160051b83010191368311610b5257602401905b82821061112e57505050825190610f5382612266565b93610f616040519586612244565b828552601f19610f7084612266565b0186855b8281106110f0575060009150604051610f8c8161220c565b8281520152835b83811061101d575050505060405192808401908085528351809252604085018160408460051b880101950193965b838810610fce5786860387f35b90919293948380600192603f198a82030186528851906040868480610ffb865160608088528701906122c6565b9501518281511682860152015116910152970193019701969093929193610fc1565b8060406001600160a01b0361103460049486612465565b5116611040818761295d565b61104a848b612465565b5152815193848092632c9f039d60e21b82525afa80156110e5578987918890611099575b611094945081604051936110818561220c565b16835216898201528861053e838a612465565b610f93565b505050906040813d6040116110dd575b816110b660409383612244565b810103126106dc579081896110d88a6110d1611094966124c7565b93016124c7565b61106e565b3d91506110a9565b6040513d88823e3d90fd5b6040516110fc8161220c565b611104612392565b81526040516111128161220c565b600081526000848201528382015282828a010152018790610f74565b81356001600160a01b03811681036106dc578152908601908601610f3d565b50346102095760a036600319011261020957611167612164565b8161117061217a565b916111796121ae565b6040516377607a1760e11b81526001600160a01b0391828616906020968784600481865afa9384156105be578794611606575b50846040519663de40657760e01b885216948887600481895afa9687156105fc5788976115e7575b508060405197630cf35bdd60e41b89528660048a01521694608088602481895afa978815610ebd5789986115c3575b50604051638eb22cdd60e01b98898252826004830152604435938460248401528b60448401528c836064818c5afa9687156115b8578d938d98611579575b508995949392918d9161145e575b50505050506113f5575b5050604080516314890dcb60e21b815233600482018190526024820152606480356044830181905294919350839182908a905af180156110e5576113d7575b5060405163226f120560e11b81528681600481875afa9081156110e55786916113a6575b50604051948552600485015260248401528360448401528483606481845afa9081156101ce578593859261136d575b50906112fb8392611333946134fe565b604051630cb0f5b760e31b81523360048201819052602482015260006044820152606481019190915293849283919082906084820190565b03925af18015610c0b57611345578280f35b813d8311611366575b6113588183612244565b810103126101855738808280f35b503d61134e565b92945092905081813d831161139f575b6113878183612244565b810103126101855751849284929091906112fb6112eb565b503d61137d565b809650878092503d83116113d0575b6113bf8183612244565b8101031261018557869451386112bc565b503d6113b5565b6113ef9060403d604011610a09576109fb8183612244565b50611298565b6113fe916134fe565b813b156106dc5760405163096f9e0960e21b8152306004820152336024820152600060448201526064810191909152858160848183865af19081156110e557869161144a575b83611259565b611453906121f8565b610b52578438611444565b9582916114a29761147088809661369c565b60405180998196829563095ea7b360e01b845260048401602090939291936001600160a01b0360408201951681520152565b0393165af192831561156e57859361152b575b5060408051634d4d7cbd60e11b815260048101929092523060248301819052604483015260006064830152608482019390935291828060a481015b03818c8a5af1918215610ebd57869261150d575b8a818b8161124f565b6115259060403d604011610a09576109fb8183612244565b50611504565b92508a83813d8311611567575b6115428183612244565b81010312611563578460409161155a6114f0956125bf565b509150926114b5565b8980fd5b503d611538565b6040513d8c823e3d90fd5b929c5096509093929184813d81116115b1575b6115968183612244565b810103126101855792518c9a9095929391928c929089611241565b503d61158c565b6040513d8e823e3d90fd5b6115dc91985060803d8111610bcd57610bbb8183612244565b505090509638611203565b6115ff919750893d8b11610202576101f48183612244565b95386111d4565b965092508686813d8111611631575b61161f8183612244565b810103126101855787955192386111ac565b503d611615565b503461020957608036600319011261020957611652612164565b90604051916116608361220c565b6000835260006020809401526001600160a01b03809116906040519163020a17bd60e61b8352604083600481845afa9283156101ce57849085946118a3575b50604051936116ad8561220c565b6001600160801b03809216855216858401526040519263de40657760e01b84528584600481855afa938415610b5e578594611880575b506116f1906024359061252e565b604051916377607a1760e11b83528683600481845afa9283156110e5578693611851575b50604051917f529898f20000000000000000000000000000000000000000000000000000000083528783600481855afa9283156105be57908891889461181e575b50600493611763916124fb565b9160405193848092633ba0b9a960e01b82525afa9182156110e55790879493929187926117ea575b5061179c606493926117af926124fb565b6117a984356044356124fb565b9061250e565b926040519586948593638eb22cdd60e01b855260048501526024840152876044840152165afa918215610191579161015f5750604051908152f35b809392508591953d8311611817575b6118038183612244565b81010312610185579051869361179c61178b565b503d6117f9565b93509083813d811161184a575b6118358183612244565b81010312610185579151918790611763611756565b503d61182b565b9092508681813d8311611879575b6118698183612244565b8101031261018557519138611715565b503d61185f565b6116f191945061189c90873d8911610202576101f48183612244565b93906116e3565b90506118bf91935060403d60401161063a5761062b8183612244565b92903861169f565b5034610209576080366003190112610209576118e1612164565b6118e961217a565b90604435906118f661219f565b6001600160a01b038092166040519463226f120560e11b86526020958681600481865afa9081156105fc578891611b96575b5060405163de40657760e01b81528781600481875afa8015610ebd5786918a91611b79575b501695604051630cf35bdd60e41b81528260048201526080816024818b5afa90811561156e578a91611b57575b508960405197638eb22cdd60e01b89528460048a01528360248a01528160448a01528a896064818d5afa97881561079b578b998399611b23575b50611a0f575b50505050506119cc61133395836134fe565b86604051809681958294630cb0f5b760e31b845230600485016060919493929460808201956001600160a01b038092168352166020820152600060408201520152565b82918a91611a2386611a55989c979661369c565b60405180978196829563095ea7b360e01b845260048401602090939291936001600160a01b0360408201951681520152565b0393165af180156105fc57611ae1575b5060408051634d4d7cbd60e11b81526004810195909552306024860181905260448601526000606486015260848501849052848060a481015b03818a895af180156105be576113339587956119cc92611ac3575b81975089816119ba565b611adb9060403d604011610a09576109fb8183612244565b50611ab9565b938685813d8311611b1c575b611af78183612244565b81010312611b185783604091611b0f611a9e976125bf565b50955050611a65565b8780fd5b503d611aed565b925097509781813d8311611b50575b611b3c8183612244565b810103126101855789978b915197386119b4565b503d611b32565b611b6f915060803d8111610bcd57610bbb8183612244565b505090503861197a565b611b909150893d8b11610202576101f48183612244565b3861194d565b90508681813d8311611bbc575b611bad8183612244565b81010312610185575138611928565b503d611ba3565b50346102095760e036600319011261020957611bdd612164565b611be561217a565b6084359060443584611bf5612190565b60c43567ffffffffffffffff81116106e057611c159036906004016121ca565b9290966001600160a01b03809116946040519163de40657760e01b835260209283816004818b5afa8015610b5e5782918691611f95575b50169716916040519163226f120560e11b83528183600481875afa928315610b5e578593611f66575b5060405163442c159960e01b815283600482015281602482015285604482015282816064818d5afa9081156110e55783908792611f37575b506040517ff4d9375300000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101939093529091908180606481015b0381898d5af19081156110e5578391611f0e575b505060405163cd0211eb60e01b8152306004820152336024820152600060448201526064803590820152828160848189895af19081156110e5578691611ee1575b50818110611dd8575b5050505082600014611dd15730905b803b156106e05760405163cce19f8160e01b81523360048201526001600160a01b039290921660248301526044820188905282908290606490829084905af1801561079b57611dbd575b5050611db3578580f35b6109d994306130c1565b611dc6906121f8565b6105b2578638611da9565b3390611d5f565b9080929394955003908111611ecd5760405190638eb22cdd60e01b825283600483015260248201528a604482015281816064818b5afa918215611ec2578b92611e94575b5050863b1561156357604051917f0411b252000000000000000000000000000000000000000000000000000000008352306004840152336024840152604483015260648201528881608481838a5af18015610ebd57611e81575b908180808b94611d50565b611e8d909891986121f8565b9638611e76565b90809250813d8311611ebb575b611eab8183612244565b8101031261156357513880611e1c565b503d611ea1565b6040513d8d823e3d90fd5b60248b634e487b7160e01b81526011600452fd5b90508281813d8311611f07575b611ef88183612244565b810103126106dc575138611d47565b503d611eee565b813d8311611f30575b611f218183612244565b81010312610b52578138611d06565b503d611f17565b809250813d8311611f5f575b611f4d8183612244565b810103126106dc575182611cf2611cad565b503d611f43565b9092508181813d8311611f8e575b611f7e8183612244565b81010312610b5257519138611c75565b503d611f74565b611fac9150853d8711610202576101f48183612244565b38611c4c565b8234610209576040366003190112610209576001600160a01b0380611fd5612164565b169063f9557ccb60e01b8452604084600481855afa908115610c0b5783948492612140575b506040519163de40657760e01b83526020958684600481885afa9384156110e5578790879561211e575b5060049394956040519485809263226f120560e11b82525afa9283156110e55790879493929187936120e6575b5060649291612078916120706001600160801b038092166024356124fb565b91169061250e565b92604051958694859363442c159960e01b855260048501526024840152876044840152165afa9182156101915780926120b6575b5050604051908152f35b9091508282813d83116120df575b6120ce8183612244565b8101031261020957505182806120ac565b503d6120c4565b80929350859194953d8311612117575b6121008183612244565b810103126106dc5751869392909190612078612051565b503d6120f6565b600494955061213990823d8411610202576101f48183612244565b9493612024565b90945061215c915060403d60401161063a5761062b8183612244565b909385611ffa565b600435906001600160a01b038216820361018557565b602435906001600160a01b038216820361018557565b60a43590811515820361018557565b60643590811515820361018557565b60843590811515820361018557565b3590811515820361018557565b9181601f840112156101855782359167ffffffffffffffff8311610185576020838186019501011161018557565b67ffffffffffffffff81116106a657604052565b6040810190811067ffffffffffffffff8211176106a657604052565b6060810190811067ffffffffffffffff8211176106a657604052565b90601f8019910116810190811067ffffffffffffffff8211176106a657604052565b67ffffffffffffffff81116106a65760051b60200190565b60005b8381106122915750506000910152565b8181015183820152602001612281565b906020916122ba8151809281855285808601910161227e565b601f01601f1916010190565b906001600160a01b03808351168252602083015160208301528060408401511660408301526060830151606083015260808301511660808201526101c061231c60a08401516101e08060a08601528401906122a1565b9260c081015160c084015260e081015160e084015261235a6101008083015190850190602090816001600160801b0391828151168552015116910152565b610120810151610140908185015281015161016090818501528101516101809081850152810151906101a09182850152015191015290565b604051906101c0820182811067ffffffffffffffff8211176106a657604052816101a0600091828152826020820152826040820152826060820152826080820152606060a08201528260c08201528260e08201526040516123f28161220c565b838152836020820152610100820152826101208201528261014082015282610160820152826101808201520152565b6040519061242e82612228565b60006040838281528260208201520152565b600019811461244f5760010190565b634e487b7160e01b600052601160045260246000fd5b80518210156124795760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b51906001600160801b038216820361018557565b9190826040910312610185576124c460206124bd8461248f565b930161248f565b90565b519067ffffffffffffffff8216820361018557565b9081602091031261018557516001600160a01b03811681036101855790565b8181029291811591840414171561244f57565b8115612518570490565b634e487b7160e01b600052601260045260246000fd5b60208101906001600160801b0390818351161560001461254e5750505090565b6124c4938261255f925116906124fb565b9151169061250e565b51906001600160a01b038216820361018557565b9190826080910312610185578151600581101561018557916125a060208201612568565b9160408201516001600160a01b03811681036101855760609092015190565b5190811515820361018557565b9190826040910312610185576020825192015190565b919093926001600160a01b039182841660409283519563226f120560e11b875260209660049988828c81885afa9182156128d7576000926128a8575b50865163de40657760e01b815289818d81895afa90811561280b578c95949392918a9160009161288b575b5016988289519d8e630cf35bdd60e41b8152015260808d6024818d5afa90811561288057858c9d9e60009d9b9c9d9361285c575b50612728575b505050506126de97612694916134fe565b15612720576000305b86519788958694859363cd0211eb60e01b8552339185016060919493929460808201956001600160a01b038092168352166020820152600060408201520152565b03925af190811561271657506126f2575050565b813d831161270f575b6127058183612244565b8101031261018557565b503d6126fb565b513d6000823e3d90fd5b60003361269d565b91818c6000612777958e9f9a809d9f86999a9b9d9f97876127489161369c565b519788968795869363095ea7b360e01b85528401602090939291936001600160a01b0360408201951681520152565b0393165af1801561285157908a9291612816575b508151634d4d7cbd60e11b815287810193845230602085018190526040850152606084019190915260006080840152918290819060a0015b03816000875af1801561280b579289969492612694926126de9a9997956127ef575b829a829450612683565b612805908a3d8c11610a09576109fb8183612244565b506127e5565b88513d6000823e3d90fd5b91508a82813d831161284a575b61282d8183612244565b81010312610185576127c3926128438b936125bf565b509261278b565b503d612823565b8a513d6000823e3d90fd5b61287591935060803d8111610bcd57610bbb8183612244565b50509050913861267d565b89513d6000823e3d90fd5b6128a291508c8d3d10610202576101f48183612244565b38612649565b90918982813d83116128d0575b6128bf8183612244565b81010312610209575051903861261e565b503d6128b5565b87513d6000823e3d90fd5b67ffffffffffffffff81116106a657601f01601f191660200190565b6020818303126101855780519067ffffffffffffffff8211610185570181601f82011215610185578051612931816128e2565b9261293f6040519485612244565b81845260208284010111610185576124c4916020808501910161227e565b612965612392565b506040908151906129758261220c565b600080835280602080940152612989612392565b946001600160a01b03809116908551937fd8dfeb4500000000000000000000000000000000000000000000000000000000855260049486818781875afa908115612e96579083918691613089575b5016885286517f38d52e0f00000000000000000000000000000000000000000000000000000000815286818781875afa908115612e96579083918691613051575b5016878901528651907f7dc0d1d0000000000000000000000000000000000000000000000000000000009182815287818881885afa908115612ef9579084918791613034575b501660808a01528751907f74645ff3000000000000000000000000000000000000000000000000000000009182815286818981895afa908115612f1f57879161301a575b5060a08b015288517f473e3ce700000000000000000000000000000000000000000000000000000000815288818981895afa908115612f1f578791612fed575b5060c08b0152838951917f1c9e379b000000000000000000000000000000000000000000000000000000008352169081888201528881602481895afa908115612f1f578791612fc0575b5060e08b0152885163020a17bd60e61b815289818981895afa908115612f1f5787908892612fa0575b508a5191612b628361220c565b6001600160801b03809216835216898201526101008b01528851907f48e4163e000000000000000000000000000000000000000000000000000000008252878201528781602481885afa908115612ef9578691612f73575b506101208a01528751633ba0b9a960e01b815287818881885afa908115612ef9578691612f46575b506101408a0152875182815287818881885afa908115612ef9578691612f29575b5088519082825286828981895afa918215612f1f57918a91612c63938992612f03575b508a878b8551968795869485937feeb8a8d300000000000000000000000000000000000000000000000000000000855284015260248301906122a1565b0392165afa908115612ef9578691612ebf575b506101808a0152875191825286828781875afa918215612e96578592612ea0575b50875190815284818781875afa908115612e965791612cf49188938791612e74575b5089519485809481937fd39bbef0000000000000000000000000000000000000000000000000000000008352878c84015260248301906122a1565b0392165afa908115612e10578391612e47575b5061016087015284517f40626d8b00000000000000000000000000000000000000000000000000000000815284818581855afa908115612e10578391612e1a575b506101a0870152845163226f120560e11b815284818581855afa908115612e1057908592918491612ddf575b5060608801528551938480926377607a1760e11b82525afa938415612dd557508093612da3575b505082015290565b909180935082813d8311612dce575b612dbc8183612244565b81010312610209575051903880612d9b565b503d612db2565b51903d90823e3d90fd5b8381939492503d8311612e09575b612df78183612244565b810103126106e0579084915138612d74565b503d612ded565b86513d85823e3d90fd5b90508481813d8311612e40575b612e318183612244565b810103126106e0575138612d48565b503d612e27565b90508481813d8311612e6d575b612e5e8183612244565b810103126106e0575138612d07565b503d612e54565b612e9091503d8089833e612e888183612244565b8101906128fe565b38612cb9565b88513d87823e3d90fd5b612eb8919250873d8911610202576101f48183612244565b9038612c97565b90508881813d8311612ef2575b612ed68183612244565b810103126106dc5780612ee989926125bf565b50015138612c76565b503d612ecc565b89513d88823e3d90fd5b612f189192503d808b833e612e888183612244565b9038612c26565b8a513d89823e3d90fd5b612f409150883d8a11610202576101f48183612244565b38612c03565b90508781813d8311612f6c575b612f5d8183612244565b810103126106dc575138612be2565b503d612f53565b90508781813d8311612f99575b612f8a8183612244565b810103126106dc575138612bba565b503d612f80565b9050612fb991508a3d8c1161063a5761062b8183612244565b9038612b55565b90508881813d8311612fe6575b612fd78183612244565b810103126105b2575138612b2c565b503d612fcd565b90508881813d8311613013575b6130048183612244565b810103126105b2575138612ae2565b503d612ffa565b61302e91503d8089833e612e888183612244565b38612aa2565b61304b9150893d8b11610202576101f48183612244565b38612a5e565b809250888092503d8311613082575b61306a8183612244565b81010312610b525761307c8391612568565b38612a18565b503d613060565b809250888092503d83116130ba575b6130a28183612244565b81010312610b52576130b48391612568565b386129d7565b503d613098565b91939492909460009384809760609780613254575b5050156131685750506001600160a01b0380911691823b156101855761313860009561ffff97604051988997889687966307e76fc160e21b8852166004870152166024850152604484015286606484015260c0608484015260c48301906122a1565b3360a4830152039134905af1801561315c576131515750565b61315a906121f8565b565b6040513d6000823e3d90fd5b935093509350506040928351906377607a1760e11b82526020826004816001600160a01b038095165afa918215613249579085939291600092613210575b5090600060a492855196879586946311a5cc7760e31b865260048601523060248601523360448601528360648601526084850152165af18015613205576131eb575050565b8161320192903d10610a09576109fb8183612244565b5050565b82513d6000823e3d90fd5b91909293506020823d8211613241575b8161322d60209383612244565b8101031261020957505184929160006131a6565b3d9150613220565b85513d6000823e3d90fd5b91965080979850016080878203126106dc5761326f876121bd565b9560208801359861ffff8a168a036132e75788013567ffffffffffffffff81116132e757880182601f820112156132e7578035906132ac826128e2565b936132ba6040519586612244565b828552602083830101116106e05781604094939260208093018386013783010152960135969438806130d6565b5080fd5b909291600095869560009687966060948061346c575b50501561339057506001600160a01b0380941694853b15611b185761ffff9694928896949261336592604051998a98899788976307e76fc160e21b89521660048801521660248601526044850152606484015260c0608484015260c48301906122a1565b3360a4830152039134905af1801561079b5761337f575050565b61338982916121f8565b6102095750565b955095505050905060009060409384519163226f120560e11b83526020836004816001600160a01b038095165afa9081156134625790848793928192613422575b8460a4949596505197889586946311a5cc7760e31b865260048601523060248601523360448601526064850152826084850152165af190811561341757506131eb575050565b8351903d90823e3d90fd5b93505050916020813d821161345a575b8161343f60209383612244565b8101031261345657518592839290919085906133d1565b8380fd5b3d9150613432565b86513d86823e3d90fd5b91508094975001608084820312611b1857613486846121bd565b9760208501359761ffff891689036132e75785013567ffffffffffffffff81116132e757850182601f820112156132e7578035906134c3826128e2565b936134d16040519586612244565b828552602083830101116106e0578160409493926020809301838601378301015293013595963880613301565b604080517fe985e9c5000000000000000000000000000000000000000000000000000000008082523060048301526001600160a01b0393841660248301819052909594919360209392168385604481845afa801561369157600095869161365c575b50156135de575b82519687523060048801526001600160a01b039091166024870152939493829085908180604481015b03915afa9081156135d557506135a557505050565b82813d83116135ce575b6135b98183612244565b8101031261020957506135cb906125bf565b50565b503d6135af565b513d84823e3d90fd5b803b15610b52578251967fa22cb46500000000000000000000000000000000000000000000000000000000885282600489015260016024890152858860448183865af197881561365257613590979861363b575b50969550613567565b9561364986949392976121f8565b95909192613632565b84513d88823e3d90fd5b90508481813d831161368a575b6136738183612244565b810103126106dc57613684906125bf565b38613560565b503d613669565b83513d6000823e3d90fd5b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810192909252602090829060649082906000906001600160a01b03165af190811561315c57600091613763575b501561370557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f7472616e73666572206661696c656400000000000000000000000000000000006044820152fd5b906020823d8211613794575b8161377c60209383612244565b81010312610209575061378e906125bf565b386136fd565b3d915061376f56fea2646970667358221220fd09141a9aaee13daa072d8663c0f54eeadce325c07502050d672064b083f2ac64736f6c63430008120033";

type MarketsHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketsHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarketsHelper__factory extends ContractFactory {
  constructor(...args: MarketsHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MarketsHelper";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MarketsHelper> {
    return super.deploy(overrides || {}) as Promise<MarketsHelper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MarketsHelper {
    return super.attach(address) as MarketsHelper;
  }
  override connect(signer: Signer): MarketsHelper__factory {
    return super.connect(signer) as MarketsHelper__factory;
  }
  static readonly contractName: "MarketsHelper";

  public readonly contractName: "MarketsHelper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketsHelperInterface {
    return new utils.Interface(_abi) as MarketsHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarketsHelper {
    return new Contract(address, _abi, signerOrProvider) as MarketsHelper;
  }
}
