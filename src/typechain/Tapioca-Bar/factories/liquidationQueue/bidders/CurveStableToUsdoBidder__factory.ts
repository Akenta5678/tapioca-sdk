/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CurveStableToUsdoBidder,
  CurveStableToUsdoBidderInterface,
} from "../../../liquidationQueue/bidders/CurveStableToUsdoBidder";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISwapper",
        name: "curveSwapper_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "curvePoolAssetCount_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_old",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_new",
        type: "address",
      },
    ],
    name: "CurveSwapperUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "curveSwapper",
    outputs: [
      {
        internalType: "contract ISwapper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenInId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getInputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenInId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getOutputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISwapper",
        name: "_swapper",
        type: "address",
      },
    ],
    name: "setCurveSwapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenInId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100ab57601f61160c38819003918201601f19168301916001600160401b038311848410176100b05780849260409485528339810103126100ab5780516001600160a01b03811691908290036100ab576020015160008054336001600160a01b03199182168117835560405194927f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a3600254161760025560035561154590816100c78239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146103c157508163078dfbe7146102a65781634e71e0c8146101e95781635810e7ec14610168575080635dd82b361461014b5780638da5cb5b14610126578063b691d78c14610108578063e30c3978146100e1578063e91f9961146100ba5763fef744fa1461009357600080fd5b346100b6576020906100af6100a736610488565b505091610831565b9051908152f35b5080fd5b50346100b657816003193601126100b6576020906001600160a01b03600254169051908152f35b50346100b657816003193601126100b6576020906001600160a01b03600154169051908152f35b50346100b6576020906100af61011d36610488565b939290926109fd565b50346100b657816003193601126100b6576001600160a01b0360209254169051908152f35b50346100b6576020906100af61016036610488565b505091610613565b8390346100b65760203660031901126100b657356001600160a01b038082168092036101e55761019c8184541633146104f2565b816002549182167faa9eb2cf6e6a7bce28901c01eb97556feb7824a5a9b13df2c67580509a62633f8580a373ffffffffffffffffffffffffffffffffffffffff19161760025580f35b8280fd5b919050346101e557826003193601126101e557600154906001600160a01b0392838316918233036102635750508084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a373ffffffffffffffffffffffffffffffffffffffff199283161783551660015580f35b906020606492519162461bcd60e51b8352820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b9050346101e55760603660031901126101e5578035906001600160a01b03928383168093036103bd5760243580151581036103b9576044359081151582036103b5576102f68688541633146104f2565b1561039c57831590811591610394575b50156103515750508083549283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a36001600160a01b03198092161782556001541660015580f35b906020606492519162461bcd60e51b8352820152601560248201527f4f776e61626c653a207a65726f206164647265737300000000000000000000006044820152fd5b905038610306565b50505090506001600160a01b0319600154161760015580f35b8680fd5b8580fd5b8480fd5b8385346104455780600319360112610445578183019083821067ffffffffffffffff831117610432575061042e93508152601a82527f737461626c65202d3e205553444f2028334372762b5553444f29000000000000602083015251918291602083526020830190610448565b0390f35b634e487b7160e01b815260418552602490fd5b80fd5b919082519283825260005b848110610474575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610453565b60806003198201126104ed576004356001600160a01b03811681036104ed5791602435916044359160643567ffffffffffffffff928382116104ed57806023830112156104ed5781600401359384116104ed57602484830101116104ed576024019190565b600080fd5b156104f957565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b67ffffffffffffffff811161055157604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761055157604052565b90601f8019910116810190811067ffffffffffffffff82111761055157604052565b51906001600160a01b03821682036104ed57565b156105c057565b60405162461bcd60e51b815260206004820152600c60248201526b1554d113c81b9bdd081cd95d60a21b6044820152606490fd5b908160209103126104ed57516001600160a01b03811681036104ed5790565b60408051636c3d8b8f60e01b808252919594936001600160a01b03939092916020918516908281600481855afa9081156107ee57869184916000916107f9575b5060048b5180948193631192124760e11b8352165afa80156107ee5786906000906107b5575b61068692501615156105b9565b87519283528183600481845afa8015610735578593600091610779575b50829060048a51809881936386c8e21d60e01b8352165afa9485156107355760009561074a575b50848414610740578160049189519283809263de40657760e01b82525afa91821561073557610705979850600092610708575b505016611170565b90565b6107279250803d1061072e575b61071f8183610583565b8101906105f4565b38806106fd565b503d610715565b88513d6000823e3d90fd5b5093955050505050565b90948282813d8311610772575b6107618183610583565b8101031261044557505193386106ca565b503d610757565b919280945082813d83116107ae575b6107928183610583565b81010312610445575090826107a88694936105a5565b906106a3565b503d610788565b90508382813d83116107e7575b6107cc8183610583565b810103126104455750856107e2610686926105a5565b610679565b503d6107c2565b89513d6000823e3d90fd5b92509082813d811161082a575b6108108183610583565b8101031261044557508261082487926105a5565b38610653565b503d610806565b60408051636c3d8b8f60e01b80825291959493926001600160a01b0392916020918416908281600481855afa9081156107ee57859184916000916109c5575b5060048b5180948193631192124760e11b8352165afa80156107ee57859060009061098c575b6108a392501615156105b9565b87519283528183600481845afa8015610735578493600091610950575b50829060048a51809781936386c8e21d60e01b8352165afa93841561073557600094610921575b50838514610740578160049189519283809263de40657760e01b82525afa9182156107355761070597985060009261070857505016611170565b90938282813d8311610949575b6109388183610583565b8101031261044557505192386108e7565b503d61092e565b919280945082813d8311610985575b6109698183610583565b810103126104455750908261097f8594936105a5565b906108c0565b503d61095f565b90508382813d83116109be575b6109a38183610583565b810103126104455750846109b96108a3926105a5565b610896565b503d610999565b92509082813d81116109f6575b6109dc8183610583565b810103126104455750826109f086926105a5565b38610870565b503d6109d2565b60408051636c3d8b8f60e01b815260049796949591946001600160a01b039460009460209491939087169085818d81855afa90811561105057889187918991611092575b508d8b5180948193631192124760e11b8352165afa8015611050578890889061105a575b610a7292501615156105b9565b875163de40657760e01b815285818d81855afa908115611050578c9189918991611033575b501691868a51809363c23ea21f60e01b825281845afa918215610d8c578d959493929188918a93611014575b508b51636c3d8b8f60e01b81529e8f9182905afa9c8d15610d8c57889d610fd0575b50868a9b9c9d868b9c9b9a9b51809b81936386c8e21d60e01b8352165afa978815610fc657908a918a99610f93575b501691823303610f6657878614610e7a57908b9c9b91878a9580610e5b575b50505089600254168b5190638eb22cdd60e01b93848352888884015260248301528a60448301528882606481865afa918215610e51578b92610e22575b50823b15610e1e578c51630208d92960e11b8152308882019081526001600160a01b0390921660208301526040820189905260608201929092528a9082908190608001038183865af18015610e1457908a91610dfc575b50508a51630cf35bdd60e41b808252868201889052608091908282602481875afa918215610dcf578c92610dd9575b508d519081528a888201528281602481875afa928315610dcf57918e97969593918b95938e93610d96575b5050610c2c9061138f565b90610c369061138f565b90875197610c4389610567565b6002895236868a0137610c5588611102565b52610c5f87611125565b528c519e8f928352888884015260248301528a6044830152815a91606492fa988915610d8c578a9b9c899a9b999b610d4f575b509189949391610cc1610cfc946002541698610cb38c519586928301611135565b03601f198101855284610583565b89519b8c998a98899763055a68e160e41b8952880152602487015260448601526064850152608484015260c060a484015260c4830190610448565b03925af1928315610d45578193610d14575b50505090565b9091809350813d8311610d3e575b610d2c8183610583565b81010312610445575051388080610d0e565b503d610d22565b51903d90823e3d90fd5b909a5091975092918582813d8111610d85575b610d6c8183610583565b810103126104ed579051988a9792939192919089610c92565b503d610d62565b8a513d8a823e3d90fd5b610c2c9293509081610dbc92903d10610dc8575b610db48183610583565b8101906110c9565b50509050919038610c21565b503d610daa565b8e513d8e823e3d90fd5b610df1919250833d8511610dc857610db48183610583565b505090509038610bf6565b610e059061053d565b610e10578838610bc7565b8880fd5b8c513d8c823e3d90fd5b8a80fd5b9091508881813d8311610e4a575b610e3a8183610583565b810103126104ed57519038610b70565b503d610e30565b8d513d8d823e3d90fd5b9092955081809450010312610e76578b903592388781610b33565b8780fd5b509497509294505086949651638eb22cdd60e01b815284828201528860248201528760448201528681606481875afa968715610f5c578897610f2c575b5050823b156103b5578451630208d92960e11b8152309181019182526001600160a01b03909216602082015260408101939093526060830194909452849184919082908490829060800103925af1908115610f235750610f1657505090565b610f1f9061053d565b5090565b513d84823e3d90fd5b9080929750813d8311610f55575b610f448183610583565b810103126103b55751943880610eb7565b503d610f3a565b86513d8a823e3d90fd5b8a5162461bcd60e51b815280860188905260076024820152666f6e6c79204c5160c81b6044820152606490fd5b8880929a508193503d8311610fbf575b610fad8183610583565b81010312610e10578990519738610b14565b503d610fa3565b8b513d8b823e3d90fd5b9c50868d813d831161100d575b610fe78183610583565b81010312610e7657866110008a9b9c9d9e9a999a6105a5565b9d9c9b9a50989798610ae5565b503d610fdd565b61102c919350823d841161072e5761071f8183610583565b9138610ac3565b61104a9150883d8a1161072e5761071f8183610583565b38610a97565b89513d89823e3d90fd5b50508581813d831161108b575b6110718183610583565b810103126103b55787611086610a72926105a5565b610a65565b503d611067565b92505081813d83116110c2575b6110a98183610583565b810103126103b557856110bc89926105a5565b38610a41565b503d61109f565b91908260809103126104ed57815160058110156104ed57916110ed602082016105a5565b9160606110fc604084016105a5565b92015190565b80511561110f5760200190565b634e487b7160e01b600052603260045260246000fd5b80516001101561110f5760400190565b6020908160408183019282815285518094520193019160005b82811061115c575050505090565b83518552938101939281019260010161114e565b91909392936001600160a01b03809316906040938451630cf35bdd60e41b8082528360048301526080958683602481895afa9283156107355760009361136c575b50875191825260048201528581602481885afa95861561136157600096611336575b50506111e16111e79161138f565b9461138f565b938551976111f489610567565b6002895260209586928836858d013761120c8b611102565b526112168a611125565b526064875180968193638eb22cdd60e01b83528760048401526024830152600060448301525afa92831561132b576000936112fa575b5095839261126e9261127c6112aa989960025416938851958691888301611135565b03601f198101865285610583565b865197889485938493632995d8c960e11b855260048501526024840152606060448401526064830190610448565b03915afa9182156112f057506000916112c4575b50905090565b82813d83116112e9575b6112d88183610583565b8101031261044557505180386112be565b503d6112ce565b513d6000823e3d90fd5b90928482813d8311611324575b6113118183610583565b81010312610445575051916112aa61124c565b503d611307565b85513d6000823e3d90fd5b6111e79296506111e1918161135692903d10610dc857610db48183610583565b5050905095916111d3565b87513d6000823e3d90fd5b611384919350873d8911610dc857610db48183610583565b5050905091386111b1565b6001600160a01b03806002541660408051928380936310c3a8d960e11b8252602094859160049788915afa908115611504576000916114ce575b506003546000199690929160005b8481106114345750505050506000198413156113f35750505090565b5162461bcd60e51b815291820152600f60248201527f6173736574206e6f7420666f756e640000000000000000000000000000000000604482015260649150fd5b855163c661065760e01b815288810182905287816024818689165afa90811561136157600091611499575b50841683851614611491575b600019811461147c576001016113d7565b601188634e487b7160e01b6000525260246000fd5b97508761146b565b908882813d83116114c7575b6114af8183610583565b8101031261044557506114c1906105a5565b3861145f565b503d6114a5565b8481813d83116114fd575b6114e38183610583565b810103126100b657519082821682036104455750386113c9565b503d6114d9565b83513d6000823e3d90fdfea26469706673582212207e75d3f231b5b92532ae37fbec1c27c59e0f530055718ffae259faca3bf9cad964736f6c63430008120033";

type CurveStableToUsdoBidderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurveStableToUsdoBidderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CurveStableToUsdoBidder__factory extends ContractFactory {
  constructor(...args: CurveStableToUsdoBidderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CurveStableToUsdoBidder";
  }

  override deploy(
    curveSwapper_: PromiseOrValue<string>,
    curvePoolAssetCount_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CurveStableToUsdoBidder> {
    return super.deploy(
      curveSwapper_,
      curvePoolAssetCount_,
      overrides || {}
    ) as Promise<CurveStableToUsdoBidder>;
  }
  override getDeployTransaction(
    curveSwapper_: PromiseOrValue<string>,
    curvePoolAssetCount_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      curveSwapper_,
      curvePoolAssetCount_,
      overrides || {}
    );
  }
  override attach(address: string): CurveStableToUsdoBidder {
    return super.attach(address) as CurveStableToUsdoBidder;
  }
  override connect(signer: Signer): CurveStableToUsdoBidder__factory {
    return super.connect(signer) as CurveStableToUsdoBidder__factory;
  }
  static readonly contractName: "CurveStableToUsdoBidder";

  public readonly contractName: "CurveStableToUsdoBidder";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveStableToUsdoBidderInterface {
    return new utils.Interface(_abi) as CurveStableToUsdoBidderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurveStableToUsdoBidder {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CurveStableToUsdoBidder;
  }
}
