/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1155ReceiverMock,
  ERC1155ReceiverMockInterface,
} from "../ERC1155ReceiverMock";

const _abi = [
  {
    inputs: [],
    name: "data",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "from",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fromBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ids",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "returnToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "returnTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "values",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610be7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806373d4a13a1161008c578063d5ce338911610066578063d5ce3389146101ed578063f23a6e611461020d578063f9718fc814610220578063fac333ac1461022857600080fd5b806373d4a13a1461018b578063af640d0f146101a0578063bc197c81146101a957600080fd5b8063570ca735116100bd578063570ca735146101135780635e383d211461015857806367e404ce1461016b57600080fd5b806326fea2a8146100e45780632e4a3657146101005780633fa4f2451461010a575b600080fd5b6100ed60085481565b6040519081526020015b60405180910390f35b61010861023b565b005b6100ed60055481565b6001546101339073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f7565b6100ed6101663660046107f7565b6102ed565b6000546101339073ffffffffffffffffffffffffffffffffffffffff1681565b61019361030e565b6040516100f79190610810565b6100ed60035481565b6101bc6101b736600461093a565b61039c565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016100f7565b6002546101339073ffffffffffffffffffffffffffffffffffffffff1681565b6101bc61021b3660046109f5565b610542565b610108610694565b6100ed6102363660046107f7565b6106f6565b600080546002546003546005546040517ff242432a00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff93841660248201526044810192909252606482015260a0608482015260a4810193909352169063f242432a9060c4015b600060405180830381600087803b1580156102d357600080fd5b505af11580156102e7573d6000803e3d6000fd5b50505050565b600681815481106102fd57600080fd5b600091825260209091200154905081565b6007805461031b90610a6d565b80601f016020809104026020016040519081016040528092919081815260200182805461034790610a6d565b80156103945780601f1061036957610100808354040283529160200191610394565b820191906000526020600020905b81548152906001019060200180831161037757829003601f168201915b505050505081565b60008054337fffffffffffffffffffffffff000000000000000000000000000000000000000091821617825560018054821673ffffffffffffffffffffffffffffffffffffffff8c81169190911790915560028054909216908a1617905561040660048888610706565b5061041360068686610706565b5061042060078484610751565b506004541561051457600080546002546004805473ffffffffffffffffffffffffffffffffffffffff9384169462fdd58e94909316929061046357610463610ac1565b6000918252602090912001546040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff9092166004830152602482015260440160206040518083038186803b1580156104d857600080fd5b505afa1580156104ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105109190610af0565b6008555b507fbc197c819b3e337a6f9652dd10becd7eef83032af3b9d958d3d42f669414662198975050505050505050565b60008054337fffffffffffffffffffffffff000000000000000000000000000000000000000091821617825560018054821673ffffffffffffffffffffffffffffffffffffffff8a81169190911790915560028054909216908816179055600385905560058490556105b660078484610751565b506000546002546003546040517efdd58e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9283166004820152602481019190915291169062fdd58e9060440160206040518083038186803b15801561062d57600080fd5b505afa158015610641573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106659190610af0565b600855507ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf979695505050505050565b6000546002546040517f2eb2c2d600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92831692632eb2c2d6926102b9923092909116906004906006908201610b49565b600481815481106102fd57600080fd5b828054828255906000526020600020908101928215610741579160200282015b82811115610741578235825591602001919060010190610726565b5061074d9291506107e2565b5090565b82805461075d90610a6d565b90600052602060002090601f01602090048101928261077f5760008555610741565b82601f106107b6578280017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00823516178555610741565b828001600101855582156107415791820182811115610741578235825591602001919060010190610726565b5b8082111561074d57600081556001016107e3565b60006020828403121561080957600080fd5b5035919050565b600060208083528351808285015260005b8181101561083d57858101830151858201604001528201610821565b8181111561084f576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146108a757600080fd5b919050565b60008083601f8401126108be57600080fd5b50813567ffffffffffffffff8111156108d657600080fd5b6020830191508360208260051b85010111156108f157600080fd5b9250929050565b60008083601f84011261090a57600080fd5b50813567ffffffffffffffff81111561092257600080fd5b6020830191508360208285010111156108f157600080fd5b60008060008060008060008060a0898b03121561095657600080fd5b61095f89610883565b975061096d60208a01610883565b9650604089013567ffffffffffffffff8082111561098a57600080fd5b6109968c838d016108ac565b909850965060608b01359150808211156109af57600080fd5b6109bb8c838d016108ac565b909650945060808b01359150808211156109d457600080fd5b506109e18b828c016108f8565b999c989b5096995094979396929594505050565b60008060008060008060a08789031215610a0e57600080fd5b610a1787610883565b9550610a2560208801610883565b94506040870135935060608701359250608087013567ffffffffffffffff811115610a4f57600080fd5b610a5b89828a016108f8565b979a9699509497509295939492505050565b600181811c90821680610a8157607f821691505b60208210811415610abb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215610b0257600080fd5b5051919050565b6000815480845260208085019450836000528060002060005b83811015610b3e57815487529582019560019182019101610b22565b509495945050505050565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525060a06040830152610b8260a0830185610b09565b8281036060840152610b948185610b09565b83810360809094019390935250506000815260200194935050505056fea2646970667358221220583845f97d9afbbe6b7187f858e09851905a87d0cd34e92eee846c0f9e150fa764736f6c63430008090033";

type ERC1155ReceiverMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155ReceiverMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155ReceiverMock__factory extends ContractFactory {
  constructor(...args: ERC1155ReceiverMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC1155ReceiverMock";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155ReceiverMock> {
    return super.deploy(overrides || {}) as Promise<ERC1155ReceiverMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155ReceiverMock {
    return super.attach(address) as ERC1155ReceiverMock;
  }
  connect(signer: Signer): ERC1155ReceiverMock__factory {
    return super.connect(signer) as ERC1155ReceiverMock__factory;
  }
  static readonly contractName: "ERC1155ReceiverMock";
  public readonly contractName: "ERC1155ReceiverMock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155ReceiverMockInterface {
    return new utils.Interface(_abi) as ERC1155ReceiverMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155ReceiverMock {
    return new Contract(address, _abi, signerOrProvider) as ERC1155ReceiverMock;
  }
}
