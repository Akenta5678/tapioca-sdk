/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AssetRegister, AssetRegisterInterface } from "../AssetRegister";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAsset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum TokenType",
        name: "tokenType",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IStrategy",
        name: "strategy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
    ],
    name: "AssetRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "assetCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "assets",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "tokenType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "contract IStrategy",
        name: "strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "contract IStrategy",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ids",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isApprovedForAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TokenType",
        name: "tokenType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "contract IStrategy",
        name: "strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "registerAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060408051608081018252600480825260006020830181905292820183905260608201839052600580546001808201835591909452825160039094027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0018054939490939092849260ff1990921691908490811115610091576100916100e7565b021790555060208201518154610100600160a81b0319166101006001600160a01b039283160217825560408301516001830180546001600160a01b031916919092161790556060909101516002909101556100fd565b634e487b7160e01b600052602160045260246000fd5b6119098061010c6000396000f3fe608060405234801561001057600080fd5b50600436106100f45760003560e01c8063a75fcb1e11610097578063cf35bdd011610066578063cf35bdd014610284578063e985e9c5146102a7578063eafe7a74146102d2578063f242432a146102da57600080fd5b8063a75fcb1e1461020a578063b061db941461023e578063b8489fb514610251578063bd85b0391461026457600080fd5b80632d4e1d52116100d35780632d4e1d52146101885780632eb2c2d6146101c25780634e1273f4146101d7578063a22cb465146101f757600080fd5b8062fdd58e146100f957806301ffc9a7146101375780630e89341c1461015a575b600080fd5b610124610107366004611176565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b61014a6101453660046111b8565b6102ed565b604051901515815260200161012e565b61017b6101683660046111dc565b5060408051602081019091526000815290565b60405161012e91906111f5565b610124610196366004611257565b600460209081526000948552604080862082529385528385208152918452828420909152825290205481565b6101d56101d0366004611336565b61033f565b005b6101ea6101e53660046113f5565b61049b565b60405161012e9190611461565b6101d56102053660046114ba565b6105e6565b61014a6102183660046114ef565b600360209081526000938452604080852082529284528284209052825290205460ff1681565b61012461024c366004611257565b610650565b6101d561025f366004611530565b610700565b6101246102723660046111dc565b60026020526000908152604090205481565b6102976102923660046111dc565b6107ca565b60405161012e9493929190611584565b61014a6102b53660046115c9565b600060208181529281526040808220909352908152205460ff1681565b600554610124565b6101d56102e8366004611602565b610814565b60006001600160e01b031982166301ffc9a760e01b148061031e5750636cdb3d1360e11b6001600160e01b03198316145b8061033957506303a24d0760e21b6001600160e01b03198316145b92915050565b84831461038e5760405162461bcd60e51b815260206004820152601860248201527708aa48662626a6a744098cadccee8d040dad2e6dac2e8c6d60431b60448201526064015b60405180910390fd5b610399886000610919565b6103a78888888888886109a5565b6001600160a01b0387163b156104915760405163bc197c8160e01b808252906001600160a01b0389169063bc197c81906103f39033908d908c908c908c908c908c908c906004016116dd565b602060405180830381600087803b15801561040d57600080fd5b505af1158015610421573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104459190611741565b6001600160e01b031916146104915760405162461bcd60e51b815260206004820152601260248201527157726f6e672072657475726e2076616c756560701b6044820152606401610385565b5050505050505050565b6060838281146104e85760405162461bcd60e51b815260206004820152601860248201527708aa48662626a6a744098cadccee8d040dad2e6dac2e8c6d60431b6044820152606401610385565b8067ffffffffffffffff8111156105015761050161175e565b60405190808252806020026020018201604052801561052a578160200160208202803683370190505b50915060005b818110156105dc576001600088888481811061054e5761054e611774565b9050602002016020810190610563919061178a565b6001600160a01b03166001600160a01b03168152602001908152602001600020600086868481811061059757610597611774565b905060200201358152602001908152602001600020548382815181106105bf576105bf611774565b6020908102919091010152806105d4816117bd565b915050610530565b5050949350505050565b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600060018560048111156106665761066661156e565b1480610683575060028560048111156106815761068161156e565b145b8061069f5750600385600481111561069d5761069d61156e565b145b6106eb5760405162461bcd60e51b815260206004820152601f60248201527f41737365744d616e616765723a2063616e6e6f7420616464204e6174697665006044820152606401610385565b6106f785858585610b1f565b95945050505050565b60055482106107515760405162461bcd60e51b815260206004820152601d60248201527f41737365744d616e616765723a206173736574206e6f742076616c69640000006044820152606401610385565b3360008181526003602090815260408083206001600160a01b038816808552908352818420878552835292819020805460ff19168615159081179091558151878152928301529192917f6aceb1b079beeabdd8c2f30cd221ca27ec52e9d0aef6bb229cc175cf15dd778b910160405180910390a3505050565b600581815481106107da57600080fd5b600091825260209091206003909102018054600182015460029092015460ff821693506101009091046001600160a01b0390811692169084565b61081f866000610919565b61082b86868686611058565b6001600160a01b0385163b156109115760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e61906108739033908b908a908a908a908a906004016117d8565b602060405180830381600087803b15801561088d57600080fd5b505af11580156108a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c59190611741565b6001600160e01b031916146109115760405162461bcd60e51b815260206004820152601260248201527157726f6e672072657475726e2076616c756560701b6044820152606401610385565b505050505050565b6001600160a01b03821633148061092d5750805b8061095e57506001600160a01b03821660009081526020818152604080832033845290915290205460ff1615156001145b6109a15760405162461bcd60e51b8152602060048201526014602482015273151c985b9cd9995c881b9bdd08185b1b1bddd95960621b6044820152606401610385565b5050565b6001600160a01b0385166109ea5760405162461bcd60e51b815260206004820152600c60248201526b4e6f2030206164647265737360a01b6044820152606401610385565b8260005b81811015610aba576000868683818110610a0a57610a0a611774565b9050602002013590506000858584818110610a2757610a27611774565b6001600160a01b038d16600090815260016020908152604080832088845282528220805493909102949094013594508493925090610a6690849061181f565b90915550506001600160a01b038916600090815260016020908152604080832085845290915281208054839290610a9e908490611836565b9250508190555050508080610ab2906117bd565b9150506109ee565b50856001600160a01b0316876001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb88888888604051610b0e949392919061184e565b60405180910390a450505050505050565b600060046000866004811115610b3757610b3761156e565b6004811115610b4857610b4861156e565b8152602080820192909252604090810160009081206001600160a01b0380891683529084528282209087168252835281812085825290925290205490508061105057811580610ba957506001856004811115610ba657610ba661156e565b14155b610bf55760405162461bcd60e51b815260206004820152601e60248201527f5969656c64426f783a204e6f20746f6b656e496420666f7220455243323000006044820152606401610385565b6000856004811115610c0957610c0961156e565b1480610dad5750826001600160a01b03166330fa738c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c4957600080fd5b505afa158015610c5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c819190611880565b6004811115610c9257610c9261156e565b856004811115610ca457610ca461156e565b148015610d325750826001600160a01b031663f6b4dfb46040518163ffffffff1660e01b815260040160206040518083038186803b158015610ce557600080fd5b505afa158015610cf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1d919061189d565b6001600160a01b0316846001600160a01b0316145b8015610dad5750826001600160a01b03166317d70f7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7257600080fd5b505afa158015610d86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610daa91906118ba565b82145b610df95760405162461bcd60e51b815260206004820152601b60248201527f5969656c64426f783a205374726174656779206d69736d6174636800000000006044820152606401610385565b6000856004811115610e0d57610e0d61156e565b148015610e2157506001600160a01b038416155b80610e3557506001600160a01b0384163b15155b610e795760405162461bcd60e51b81526020600482015260156024820152742cb4b2b6322137bc1d102737ba1030903a37b5b2b760591b6044820152606401610385565b600580549050905060056040518060800160405280876004811115610ea057610ea061156e565b81526001600160a01b038088166020808401919091529087166040830152606090910185905282546001818101855560009485529190932082516003909402018054929390929091839160ff191690836004811115610f0157610f0161156e565b021790555060208201518154610100600160a81b0319166101006001600160a01b039283160217825560408301516001830180546001600160a01b0319169190921617905560609091015160029091015580600460008782811115610f6857610f6861156e565b6004811115610f7957610f7961156e565b8152602080820192909252604090810160009081206001600160a01b0389811683529084528282209088168252835281812086825283528181209390935580518281529182019290925282917f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b910160405180910390a281846001600160a01b031686600481111561100d5761100d61156e565b604080516001600160a01b0388168152602081018690527f30605d4cd099421ed12ca1ba642a1ea2659f679b5cdd0ccd032586640eeaff43910160405180910390a45b949350505050565b6001600160a01b03831661109d5760405162461bcd60e51b815260206004820152600c60248201526b4e6f2030206164647265737360a01b6044820152606401610385565b6001600160a01b0384166000908152600160209081526040808320858452909152812080548392906110d090849061181f565b90915550506001600160a01b038316600090815260016020908152604080832085845290915281208054839290611108908490611836565b909155505060408051838152602081018390526001600160a01b03808616929087169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a450505050565b6001600160a01b038116811461117357600080fd5b50565b6000806040838503121561118957600080fd5b82356111948161115e565b946020939093013593505050565b6001600160e01b03198116811461117357600080fd5b6000602082840312156111ca57600080fd5b81356111d5816111a2565b9392505050565b6000602082840312156111ee57600080fd5b5035919050565b600060208083528351808285015260005b8181101561122257858101830151858201604001528201611206565b81811115611234576000604083870101525b50601f01601f1916929092016040019392505050565b6005811061117357600080fd5b6000806000806080858703121561126d57600080fd5b84356112788161124a565b935060208501356112888161115e565b925060408501356112988161115e565b9396929550929360600135925050565b60008083601f8401126112ba57600080fd5b50813567ffffffffffffffff8111156112d257600080fd5b6020830191508360208260051b85010111156112ed57600080fd5b9250929050565b60008083601f84011261130657600080fd5b50813567ffffffffffffffff81111561131e57600080fd5b6020830191508360208285010111156112ed57600080fd5b60008060008060008060008060a0898b03121561135257600080fd5b883561135d8161115e565b9750602089013561136d8161115e565b9650604089013567ffffffffffffffff8082111561138a57600080fd5b6113968c838d016112a8565b909850965060608b01359150808211156113af57600080fd5b6113bb8c838d016112a8565b909650945060808b01359150808211156113d457600080fd5b506113e18b828c016112f4565b999c989b5096995094979396929594505050565b6000806000806040858703121561140b57600080fd5b843567ffffffffffffffff8082111561142357600080fd5b61142f888389016112a8565b9096509450602087013591508082111561144857600080fd5b50611455878288016112a8565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b818110156114995783518352928401929184019160010161147d565b50909695505050505050565b803580151581146114b557600080fd5b919050565b600080604083850312156114cd57600080fd5b82356114d88161115e565b91506114e6602084016114a5565b90509250929050565b60008060006060848603121561150457600080fd5b833561150f8161115e565b9250602084013561151f8161115e565b929592945050506040919091013590565b60008060006060848603121561154557600080fd5b83356115508161115e565b925060208401359150611565604085016114a5565b90509250925092565b634e487b7160e01b600052602160045260246000fd5b60808101600586106115a657634e487b7160e01b600052602160045260246000fd5b9481526001600160a01b0393841660208201529190921660408201526060015290565b600080604083850312156115dc57600080fd5b82356115e78161115e565b915060208301356115f78161115e565b809150509250929050565b60008060008060008060a0878903121561161b57600080fd5b86356116268161115e565b955060208701356116368161115e565b94506040870135935060608701359250608087013567ffffffffffffffff81111561166057600080fd5b61166c89828a016112f4565b979a9699509497509295939492505050565b81835260006001600160fb1b0383111561169757600080fd5b8260051b8083602087013760009401602001938452509192915050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0389811682528816602082015260a06040820181905260009061170a908301888a61167e565b828103606084015261171d81878961167e565b905082810360808401526117328185876116b4565b9b9a5050505050505050505050565b60006020828403121561175357600080fd5b81516111d5816111a2565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006020828403121561179c57600080fd5b81356111d58161115e565b634e487b7160e01b600052601160045260246000fd5b60006000198214156117d1576117d16117a7565b5060010190565b6001600160a01b03878116825286166020820152604081018590526060810184905260a06080820181905260009061181390830184866116b4565b98975050505050505050565b600082821015611831576118316117a7565b500390565b60008219821115611849576118496117a7565b500190565b60408152600061186260408301868861167e565b828103602084015261187581858761167e565b979650505050505050565b60006020828403121561189257600080fd5b81516111d58161124a565b6000602082840312156118af57600080fd5b81516111d58161115e565b6000602082840312156118cc57600080fd5b505191905056fea26469706673582212202a7254a3a747509b7607a92b7c26342610db80c3c198617637277118b92ec87864736f6c63430008090033";

type AssetRegisterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetRegisterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AssetRegister__factory extends ContractFactory {
  constructor(...args: AssetRegisterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AssetRegister";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AssetRegister> {
    return super.deploy(overrides || {}) as Promise<AssetRegister>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AssetRegister {
    return super.attach(address) as AssetRegister;
  }
  connect(signer: Signer): AssetRegister__factory {
    return super.connect(signer) as AssetRegister__factory;
  }
  static readonly contractName: "AssetRegister";
  public readonly contractName: "AssetRegister";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetRegisterInterface {
    return new utils.Interface(_abi) as AssetRegisterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssetRegister {
    return new Contract(address, _abi, signerOrProvider) as AssetRegister;
  }
}
