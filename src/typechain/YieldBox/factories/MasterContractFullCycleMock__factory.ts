/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MasterContractFullCycleMock,
  MasterContractFullCycleMockInterface,
} from "../MasterContractFullCycleMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract YieldBox",
        name: "_yieldBox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc1155",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc1155Strategy",
    outputs: [
      {
        internalType: "contract IStrategy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ethStrategy",
    outputs: [
      {
        internalType: "contract IStrategy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "run",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenStrategy",
    outputs: [
      {
        internalType: "contract IStrategy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract YieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161111a38038061111a83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161103b6100df600039600081816101d401528181610310015281816103f8015281816104e2015281816105d8015281816106c1015281816107860152818161086c0152818161095301528181610a4b01528181610b3401528181610c0e0152610ca4015261103b6000f3fe6080604052600436106100965760003560e01c8063c040622611610069578063d5f394881161004e578063d5f3948814610195578063de406577146101c2578063fc0c546a146101f657600080fd5b8063c040622614610160578063d56022d71461016857600080fd5b80634ddf47d41461009b57806359a81aef146100b0578063a59a9db814610106578063ab49ba2b14610133575b600080fd5b6100ae6100a9366004610d94565b610223565b005b3480156100bc57600080fd5b506005546100dd9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b34801561011257600080fd5b506003546100dd9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561013f57600080fd5b506004546100dd9073ffffffffffffffffffffffffffffffffffffffff1681565b6100ae6102c8565b34801561017457600080fd5b506002546100dd9073ffffffffffffffffffffffffffffffffffffffff1681565b3480156101a157600080fd5b506000546100dd9073ffffffffffffffffffffffffffffffffffffffff1681565b3480156101ce57600080fd5b506100dd7f000000000000000000000000000000000000000000000000000000000000000081565b34801561020257600080fd5b506001546100dd9073ffffffffffffffffffffffffffffffffffffffff1681565b61022f81830183610e2b565b600580547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff938416179091556004805482169383169390931790925560038054831693821693909317909255600280548216938316939093179092556001805483169382169390931790925560008054909116929091169190911790555050565b60018054600354600080546040517f6cd5703100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811696636cd570319661035d96919590831694918316939092919091169081906103e8908490600401610ee8565b6040805180830381600087803b15801561037657600080fd5b505af115801561038a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ae9190610f47565b505060018054600354600080546040517f6cd5703100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811696636cd57031966104489691959083169491831693909291909116908190839064174876e80090600401610ee8565b6040805180830381600087803b15801561046157600080fd5b505af1158015610475573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104999190610f47565b5050600180546003546040517f2d4e1d5200000000000000000000000000000000000000000000000000000000815260009373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811694632d4e1d529461051e949183169216908790600401610f6b565b60206040518083038186803b15801561053657600080fd5b505afa15801561054a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056e9190610fad565b600080546040517f8d2e63b80000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff9182166024820181905260448201526103e8606482015260848101929092529192507f000000000000000000000000000000000000000000000000000000000000000090911690638d2e63b89060a4016040805180830381600087803b15801561061d57600080fd5b505af1158015610631573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106559190610f47565b5050600080546040517f8d2e63b80000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff918216602482018190526044820152606481019290925264174876e80060848301527f00000000000000000000000000000000000000000000000000000000000000001690638d2e63b89060a4016040805180830381600087803b15801561070457600080fd5b505af1158015610718573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073c9190610f47565b505060025460048054600080546040517f6cd5703100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811696636cd57031966107d1966003969284169590841694602a94919091169283926103e89201610ee8565b6040805180830381600087803b1580156107ea57600080fd5b505af11580156107fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108229190610f47565b505060025460048054600080546040517f6cd5703100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811696636cd57031966108bc966003969284169590841694602a9491909116928392909164174876e8009101610ee8565b6040805180830381600087803b1580156108d557600080fd5b505af11580156108e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090d9190610f47565b5050600254600480546040517f2d4e1d5200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811694632d4e1d529461099194600394928416931691602a9101610f6b565b60206040518083038186803b1580156109a957600080fd5b505afa1580156109bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e19190610fad565b600080546040517f8d2e63b80000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff9182166024820181905260448201526103e8606482015260848101929092529192507f000000000000000000000000000000000000000000000000000000000000000090911690638d2e63b89060a4016040805180830381600087803b158015610a9057600080fd5b505af1158015610aa4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac89190610f47565b5050600080546040517f8d2e63b80000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff918216602482018190526044820152606481019290925264174876e80060848301527f00000000000000000000000000000000000000000000000000000000000000001690638d2e63b89060a4016040805180830381600087803b158015610b7757600080fd5b505af1158015610b8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610baf9190610f47565b50506005546000546040517fa3823ac000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff928316600482015290821660248201526103e8604482018190527f00000000000000000000000000000000000000000000000000000000000000009092169163a3823ac09160640160408051808303818588803b158015610c5257600080fd5b505af1158015610c66573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610c8b9190610f47565b505073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016638d2e63b8610cd4836001610fc6565b6000805460405160e085901b7fffffffff00000000000000000000000000000000000000000000000000000000168152600481019390935273ffffffffffffffffffffffffffffffffffffffff166024830181905260448301526103e86064830152608482015260a4016040805180830381600087803b158015610d5757600080fd5b505af1158015610d6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8f9190610f47565b505050565b60008060208385031215610da757600080fd5b823567ffffffffffffffff80821115610dbf57600080fd5b818501915085601f830112610dd357600080fd5b813581811115610de257600080fd5b866020828501011115610df457600080fd5b60209290920196919550909350505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610e2857600080fd5b50565b60008060008060008060c08789031215610e4457600080fd5b8635610e4f81610e06565b95506020870135610e5f81610e06565b94506040870135610e6f81610e06565b93506060870135610e7f81610e06565b92506080870135610e8f81610e06565b915060a0870135610e9f81610e06565b809150509295509295509295565b60058110610ee4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6101008101610ef7828b610ead565b73ffffffffffffffffffffffffffffffffffffffff9889166020830152968816604082015260608101959095529286166080850152941660a083015260c082019390935260e00191909152919050565b60008060408385031215610f5a57600080fd5b505080516020909101519092909150565b60808101610f798287610ead565b73ffffffffffffffffffffffffffffffffffffffff9485166020830152929093166040840152606090920191909152919050565b600060208284031215610fbf57600080fd5b5051919050565b60008219821115611000577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50019056fea2646970667358221220923bb1ef736617988eeaa8aac38148ab11dc90477fe989d7ee5f9088952eefd764736f6c63430008090033";

type MasterContractFullCycleMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MasterContractFullCycleMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MasterContractFullCycleMock__factory extends ContractFactory {
  constructor(...args: MasterContractFullCycleMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MasterContractFullCycleMock";
  }

  deploy(
    _yieldBox: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MasterContractFullCycleMock> {
    return super.deploy(
      _yieldBox,
      overrides || {}
    ) as Promise<MasterContractFullCycleMock>;
  }
  getDeployTransaction(
    _yieldBox: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_yieldBox, overrides || {});
  }
  attach(address: string): MasterContractFullCycleMock {
    return super.attach(address) as MasterContractFullCycleMock;
  }
  connect(signer: Signer): MasterContractFullCycleMock__factory {
    return super.connect(signer) as MasterContractFullCycleMock__factory;
  }
  static readonly contractName: "MasterContractFullCycleMock";
  public readonly contractName: "MasterContractFullCycleMock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterContractFullCycleMockInterface {
    return new utils.Interface(_abi) as MasterContractFullCycleMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterContractFullCycleMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MasterContractFullCycleMock;
  }
}
