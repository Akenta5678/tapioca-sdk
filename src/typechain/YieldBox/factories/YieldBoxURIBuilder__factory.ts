/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  YieldBoxURIBuilder,
  YieldBoxURIBuilderInterface,
} from "../YieldBoxURIBuilder";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "contract IStrategy",
            name: "strategy",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct Asset",
        name: "asset",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "nativeDecimals",
        type: "uint8",
      },
    ],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "contract IStrategy",
            name: "strategy",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct Asset",
        name: "asset",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "nativeName",
        type: "string",
      },
    ],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "contract IStrategy",
            name: "strategy",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct Asset",
        name: "asset",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "nativeSymbol",
        type: "string",
      },
    ],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "contract IStrategy",
            name: "strategy",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct Asset",
        name: "asset",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
        ],
        internalType: "struct NativeToken",
        name: "nativeToken",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612219806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80635c6d8435146100515780636d7cd0371461007a57806384b1017d1461009f578063aa1163b9146100b2575b600080fd5b61006461005f366004611722565b6100c5565b60405161007191906117bd565b60405180910390f35b61008d61008836600461181d565b6106a2565b60405160ff9091168152602001610071565b6100646100ad366004611855565b61073c565b6100646100c0366004611855565b610a9f565b60606100f26040518060800160405280606081526020016060815260200160608152602001600081525090565b60036101016020880188611908565b6004811115610112576101126118d9565b141561021357604080518082018252600781527f455243313135350000000000000000000000000000000000000000000000000060208083019190915290835261018391601491610167918a01908a01611929565b73ffffffffffffffffffffffffffffffffffffffff1690610cad565b6101908760600135610ef4565b6040516020016101a1929190611962565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291815260208381019290925280518082018252600781527f4552433131353500000000000000000000000000000000000000000000000000928101929092528201526103e2565b60016102226020880188611908565b6004811115610233576102336118d9565b141561030357600061024b6040880160208901611929565b6040805160c081019091526005608082019081527f455243323000000000000000000000000000000000000000000000000000000060a08301528152909150602081016102ad73ffffffffffffffffffffffffffffffffffffffff8416610fbc565b81526020016102d18373ffffffffffffffffffffffffffffffffffffffff166110d4565b81526020016102f58373ffffffffffffffffffffffffffffffffffffffff16611156565b60ff168152509150506103e2565b60408051808201909152600681527f4e617469766500000000000000000000000000000000000000000000000000006020820152815261034385806119e3565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050505060208083019190915261038c908601866119e3565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050506040808301919091526103d99060608701908701611a4f565b60ff1660608201525b6000806103f26020890189611908565b6004811115610403576104036118d9565b14156104c55761041285610ef4565b73ffffffffffffffffffffffffffffffffffffffff851615610469576040518060400160405280600581526020017f66616c73650000000000000000000000000000000000000000000000000000008152506104a0565b6040518060400160405280600481526020017f74727565000000000000000000000000000000000000000000000000000000008152505b6040516020016104b1929190611a6c565b6040516020818303038152906040526104fa565b6104da601461016760408a0160208b01611929565b6040516020016104ea9190611aed565b6040516020818303038152906040525b6020830151604084015191925061067791600361051a60208c018c611908565b600481111561052b5761052b6118d9565b1461056b576040518060400160405280600c81526020017f2c22646563696d616c73223a000000000000000000000000000000000000000081525061057c565b604051806020016040528060008152505b600361058b60208d018d611908565b600481111561059c5761059c6118d9565b146105b3576105ae8660600151610ef4565b6105c4565b604051806020016040528060008152505b6105dc60148d60400160208101906101679190611929565b87518760038f60000160208101906105f49190611908565b6004811115610605576106056118d9565b1461061f576040518060200160405280600081525061064c565b61062c8f60600135610ef4565b60405160200161063c9190611b59565b6040516020818303038152906040525b604051602001610663989796959493929190611b9e565b604051602081830303815290604052611249565b6040516020016106879190611d5a565b60405160208183030381529060405292505050949350505050565b600060036106b36020850185611908565b60048111156106c4576106c46118d9565b14156106d257506000610736565b60016106e16020850185611908565b60048111156106f2576106f26118d9565b141561073357600061070a6040850160208601611929565b905061072b8173ffffffffffffffffffffffffffffffffffffffff16611156565b915050610736565b50805b92915050565b6060600061074f85830160408701611929565b73ffffffffffffffffffffffffffffffffffffffff1614156107aa5782828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929350610a9892505050565b60016107b96020860186611908565b60048111156107ca576107ca6118d9565b14156108da5760006107e26040860160208701611929565b90506108038173ffffffffffffffffffffffffffffffffffffffff166110d4565b6108136060870160408801611929565b73ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b15801561085857600080fd5b505afa15801561086c573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108b29190810190611dce565b6040516020016108c3929190611e99565b604051602081830303815290604052915050610a98565b60036108e96020860186611908565b60048111156108fa576108fa6118d9565b14156109d5576109106060850160408601611929565b73ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b15801561095557600080fd5b505afa158015610969573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109af9190810190611dce565b6040516020016109bf9190611f1b565b6040516020818303038152906040529050610a98565b82826109e76060870160408801611929565b73ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015610a2c57600080fd5b505afa158015610a40573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a869190810190611dce565b6040516020016109bf93929190611fad565b9392505050565b60606000610ab285830160408701611929565b73ffffffffffffffffffffffffffffffffffffffff161415610b0d5782828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929350610a9892505050565b6001610b1c6020860186611908565b6004811115610b2d57610b2d6118d9565b1415610b66576000610b456040860160208701611929565b90506108038173ffffffffffffffffffffffffffffffffffffffff16610fbc565b6003610b756020860186611908565b6004811115610b8657610b866118d9565b14156109d557610ba160146101676040870160208801611929565b610bae8560600135610ef4565b604051602001610bbf929190611962565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152610bfd9060608701908701611929565b73ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015610c4257600080fd5b505afa158015610c56573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610c9c9190810190611dce565b6040516020016109bf929190611e99565b60606000610cbc836002612056565b610cc7906002612093565b67ffffffffffffffff811115610cdf57610cdf611d9f565b6040519080825280601f01601f191660200182016040528015610d09576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610d4057610d406120ab565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610da357610da36120ab565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000610ddf846002612056565b610dea906001612093565b90505b6001811115610e87577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110610e2b57610e2b6120ab565b1a60f81b828281518110610e4157610e416120ab565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c93610e80816120da565b9050610ded565b508315610a98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b60606000610f0183611422565b600101905060008167ffffffffffffffff811115610f2157610f21611d9f565b6040519080825280601f01601f191660200182016040528015610f4b576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610faf57610fb4565b610f55565b509392505050565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f06fdde03000000000000000000000000000000000000000000000000000000001790529051606091600091829173ffffffffffffffffffffffffffffffffffffffff86169161103e919061210f565b600060405180830381855afa9150503d8060008114611079576040519150601f19603f3d011682016040523d82523d6000602084013e61107e565b606091505b5091509150816110c3576040518060400160405280600381526020017f3f3f3f00000000000000000000000000000000000000000000000000000000008152506110cc565b6110cc81611504565b949350505050565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f95d89b41000000000000000000000000000000000000000000000000000000001790529051606091600091829173ffffffffffffffffffffffffffffffffffffffff86169161103e919061210f565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f313ce5670000000000000000000000000000000000000000000000000000000017905290516000918291829173ffffffffffffffffffffffffffffffffffffffff8616916111d7919061210f565b600060405180830381855afa9150503d8060008114611212576040519150601f19603f3d011682016040523d82523d6000602084013e611217565b606091505b509150915081801561122a575080516020145b6112355760126110cc565b808060200190518101906110cc919061212b565b606081516000141561126957505060408051602081019091526000815290565b60006040518060600160405280604081526020016121a460409139905060006003845160026112989190612093565b6112a29190612148565b6112ad906004612056565b905060006112bc826020612093565b67ffffffffffffffff8111156112d4576112d4611d9f565b6040519080825280601f01601f1916602001820160405280156112fe576020820181803683370190505b509050818152600183018586518101602084015b8183101561136a576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825350600101611312565b60038951066001811461138457600281146113ce57611414565b7f3d3d0000000000000000000000000000000000000000000000000000000000007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe830152611414565b7f3d000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8301525b509398975050505050505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061146b577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611497576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106114b557662386f26fc10000830492506010015b6305f5e10083106114cd576305f5e100830492506008015b61271083106114e157612710830492506004015b606483106114f3576064830492506002015b600a83106107365760010192915050565b6060604082511061152357818060200190518101906107369190611dce565b8151602014156116ac5760005b60208160ff1610801561157d5750828160ff1681518110611553576115536120ab565b01602001517fff000000000000000000000000000000000000000000000000000000000000001615155b15611594578061158c81612183565b915050611530565b60008160ff1667ffffffffffffffff8111156115b2576115b2611d9f565b6040519080825280601f01601f1916602001820160405280156115dc576020820181803683370190505b509050600091505b60208260ff161080156116315750838260ff1681518110611607576116076120ab565b01602001517fff000000000000000000000000000000000000000000000000000000000000001615155b15610a9857838260ff168151811061164b5761164b6120ab565b602001015160f81c60f81b818360ff168151811061166b5761166b6120ab565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350816116a481612183565b9250506115e4565b505060408051808201909152600381527f3f3f3f0000000000000000000000000000000000000000000000000000000000602082015290565b6000608082840312156116f757600080fd5b50919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461171f57600080fd5b50565b60008060008060e0858703121561173857600080fd5b61174286866116e5565b9350608085013567ffffffffffffffff81111561175e57600080fd5b61176a878288016116e5565b93505060a0850135915060c0850135611782816116fd565b939692955090935050565b60005b838110156117a8578181015183820152602001611790565b838111156117b7576000848401525b50505050565b60208152600082518060208401526117dc81604085016020870161178d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60ff8116811461171f57600080fd5b60008060a0838503121561183057600080fd5b61183a84846116e5565b9150608083013561184a8161180e565b809150509250929050565b600080600060a0848603121561186a57600080fd5b61187485856116e5565b9250608084013567ffffffffffffffff8082111561189157600080fd5b818601915086601f8301126118a557600080fd5b8135818111156118b457600080fd5b8760208285010111156118c657600080fd5b6020830194508093505050509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006020828403121561191a57600080fd5b813560058110610a9857600080fd5b60006020828403121561193b57600080fd5b8135610a98816116fd565b6000815161195881856020860161178d565b9290920192915050565b7f455243313135353a00000000000000000000000000000000000000000000000081526000835161199a81600885016020880161178d565b7f2f0000000000000000000000000000000000000000000000000000000000000060089184019182015283516119d781600984016020880161178d565b01600901949350505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611a1857600080fd5b83018035915067ffffffffffffffff821115611a3357600080fd5b602001915036819003821315611a4857600080fd5b9250929050565b600060208284031215611a6157600080fd5b8135610a988161180e565b7f2c22746f74616c537570706c79223a0000000000000000000000000000000000815260008351611aa481600f85016020880161178d565b7f2c226669786564537570706c79223a0000000000000000000000000000000000600f918401918201528351611ae181601e84016020880161178d565b01601e01949350505050565b7f2c22746f6b656e41646472657373223a22000000000000000000000000000000815260008251611b2581601185016020870161178d565b7f22000000000000000000000000000000000000000000000000000000000000006011939091019283015250601201919050565b7f2c22746f6b656e4964223a000000000000000000000000000000000000000000815260008251611b9181600b85016020870161178d565b91909101600b0192915050565b7f7b226e616d65223a220000000000000000000000000000000000000000000000815260008951611bd6816009850160208e0161178d565b7f222c2273796d626f6c223a2200000000000000000000000000000000000000006009918401918201528951611c13816015840160208e0161178d565b7f2200000000000000000000000000000000000000000000000000000000000000601592909101918201528851611c51816016840160208d0161178d565b8851910190611c67816016840160208c0161178d565b7f2c2270726f70657274696573223a7b227374726174656779223a220000000000601692909101918201528651611ca5816031840160208b0161178d565b611d4a611d21611d1b611d15611cec611ce66031878901017f222c22746f6b656e54797065223a2200000000000000000000000000000000008152600f0190565b8c611946565b7f2200000000000000000000000000000000000000000000000000000000000000815260010190565b89611946565b87611946565b7f7d7d000000000000000000000000000000000000000000000000000000000000815260020190565b9c9b505050505050505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251611d9281601d85016020870161178d565b91909101601d0192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060208284031215611de057600080fd5b815167ffffffffffffffff80821115611df857600080fd5b818401915084601f830112611e0c57600080fd5b815181811115611e1e57611e1e611d9f565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715611e6457611e64611d9f565b81604052828152876020848701011115611e7d57600080fd5b611e8e83602083016020880161178d565b979650505050505050565b60008351611eab81846020880161178d565b7f20280000000000000000000000000000000000000000000000000000000000009083019081528351611ee581600284016020880161178d565b7f290000000000000000000000000000000000000000000000000000000000000060029290910191820152600301949350505050565b7f455243313135350000000000000000000000000000000000000000000000000081527f2028000000000000000000000000000000000000000000000000000000000000600782015260008251611f7981600985016020870161178d565b7f29000000000000000000000000000000000000000000000000000000000000006009939091019283015250600a01919050565b828482376000838201600081527f202800000000000000000000000000000000000000000000000000000000000081528351611ff081600284016020880161178d565b7f29000000000000000000000000000000000000000000000000000000000000006002929091019182015260030195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561208e5761208e612027565b500290565b600082198211156120a6576120a6612027565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000816120e9576120e9612027565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b6000825161212181846020870161178d565b9190910192915050565b60006020828403121561213d57600080fd5b8151610a988161180e565b60008261217e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600060ff821660ff81141561219a5761219a612027565b6001019291505056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa264697066735822122006cdc61730f53c3a648a78859e67fbac516dad54aaac4e94bfa042389c943f2f64736f6c63430008090033";

type YieldBoxURIBuilderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YieldBoxURIBuilderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YieldBoxURIBuilder__factory extends ContractFactory {
  constructor(...args: YieldBoxURIBuilderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "YieldBoxURIBuilder";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<YieldBoxURIBuilder> {
    return super.deploy(overrides || {}) as Promise<YieldBoxURIBuilder>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): YieldBoxURIBuilder {
    return super.attach(address) as YieldBoxURIBuilder;
  }
  connect(signer: Signer): YieldBoxURIBuilder__factory {
    return super.connect(signer) as YieldBoxURIBuilder__factory;
  }
  static readonly contractName: "YieldBoxURIBuilder";
  public readonly contractName: "YieldBoxURIBuilder";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YieldBoxURIBuilderInterface {
    return new utils.Interface(_abi) as YieldBoxURIBuilderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YieldBoxURIBuilder {
    return new Contract(address, _abi, signerOrProvider) as YieldBoxURIBuilder;
  }
}
