/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MagnetarV2Storage,
  MagnetarV2StorageInterface,
} from "../../Magnetar/MagnetarV2Storage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761020c908161001c8239f35b600080fdfe60806040818152600436101561001f575b5050361561001d57600080fd5b005b600091823560e01c908163a22cb46514610098575063e985e9c50361001057346100945780600319360112610094576100566101bb565b602435906001600160a01b0390818316809303610090579360ff928492602096168252818652828220908252855220541690519015158152f35b8480fd5b5080fd5b919050346101b757806003193601126101b7576100b36101bb565b9060243591821515809303610090576001600160a01b0316928315610175575030831461013257916060917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31933386528560205280862083875260205280862060ff1981541660ff84161790558051923384526020840152820152a180f35b5162461bcd60e51b815260206004820181905260248201527f5969656c64426f783a2063616e277420617070726f7665207969656c64426f786044820152606490fd5b62461bcd60e51b815260206004820152601a60248201527f5969656c64426f783a206f70657261746f72206e6f74207365740000000000006044820152606490fd5b8280fd5b600435906001600160a01b03821682036101d157565b600080fdfea2646970667358221220f95e1de1a17489f87c2f76fe980d102b086b7b1d1c6657dd1206a8d66320829564736f6c63430008120033";

type MagnetarV2StorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MagnetarV2StorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MagnetarV2Storage__factory extends ContractFactory {
  constructor(...args: MagnetarV2StorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MagnetarV2Storage";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MagnetarV2Storage> {
    return super.deploy(overrides || {}) as Promise<MagnetarV2Storage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MagnetarV2Storage {
    return super.attach(address) as MagnetarV2Storage;
  }
  override connect(signer: Signer): MagnetarV2Storage__factory {
    return super.connect(signer) as MagnetarV2Storage__factory;
  }
  static readonly contractName: "MagnetarV2Storage";

  public readonly contractName: "MagnetarV2Storage";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MagnetarV2StorageInterface {
    return new utils.Interface(_abi) as MagnetarV2StorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MagnetarV2Storage {
    return new Contract(address, _abi, signerOrProvider) as MagnetarV2Storage;
  }
}
