/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MagnetarV2,
  MagnetarV2Interface,
} from "../../Magnetar/MagnetarV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_marketModule",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "contract IBigBang[]",
        name: "markets",
        type: "address[]",
      },
    ],
    name: "bigBangMarketInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "collateral",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "collateralId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "asset",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "assetId",
                type: "uint256",
              },
              {
                internalType: "contract IOracle",
                name: "oracle",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "oracleData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "totalCollateralShare",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "userCollateralShare",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint128",
                    name: "elastic",
                    type: "uint128",
                  },
                  {
                    internalType: "uint128",
                    name: "base",
                    type: "uint128",
                  },
                ],
                internalType: "struct Rebase",
                name: "totalBorrow",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "userBorrowPart",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "currentExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "spotExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "oracleExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalBorrowCap",
                type: "uint256",
              },
            ],
            internalType: "struct MagnetarV2Storage.MarketInfo",
            name: "market",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "debtRate",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "lastAccrued",
                type: "uint64",
              },
            ],
            internalType: "struct IBigBang.AccrueInfo",
            name: "accrueInfo",
            type: "tuple",
          },
        ],
        internalType: "struct MagnetarV2Storage.BigBangInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "allowFailure",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "call",
            type: "bytes",
          },
        ],
        internalType: "struct MagnetarV2Storage.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "burst",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "returnData",
            type: "bytes",
          },
        ],
        internalType: "struct MagnetarV2Storage.Result[]",
        name: "returnData",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "deposit",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "withdraw",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "withdrawData",
        type: "bytes",
      },
    ],
    name: "depositAddCollateralAndBorrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "deposit",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
    ],
    name: "depositAndAddAsset",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "deposit",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
    ],
    name: "depositAndRepay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "deposit",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "withdraw",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
    ],
    name: "depositRepayAndRemoveCollateral",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fraction",
        type: "uint256",
      },
    ],
    name: "getAmountForAssetFraction",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "borrowPart",
        type: "uint256",
      },
    ],
    name: "getAmountForBorrowPart",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "borrowPart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidationMultiplierPrecision",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRatePrecision",
        type: "uint256",
      },
    ],
    name: "getCollateralSharesForBorrowPart",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralShares",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketModule",
    outputs: [
      {
        internalType: "contract MagnetarMarketModule",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "contract IMarket",
        name: "bingBang",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "deposit",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
    ],
    name: "mintAndLend",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "contract IMarket",
        name: "bingBang",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "removeShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralShare",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdraw",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "withdrawData",
        type: "bytes",
      },
    ],
    name: "removeAssetAndRepay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "contract ISingularity[]",
        name: "markets",
        type: "address[]",
      },
    ],
    name: "singularityMarketInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "collateral",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "collateralId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "asset",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "assetId",
                type: "uint256",
              },
              {
                internalType: "contract IOracle",
                name: "oracle",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "oracleData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "totalCollateralShare",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "userCollateralShare",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint128",
                    name: "elastic",
                    type: "uint128",
                  },
                  {
                    internalType: "uint128",
                    name: "base",
                    type: "uint128",
                  },
                ],
                internalType: "struct Rebase",
                name: "totalBorrow",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "userBorrowPart",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "currentExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "spotExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "oracleExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalBorrowCap",
                type: "uint256",
              },
            ],
            internalType: "struct MagnetarV2Storage.MarketInfo",
            name: "market",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "elastic",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "base",
                type: "uint128",
              },
            ],
            internalType: "struct Rebase",
            name: "totalAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userAssetFraction",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "interestPerSecond",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "lastAccrued",
                type: "uint64",
              },
              {
                internalType: "uint128",
                name: "feesEarnedFraction",
                type: "uint128",
              },
            ],
            internalType: "struct ISingularity.AccrueInfo",
            name: "accrueInfo",
            type: "tuple",
          },
        ],
        internalType: "struct MagnetarV2Storage.SingularityInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IYieldBoxBase",
        name: "yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "dstChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "receiver",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "adapterParams",
        type: "bytes",
      },
      {
        internalType: "address payable",
        name: "refundAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080346200015057601f6200441138819003918201601f19168301916001600160401b0383118484101762000155578084926040948552833981010312620001505780516001600160a01b03918282169081830362000150576020015192808416809403620001505762000073336200016b565b60018055339060005416036200010c5715620000b85762000094906200016b565b600380546001600160a01b03191691909117905560405161425e9081620001b38239f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c8063013546e11461014b57806314ecf5a814610146578063411628d914610141578063443c73a71461013c578063664653ac146101375780636dd55c0b14610132578063715018a61461012d578063815c12ea146101285780638da5cb5b146101235780639cc6ef141461011e578063a22cb46514610119578063a306dfd514610114578063cc5e31631461010f578063cfd8b3d81461010a578063dedd6b8014610105578063e4e802e814610100578063e9212b72146100fb578063e985e9c5146100f65763f2fde38b0361000e5761227a565b612210565b61215f565b611eec565b611d90565b611d69565b611cd6565b611c1f565b611bed565b611aff565b611ac1565b611a33565b6119d5565b611854565b6115fb565b6113d6565b6112fd565b610f5a565b610244565b9181601f84011215610180578235916001600160401b038311610180576020808501948460051b01011161018057565b600080fd5b60005b8381106101985750506000910152565b8181015183820152602001610188565b906020916101c181518092818552858086019101610185565b601f01601f1916010190565b602080820190808352835180925260409283810182858560051b8401019601946000925b858410610202575050505050505090565b909192939495968580610233600193603f1986820301885286838d51805115158452015191818582015201906101a8565b9901940194019295949391906101f1565b6020806003193601126101805760049081356001600160401b038111610180576102719036908401610150565b9260009261027e85612502565b94845b8181106102a7576102a3876102978834146133ff565b604051918291826101cd565b0390f35b6102b2818387612579565b606096878201906102c96102c5836125a0565b1590565b610f0a575b604080840135809201809a6101906102ef6102e888612684565b61ffff1690565b14610ed8575b60016103036102e888612684565b0361034957505050508161033961033f926103316103268961034498970161286a565b9360808101906125aa565b9290916125a0565b92613e0b565b61247f565b610281565b61ffff60028161035889612684565b16036103835750505050508161037d61033f926103316103268961034498970161286a565b92613d37565b9091929396959b945061012c816103998e612684565b160361050e5750506103c36103bb6103b460808d018d6125aa565b809161268e565b81019061320d565b926103dd6103d885516001600160a01b031690565b614031565b85156104845750866104086103fc6103fc838961041796019e0161286a565b6001600160a01b031690565b9301516001600160a01b031690565b91803b15610180579051632479d86360e01b81526001600160a01b039092168783019081529193600092859291839182906020015b03925af191821561047f5761034492610466575b5061247f565b8061047361047992611153565b806119ca565b38610460565b612401565b9961049c929395506103fc9150876103fc910161286a565b816104b0878601516001600160a01b031690565b94015190803b15610180579151630c46aac760e31b8152338882019081526001600160a01b039095166020860152604085019190915292600091849182908490829060600103925af191821561047f5761034492610466575061247f565b8b96925061012d816105228b96979e612684565b160361059b5750509061056a6001600160a01b03926105706103fc6103fc61055b6105536103b460808d018d6125aa565b810190613306565b99939d9298919a909d16614031565b0161286a565b92833b156101805761044c8b9160009751998a978896879563695ef6bf60e01b8752339087016133a6565b6064816105ab8995949699612684565b16036106fe5750509082918860006105f66103fc6103fc8a60809661056a6103d86105e66105de6103b48c8601866125aa565b8101906132c7565b9e8f01516001600160a01b031690565b9261065e895191610610888c01516001600160a01b031690565b968b01519a01518751634d4d7cbd60e11b81529485019283523360208401526001600160a01b0390961660408301526060820199909952608081019490945290968793849291839160a00190565b03925af1801561047f576103449360009081926106c6575b5091518681019283526020830191909152906106a09082906040015b03601f198101835282611246565b6106a8611267565b6001815290858201526106bb828a613119565b526104608189613119565b6106a0925061069291506106ef90843d86116106f7575b6106e78183611246565b810190613250565b925090610676565b503d6106dd565b60c88161070d85999495612684565b16036107cf5750505060806107516103fc6103fc8961073c6107346103b4878c018c6125aa565b810190613266565b9861056a6103d88b516001600160a01b031690565b90610765888701516001600160a01b031690565b9061077285880151151590565b9387015196015193823b1561018057516374d2492960e11b815233818b019081526001600160a01b03909216602083015292151560408201526060810195909552608085019290925292600091849182908490829060a00161044c565b60c9816107df8996949596612684565b16036108d4575050829150936108206103fc6103fc6108749761080b6103bb6103b460808801886125aa565b9461056a6103d887516001600160a01b031690565b82610834898401516001600160a01b031690565b92015183516314890dcb60e21b815233818c019081526001600160a01b039094166020850152604084019190915295869283916000918391606090910190565b03925af1801561047f576103449360009081926108ac575b5091518681019283526020830191909152906106a0908290604001610692565b6106a0925061069291506108cc90843d86116106f7576106e78183611246565b92509061088c565b60ca816108e389959699612684565b160361095457505061046092916106926103449661091661090e6103b486608061094f9801906125aa565b81019061312d565b979c90966001600160a01b039692969593958091169161093583614031565b519d8e809d632731bbc560e21b9101521660248c016131aa565b613eac565b60cb8161096385999499612684565b1603610a4c5750506109906103fc6103fc8461080b6109886103b460808801886125aa565b8101906130c2565b818301516001600160a01b0316956109aa85840151151590565b9201518451630cb0f5b760e31b815233818c019081526001600160a01b039098166020890152921515604088015260608701529094859190829060009082906080015b03925af192831561047f5761034493610692926106a092600092610a1d575b505187810191825292839160200190565b610a3e919250883d8a11610a45575b610a368183611246565b810190612422565b9038610a0c565b503d610a2c565b60cc81610a5885612684565b1603610ade575050610a7d6103fc6103fc8461080b6109886103b460808801886125aa565b818301516001600160a01b031695610a9785840151151590565b920151845163cd0211eb60e01b815233818c019081526001600160a01b039098166020890152921515604088015260608701529094859190829060009082906080016109ed565b61012f81610af0859994969795612684565b1603610b6d57505091610b3f6103fc926103fc94610b1f610b176103b460808b018b6125aa565b810190612e7d565b95979699939b929c919a90949e61056a6001600160a01b03809c16614031565b96873b15610180576000998f9961044c95519d8e9b8c9a8b99636a1f940160e11b8b52169033908a0161301e565b61013081610b7e8997969599612684565b1603610bf857505093610bca6103fc956103fc610bac610ba46103b460808901896125aa565b810190612aba565b9894979395929c9199909a61056a6001600160a01b03809a16614031565b94853b15610180576000978d9761044c93519b8c998a988997632e20695360e01b8952169033908801612b78565b61013181610c0887969496612684565b1603610cad575050608094610c4c6103fc6103fc8a610c37610c2f6103b48c8b018b6125aa565b8101906128ea565b9761056a6103d88a516001600160a01b031690565b91610c60898601516001600160a01b031690565b918086015194860151978601519060c0610c7f60a089015161ffff1690565b970151853b15610180576000978d9361044c93519b8c998a988997634663f85d60e11b895233908901612968565b61013281610cc087959694989997612684565b1603610d3d575050916103fc610d0f9284610cf1610ce96103b460806103fc9b9a9901846125aa565b810190612806565b949a939d929598919b909661056a6001600160a01b03809b16614031565b95863b156101805760009861044c938f92519c8d9a8b998a986323c8387760e11b8a52169433908901612874565b60cd919550829350610d4f8193612684565b1603610e1357509161094f61046092610692610d81610d796103b48860806103449b9a01906125aa565b81019061279c565b9189830192610d9a6103d885516001600160a01b031690565b610dcc610dbf610db183516001600160a01b031690565b95516001600160a01b031690565b9683830151920151151590565b91516301bdbad760e71b8c8201526001600160a01b03948516602482015295909316604486015260648501929092529015156084840152600060a4840152829060c4820190565b81929350610e2260ce92612684565b1603610e8957610344929161094f86610692610e53610e4b6103b48760806104609901906125aa565b8101906126d0565b969a91949250946001600160a01b0380911691610e6f83614031565b519a8b9963411628d960e01b908b0152166024890161274f565b815162461bcd60e51b81526020818801818152601c918101919091527f4d61676e6574617256323a20616374696f6e206e6f742076616c696400000000604082015281906060010390fd5b0390fd5b610f056001600160a01b03610efe610ef66103b460808b018b6125aa565b8101906126ab565b91166124c8565b6102f5565b610f44610f1a60808501856125aa565b9050610f3c604051610f37816106928a8d83019190602083019252565b6125dc565b901515612658565b6102ce565b6001600160a01b0381160361018057565b346101805760408060031936011261018057600435610f7881610f49565b815163f9557ccb60e01b8152916001600160a01b039182168184600481845afa92831561047f5760009485946110e6575b50825163de40657760e01b81526020958682600481875afa91821561047f5760049488916000946110b7575b50865163226f120560e11b815295869182905afa801561047f5761104f968895600092611096575b5061102191926110196001600160801b03809216602435612447565b91169061245f565b855163442c159960e01b81526004810192909252602482015260006044820152948592839182906064820190565b0392165afa91821561047f576102a393600093611077575b5050519081529081906020820190565b61108e929350803d10610a4557610a368183611246565b903880611067565b61102192506110b190873d8911610a4557610a368183611246565b91610ffd565b6110d8919450823d84116110df575b6110d08183611246565b81019061240d565b9238610fd5565b503d6110c6565b90935061110a919450823d8411611114575b6111028183611246565b8101906123dd565b9390939238610fa9565b503d6110f8565b359061112682610f49565b565b8015150361018057565b359061112682611128565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161116657604052565b61113d565b604081019081106001600160401b0382111761116657604052565b60a081019081106001600160401b0382111761116657604052565b60e081019081106001600160401b0382111761116657604052565b608081019081106001600160401b0382111761116657604052565b606081019081106001600160401b0382111761116657604052565b61012081019081106001600160401b0382111761116657604052565b61014081019081106001600160401b0382111761116657604052565b61010081019081106001600160401b0382111761116657604052565b90601f801991011681019081106001600160401b0382111761116657604052565b604051906111268261116b565b60405190611126826111d7565b60405190611126826111f2565b604051906111268261120e565b6001600160401b03811161116657601f01601f191660200190565b81601f82011215610180578035906112cd8261129b565b926112db6040519485611246565b8284526020838301011161018057816000926020809301838601378301015290565b610100806003193601126101805760043561131781610f49565b6024359161132483610f49565b6084359261133184611128565b60a4359161133e83611128565b60c4359461134b86611128565b60e435916001600160401b038311610180576100199661094f956113766106929536906004016112b6565b9360405198899763411628d960e01b60208a01526001600160a01b0380921660248a015216604488015260443560648801526064356084880152151560a4870152151560c4860152151560e48501526101048401526101248301906101a8565b346101805760803660031901126101805760048035906113f582610f49565b6113fd6123b0565b506040805163020a17bd60e61b8152926001600160a01b039081169082858581855afa94851561047f5760009081966115d9575b5061144c61143d611267565b6001600160801b039092168252565b611463602096878301906001600160801b03169052565b835163de40657760e01b81529086828781875afa91821561047f576000926115b6575b50611494906024359061248e565b84516377607a1760e11b8152909287828881885afa91821561047f57600092611597575b50855163294c4c7960e11b81529388858981895afa94851561047f5788958a926114ea9260009261157f575b50612447565b95875198898092633ba0b9a960e01b82525afa94851561047f5761151e89966115329261104f9a6000926115605750612447565b61152c606435604435612447565b9061245f565b8651638eb22cdd60e01b81529485019283526020830152600060408301529295869384929091839160600190565b611578919250893d8b11610a4557610a368183611246565b90386114e4565b611578919250843d8611610a4557610a368183611246565b6115af919250883d8a11610a4557610a368183611246565b90386114b8565b6114949192506115d290883d8a116110df576110d08183611246565b9190611486565b90506115f3919550833d8511611114576111028183611246565b949038611431565b60e03660031901126101805761001960043561161681610f49565b60243561162281610f49565b6044359061162f82610f49565b60a4359061163c82611128565b60c4359261164984611128565b6040519463199194eb60e21b60208701526001600160a01b0392838092166024880152166044860152166064840152606435608484015260843560a4840152151560c4830152151560e482015260e4815261094f816111f2565b906040600319830112610180576004356116bc81610f49565b91602435906001600160401b038211610180576116db91600401610150565b9091565b80516001600160a01b031682529060208201516020820152611711604083015160408301906001600160a01b03169052565b60608201516060820152611735608083015160808301906001600160a01b03169052565b6101c061175160a08401516101e08060a08601528401906101a8565b9260c081015160c084015260e081015160e084015261178f6101008083015190850190602090816001600160801b0391828151168552015116910152565b610120810151610140908185015281015161016090818501528101516101809081850152810151906101a09182850152015191015290565b602080820190808352835180925260409283810182858560051b8401019601946000925b8584106117fc575050505050505090565b909192939495968580600192603f198582030187528a51908683611828845160608086528501906116df565b930151846001600160401b039182815116828601520151169101529901940194019295949391906117eb565b3461018057611862366116a3565b9061186c82612399565b9160409161187c83519485611246565b8184526020918285019060051b820191368311610180578390915b8383106119b057505050508251906118ae82613c6c565b936118b76123b0565b5060005b8381106118cf578451806102a388826117c7565b80856118f06103fc6118e360049587613119565b516001600160a01b031690565b6119036001600160a01b0382168b6136bf565b61190d848b613119565b51528151632c9f039d60e21b815293849182905afa91821561047f5761197892600091829161197d575b5061196590611956611947611267565b6001600160401b039094168452565b6001600160401b031682870152565b84611970838a613119565b51015261247f565b6118bb565b61196592506119a29150883d8a116119a9575b61199a8183611246565b810190613cd8565b9091611937565b503d611990565b819083356119bd81610f49565b8152019101908390611897565b600091031261018057565b3461018057600080600319360112611a30576119ef612341565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b61010036600319011261018057600435611a4c81610f49565b602435611a5881610f49565b60443591611a6583610f49565b60c435611a7181611128565b60e435936001600160401b0393848611610180573660238701121561018057856004013594851161018057366024868801011161018057602461001996019360a43592608435926064359261344b565b346101805760003660031901126101805760206001600160a01b0360005416604051908152f35b61ffff81160361018057565b359061112682611ae8565b6101408060031936011261018057600435611b1981610f49565b602435611b2581610f49565b60643591611b3283611ae8565b60e435916001600160401b0383116101805761001994611bce611b5c61094f9536906004016112b6565b61010492833593611b6c85610f49565b61ffff604051998a98632731bbc560e21b60208b01526001600160a01b03988980921660248c01521660448a015260443560648a015216608488015260843560a488015260a43560c488015260c43560e48801528601526101648501906101a8565b916101249116818401523561014483015203601f198101835282611246565b3461018057604036600319011261018057610019600435611c0d81610f49565b60243590611c1a82611128565b6124c8565b346101805760408060031936011261018057806001600160a01b0391600435611c4781610f49565b611c4f6123b0565b50600482518095819363020a17bd60e61b8352165afa91821561047f576102a392611ca7916000908192611cb6575b50835191611c8b8361116b565b6001600160801b0380921683521660208201526024359061248e565b90519081529081906020820190565b9050611ccf9150833d8511611114576111028183611246565b9038611c7e565b60c036600319011261018057610019600435611cf181610f49565b60243590611cfe82610f49565b608435611d0a81611128565b60a43591611d1783611128565b6040519363cc5e316360e01b60208601526001600160a01b03809216602486015216604484015260443560648401526064356084840152151560a4830152151560c482015260c4815261094f8161122a565b346101805760003660031901126101805760206001600160a01b0360035416604051908152f35b60a036600319011261018057610019600435611dab81610f49565b60243590611db882610f49565b606435611dc481611128565b60843591611dd183611128565b604051936301bdbad760e71b60208601526001600160a01b038092166024860152166044840152604435606484015215156084830152151560a482015260a4815261094f816111a1565b602080820190808352835180925260409283810182858560051b8401019601946000925b858410611e50575050505050505090565b909192939495968580600192603f198582030187528a519060c06001600160801b0388611e85855160e08087528601906116df565b94611eac8782015188870190602090816001600160801b0391828151168552015116910152565b81810151906060918287015201516001600160401b03808251166080870152878201511660a0860152015116910152990194019401929594939190611e3f565b3461018057611efa366116a3565b9091611f0582612399565b91604093611f1585519485611246565b8184526020918285019060051b820191368311610180578390915b8383106121455750505050825191611f4783613579565b93611f506123b0565b50611f5961355a565b5060005b848110611f71578651806102a38882611e1b565b611f816103fc6118e38385613119565b90611f956001600160a01b038316856136bf565b611f9f8289613119565b5152875163f9557ccb60e01b815260049089818381875afa801561047f576000918291612122575b50611ff590611fe6611fd7611267565b6001600160801b039094168452565b6001600160801b031682890152565b86612000848b613119565b51015288516370a0823160e01b81526001600160a01b0386168282019081528790829081906020010381875afa90811561047f57600091612105575b5089612048848b613119565b510152885192838092632c9f039d60e21b825260609586935afa92831561047f576120c493600092839084926120c9575b50906120ab6120ba9261209c61208d611274565b6001600160401b039097168752565b6001600160401b0316858b0152565b6001600160801b0316838c0152565b611970838a613119565b611f5d565b6120ab94506120ba92506120f39150833d85116120fe575b6120eb8183611246565b81019061360f565b919490919250612079565b503d6120e1565b61211c9150873d8911610a4557610a368183611246565b3861203c565b611ff5925061213e91508b3d8d11611114576111028183611246565b9091611fc7565b8190833561215281610f49565b8152019101908390611f30565b6101003660031901126101805761001960043561217b81610f49565b6024359061218882610f49565b60a43561219481611128565b60c435906121a182611128565b60e435926121ae84611128565b6040519463749095b960e11b60208701526001600160a01b0380921660248701521660448501526044356064850152606435608485015260843560a4850152151560c4840152151560e483015261010490151581830152815261094f8161120e565b3461018057604036600319011261018057602060ff61226e60043561223481610f49565b6001600160a01b036024359161224983610f49565b16600052600284526040600020906001600160a01b0316600052602052604060002090565b54166040519015158152f35b346101805760203660031901126101805760043561229781610f49565b61229f612341565b6001600160a01b0380911680156122ed57600080546001600160a01b03198116831782559092167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6001600160a01b0360005416330361235557565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160401b0381116111665760051b60200190565b604051906123bd8261116b565b60006020838281520152565b51906001600160801b038216820361018057565b9190826040910312610180576123fe60206123f7846123c9565b93016123c9565b90565b6040513d6000823e3d90fd5b9081602091031261018057516123fe81610f49565b90816020910312610180575190565b634e487b7160e01b600052601160045260246000fd5b8181029291811591840414171561245a57565b612431565b8115612469570490565b634e487b7160e01b600052601260045260246000fd5b600019811461245a5760010190565b60208101906001600160801b039081835116156000146124ae5750505090565b6123fe93826124bf92511690612447565b9151169061245f565b6124ff916001600160a01b036040519263a22cb46560e01b6020850152166024830152151560448201526044815261094f816111bc565b50565b9061250c82612399565b604061251a81519283611246565b838252819361252b601f1991612399565b0191600091825b848110612540575050505050565b602090825161254e8161116b565b85815282606081830152828601015201612532565b634e487b7160e01b600052603260045260246000fd5b919081101561259b5760051b81013590609e1981360301821215610180570190565b612563565b356123fe81611128565b903590601e198136030182121561018057018035906001600160401b0382116101805760200191813603831361018057565b90611126604e60405180947f4d61676e6574617256323a204d697373696e672063616c6c20666f722061637460208301526d0d2dedc40eed2e8d040d2dcc8caf60931b60408301526126378151809260208686019101610185565b810103602e810185520183611246565b9060206123fe9281815201906101a8565b156126605750565b60405162461bcd60e51b815260206004820152908190610ed49060248301906101a8565b356123fe81611ae8565b909291928360041161018057831161018057600401916003190190565b919082604091031261018057602082356126c481610f49565b9201356123fe81611128565b919091610100818403126101805780356126e981610f49565b9260208201356126f881610f49565b92604083013592606081013592608082013561271381611128565b9260a083013561272281611128565b9260c081013561273181611128565b9260e08201356001600160401b038111610180576123fe92016112b6565b9492906123fe979694926001600160a01b0380921687521660208601526040850152606084015260006080840152151560a0830152151560c0820152610100908160e082015201906101a8565b908160a0910312610180576080604051916127b683611186565b80356127c181610f49565b835260208101356127d181610f49565b60208401526040810135604084015260608101356127ee81611128565b606084015201356127fe81611128565b608082015290565b9060e08282031261018057813561281c81610f49565b92602083013592604081013592606082013592608083013561283d81611ae8565b9260a081013561284c81610f49565b9260c08201356001600160401b038111610180576123fe92016112b6565b356123fe81610f49565b939460e09561ffff92946123fe9998946001600160a01b0380971688526020880152604087015260608601521660808401521660a08201528160c082015201906101a8565b9190826040910312610180576040516128d18161116b565b6020808294803584520135916128e683610f49565b0152565b9061010082820312610180576129609060c060405193612909856111a1565b803561291481610f49565b8552602081013561292481610f49565b602086015260408101356040860152606081013560608601526080810135608086015260a081013561295581611ae8565b60a0860152016128b9565b60c082015290565b929460c09461ffff93999896611126989361010087019b6001600160a01b0380921688521660208701526040860152606085015260808401521660a082015201906001600160a01b036020809280518552015116910152565b359060ff8216820361018057565b81601f82011215610180578035906129e682612399565b926040906129f682519586611246565b838552602091828601918361012080970286010194818611610180578401925b858410612a27575050505050505090565b868483031261018057848791612a3b611281565b612a4487611132565b8152612a5183880161111b565b83820152612a6086880161111b565b868201526060612a7181890161111b565b908201526080808801359082015260a0808801359082015260c0612a968189016129c1565b9082015260e080880135908201526101008088013590820152815201930192612a16565b919091808303906101408212610180578035612ad581610f49565b936020820135612ae481610f49565b9360806040840135612af581611ae8565b94605f19011261018057604051612b0b816111bc565b6060840135612b1981611128565b81526080840135602082015260a0840135612b3381610f49565b604082015260c0840135612b4681610f49565b606082015292612b598360e083016128b9565b926101208201356001600160401b038111610180576123fe92016129cf565b93949092919261014091828601956001600160a01b03809316815282602096168682015261ffff6040951685820152875115159760609889830152868101516080908184015287610160868c818b870151169560a096878901520151169460c09586820152612bff60e097888301906001600160a01b036020809280518552015116910152565b61012098898201528d51809c52019b01996000975b8a8910612c2a5750505050505050505050505090565b909192939495969798999a9b8a896001928f518051151582528b848201511684830152612c6586820151878401906001600160a01b03169052565b808701516001600160a01b031682880152808801518289015288810151898301528981015160ff168a830152808b0151828c01526101009081015190820152019d019b9a99019796959493929190612c14565b919082608091031261018057604051612cd0816111bc565b606080829480358452602081013560208501526040810135612cf181610f49565b60408501520135916128e683610f49565b919060a0838203126101805760405190612d1b82611186565b81938035612d2881611128565b8352602081013560208401526040810135612d4281611128565b60408401526060810135612d5581611ae8565b60608401526080810135916001600160401b03831161018057608092612d7b92016112b6565b910152565b81601f8201121561018057803590612d9782612399565b92604090612da782519586611246565b838552602091828601918361014080970286010194818611610180578401925b858410612dd8575050505050505090565b868483031261018057848791612dec61128e565b612df587611132565b8152612e0283880161111b565b83820152612e11868801611132565b868201526060612e2281890161111b565b908201526080612e3381890161111b565b9082015260a0808801359082015260c0808801359082015260e0612e588189016129c1565b9082015261010080880135908201526101208088013590820152815201930192612dc7565b906101808282031261018057612e928261111b565b92612e9f6020840161111b565b92612eac60408201611af4565b926001600160401b0360608301358181116101805782612ecd9185016112b6565b93612edb8360808601612cb8565b936101008101358381116101805784612ef5918301612d02565b93612f048161012084016128b9565b93610160830135908111610180576123fe9201612d80565b9060a060806123fe938051151584526020810151602085015260408101511515604085015261ffff606082015116606085015201519181608082015201906101a8565b90815180825260208080930193019160005b828110612f7f575050505090565b90919293826101406001928751612f9882825115159052565b808401516001600160a01b0316828501526040818101511515908301526060818101516001600160a01b0316908301526080818101516001600160a01b03169083015260a0818101519083015260c0808201519083015260e08082015160ff16908301526101008181015190830152610120908101519082015201950193929101612f71565b949160606130616130b49661ffff613095976123fe9d9b966001600160a01b0396878092168d521660208c01521660408a015261018080848b01528901906101a8565b9380516080890152602081015160a08901528260408201511660c089015201511660e0860152848203610100860152612f1c565b84516101208401526020909401516001600160a01b0316610140830152565b610160818403910152612f5f565b90816080910312610180576060604051916130dc836111bc565b80356130e781610f49565b835260208101356130f781610f49565b6020840152604081013561310a81611128565b60408401520135606082015290565b805182101561259b5760209160051b010190565b90916101208284031261018057813561314581610f49565b92602083013561315481610f49565b92604081013592606082013561316981611ae8565b9260808301359260a08101359260c08201359260e08301356001600160401b038111610180576101009161319e9185016112b6565b9201356123fe81610f49565b9692610120989461ffff9161320197939d9c9b9d9894986001600160a01b03998a8092168c521660208b015260408a0152166060880152608087015260a086015260c08501526101408060e08601528401906101a8565b95166101008201520152565b90816060910312610180576040805191613226836111d7565b803561323181610f49565b8352602081013561324181610f49565b60208401520135604082015290565b9190826040910312610180576020825192015190565b908160a09103126101805760806040519161328083611186565b803561328b81610f49565b8352602081013561329b81610f49565b602084015260408101356132ae81611128565b6040840152606081013560608401520135608082015290565b908160a0910312610180576080604051916132e183611186565b8035835260208101356132f381610f49565b602084015260408101356132ae81610f49565b91909160a08184031261018057803561331e81610f49565b92602082013561332d81611ae8565b9260408301359260608101359260808201356001600160401b03928382116101805701906060828203126101805760405192613368846111d7565b823561337381610f49565b8452602083013561338381610f49565b602085015260408301359081116101805761339e92016112b6565b604082015290565b93906123fe95916101009461ffff6040956001600160a01b03809516895216602088015284870152606086015260a060808601528082511660a086015260208201511660c0850152015191606060e082015201906101a8565b1561340657565b60405162461bcd60e51b815260206004820152601a60248201527f4d61676e6574617256323a2076616c7565206d69736d617463680000000000006044820152606490fd5b969491926124ff98949161094f9794604051996340ae097560e11b60208c01526001600160a01b03928380921660248d01521660448b0152166064890152608488015260a487015260c4860152151560e4850152610100610104850152836101249180838301528061014494858401376000828201850152601f01601f191681010390810184520182611246565b604051906101c082018281106001600160401b0382111761116657604052816101a0600091828152826020820152826040820152826060820152826080820152606060a08201528260c08201528260e08201526135346123b0565b610100820152826101208201528261014082015282610160820152826101808201520152565b60405190613567826111d7565b60006040838281528260208201520152565b9061358382612399565b60409061359282519182611246565b83815280936135a3601f1991612399565b0191600091825b8481106135b8575050505050565b60209083516135c6816111bc565b6135ce6134d9565b81526135d86123b0565b83908183015286868301526135eb61355a565b60608301528285010152016135aa565b51906001600160401b038216820361018057565b9081606091031261018057613623816135fb565b916123fe60406123f7602085016135fb565b909291926136428161129b565b916136506040519384611246565b829482845282820111610180576020611126930190610185565b602081830312610180578051906001600160401b03821161018057019080601f830112156101805781516123fe92602001613635565b919082604091031261018057602082516136b981611128565b92015190565b906136c86134d9565b506136d16123b0565b506136da6134d9565b6040805163d8dfeb4560e01b815291936004936020936001600160a01b03918216929085818881875afa801561047f5761372491600091613c4f575b506001600160a01b03168852565b83516338d52e0f60e01b815285818881875afa801561047f5761375991600091613c32575b506001600160a01b031688860152565b83516307dc0d1d60e41b808252919086818981885afa90811561047f57613796918591600091613c15575b50166001600160a01b031660808a0152565b84516374645ff360e01b80825291906000818a81895afa90811561047f57600091613bfc575b5060a08a0152855163473e3ce760e01b815287818a81895afa90811561047f57600091613bdf575b5060c08a01528551631c9e379b60e01b81526001600160a01b0382168982019081528890829081906020010381895afa90811561047f57600091613bc2575b5060e08a0152855163020a17bd60e61b81529086828a81895afa90811561047f576138a19289926000918291613b9f575b5061387390613864611fd7611267565b6001600160801b031682850152565b6101008c01528751809381926324720b1f60e11b83528c83019190916001600160a01b036020820193169052565b0381885afa90811561047f57600091613b82575b506101208901528451633ba0b9a960e01b815286818981885afa90811561047f57600091613b65575b50610140890152845182815286818981885afa90811561047f57600091613b48575b5085518281526000818a81895afa801561047f5761393e928892600092613b2d575b508a87845180968195829463eeb8a8d360e01b84528301612647565b0392165afa90811561047f57600091613afe575b50610180890152845191825285828881875afa91821561047f57600092613adf575b5084519081526000818881875afa91821561047f5786926139b292600091613abe575b508651948580948193630d39bbef60e41b83528c8301612647565b0392165afa90811561047f57600091613aa1575b5061016086015281516340626d8b60e01b815283818681855afa90811561047f57600091613a84575b506101a0860152815163226f120560e11b81529183838681855afa801561047f578493600091613a67575b506060870152516377607a1760e11b815293849182905afa91821561047f57600092613a48575b5082015290565b81613a609293503d8411610a4557610a368183611246565b9038613a41565b613a7e9150843d8611610a4557610a368183611246565b38613a1a565b613a9b9150843d8611610a4557610a368183611246565b386139ef565b613ab89150843d8611610a4557610a368183611246565b386139c6565b613ad9913d8091833e613ad18183611246565b81019061366a565b38613997565b613af7919250863d88116110df576110d08183611246565b9038613974565b613b1e9150863d8811613b26575b613b168183611246565b8101906136a0565b905038613952565b503d613b0c565b613b4191923d8091833e613ad18183611246565b9038613922565b613b5f9150873d89116110df576110d08183611246565b38613900565b613b7c9150873d8911610a4557610a368183611246565b386138de565b613b999150873d8911610a4557610a368183611246565b386138b5565b6138739250613bbb91508a3d8c11611114576111028183611246565b9091613854565b613bd99150883d8a11610a4557610a368183611246565b38613823565b613bf69150883d8a11610a4557610a368183611246565b386137e4565b613c0f913d8091833e613ad18183611246565b386137bc565b613c2c9150893d8b116110df576110d08183611246565b38613784565b613c499150873d89116110df576110d08183611246565b38613749565b613c669150873d89116110df576110d08183611246565b38613716565b90613c7682612399565b604090613c8582519182611246565b8381528093613c96601f1991612399565b019160005b838110613ca85750505050565b6020908251613cb68161116b565b613cbe6134d9565b8152613cc86123b0565b8184015284820183015201613c9b565b9190826040910312610180576123fe6020613cf2846135fb565b93016135fb565b908092918237016000815290565b3d15613d32573d90613d188261129b565b91613d266040519384611246565b82523d6000602084013e565b606090565b826004116101805760e06003198385810103011261018057600092838093613dd06001600160a01b03604051613d6c816111a1565b600484013590613d7b82610f49565b8181526024850135613d8c81610f49565b60208201526044850135604082015260648501356060820152613db1608486016129c1565b608082015260a485013560a082015260c060c486013591015216614031565b613ddf60405180948193613cf9565b03925af190613dec613d07565b91159081613e02575b50613dfd5750565b613f29565b90501538613df5565b60c092613e1981808561268e565b9080959181010312610180576040519360c08501938585106001600160401b0386111761116657613dd06001600160a01b0360009793889794889560405260a080833593613e6685610f49565b8484526020810135613e7781610f49565b602085015260408101356040850152613e92606082016129c1565b606085015260808101356080850152013591015216614031565b6001600160a01b03600354168015613ee457816000929160208493519201905af490613ed6613d07565b9115613ede57565b50613f29565b60405162461bcd60e51b815260206004820152601c60248201527f4d61676e6574617256323a206d6f64756c65206e6f7420666f756e64000000006044820152606490fd5b6044815110613f9657600481015181019060208160248401930312610180576024810151906001600160401b03821161018057018160438201121561018057610ed4918160446024613f7e9401519101613635565b60405162461bcd60e51b815291829160048301612647565b60405162461bcd60e51b815260206004820152601a60248201527f4d61676e6574617256323a20526561736f6e20756e6b6e6f776e0000000000006044820152606490fd5b15613fe257565b60405162461bcd60e51b815260206004820152602160248201527f4d61676e6574617256323a206f70657261746f72206e6f7420617070726f76656044820152601960fa1b6064820152608490fd5b6111269061406a6040516140448161116b565b60128152714d61676e657461722073656e64657220257360701b602082015233906141dc565b61409e8160405161407a8161116b565b60128152714d61676e65746172205f66726f6d2020257360701b60208201526141dc565b61412960ff6140dc336140c4856001600160a01b03166000526002602052604060002090565b906001600160a01b0316600052602052604060002090565b54166040516140ea816111d7565b602781527f6973417070726f766564466f72416c6c5b5f66726f6d5d5b6d73672e73656e6460208201526665725d2020257360c81b604082015261417c565b336001600160a01b03821614908115614143575b50613fdb565b6001915061416c614173916140c433916001600160a01b03166000526002602052604060002090565b5460ff1690565b1515143861413d565b6141c16141ab916111269360405193849263c3b5563560e01b60208501526040602485015260648401906101a8565b901515604483015203601f198101835282611246565b600080916020815191016a636f6e736f6c652e6c6f675afa50565b6141c161421391611126936001600160a01b0360405194859363319af33360e01b60208601526040602486015260648501906101a8565b9116604483015203601f19810183528261124656fea2646970667358221220de1011c77503e9c0bd8bc0f1a352361cea4c11aca1686ffd99f0f3427ac7f63c64736f6c63430008120033";

type MagnetarV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MagnetarV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MagnetarV2__factory extends ContractFactory {
  constructor(...args: MagnetarV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MagnetarV2";
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _marketModule: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MagnetarV2> {
    return super.deploy(
      _owner,
      _marketModule,
      overrides || {}
    ) as Promise<MagnetarV2>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _marketModule: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, _marketModule, overrides || {});
  }
  override attach(address: string): MagnetarV2 {
    return super.attach(address) as MagnetarV2;
  }
  override connect(signer: Signer): MagnetarV2__factory {
    return super.connect(signer) as MagnetarV2__factory;
  }
  static readonly contractName: "MagnetarV2";

  public readonly contractName: "MagnetarV2";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MagnetarV2Interface {
    return new utils.Interface(_abi) as MagnetarV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MagnetarV2 {
    return new Contract(address, _abi, signerOrProvider) as MagnetarV2;
  }
}
