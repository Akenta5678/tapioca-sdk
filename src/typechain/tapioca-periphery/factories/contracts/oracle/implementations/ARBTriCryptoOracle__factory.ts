/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ARBTriCryptoOracle,
  ARBTriCryptoOracleInterface,
} from "../../../../contracts/oracle/implementations/ARBTriCryptoOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "__name",
        type: "string",
      },
      {
        internalType: "string",
        name: "__symbol",
        type: "string",
      },
      {
        internalType: "contract ICurvePool",
        name: "pool",
        type: "address",
      },
      {
        internalType: "contract AggregatorV2V3Interface",
        name: "btcFeed",
        type: "address",
      },
      {
        internalType: "contract AggregatorV2V3Interface",
        name: "ethFeed",
        type: "address",
      },
      {
        internalType: "contract AggregatorV2V3Interface",
        name: "usdtFeed",
        type: "address",
      },
      {
        internalType: "contract AggregatorV2V3Interface",
        name: "wbtcFeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "A0",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BTC_FEED",
    outputs: [
      {
        internalType: "contract AggregatorV2V3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DISCOUNT0",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ETH_FEED",
    outputs: [
      {
        internalType: "contract AggregatorV2V3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GAMMA0",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TRI_CRYPTO",
    outputs: [
      {
        internalType: "contract ICurvePool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDT_FEED",
    outputs: [
      {
        internalType: "contract AggregatorV2V3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WBTC_FEED",
    outputs: [
      {
        internalType: "contract AggregatorV2V3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "peek",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "peekSpot",
    outputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61012060405234620003e65762001206803803806200001e81620003eb565b92833981019060e081830312620003e65780516001600160401b039290838111620003e657816200005191840162000411565b926020918284015190828211620003e6576200006f91850162000411565b604084015190946001600160a01b0382168203620003e657620000956060860162000483565b92620000a46080870162000483565b94620000c160c0620000b960a08a0162000483565b980162000483565b97835191838311620003d0576000908154936001968786811c96168015620003c5575b83871014620003b1578190601f968781116200035e575b508390878311600114620002fa578592620002ee575b5050600019600383901b1c191690871b1782555b8251948511620002da5785548681811c91168015620002cf575b82821014620002bb5790818587969594931162000262575b5080938511600114620001fb575092620001ef575b5050600019600383901b1c191690821b1790555b60805260a05260c05260e052610100908152604051610d6d918262000499833960805182818161024001526106c3015260a05182818161031a0152610713015260c0518281816102d7015261078e015260e05182818160f701526107c90152518181816101fe01526107540152f35b0151905038806200016c565b868252808220879650939291601f198616915b8282106200024857505084116200022e575b505050811b01905562000180565b015160001960f88460031b161c1916905538808062000220565b84840151865588979095019493840193908101906200020e565b9091929394508683528183208580880160051c820192848910620002b1575b9188978a9297969594930160051c01915b828110620002a257505062000157565b84815588975089910162000292565b9250819262000281565b634e487b7160e01b83526022600452602483fd5b90607f16906200013f565b634e487b7160e01b82526041600452602482fd5b01519050388062000111565b8580528486208a94509190601f198416875b878282106200034757505084116200032d575b505050811b01825562000125565b015160001960f88460031b161c191690553880806200031f565b8385015186558d979095019493840193016200030c565b9091508480528385208780850160051c820192868610620003a7575b918b91869594930160051c01915b82811062000398575050620000fb565b8781558594508b910162000388565b925081926200037a565b634e487b7160e01b84526022600452602484fd5b95607f1695620000e4565b634e487b7160e01b600052604160045260246000fd5b600080fd5b6040519190601f01601f191682016001600160401b03811183821017620003d057604052565b919080601f84011215620003e65782516001600160401b038111620003d05760209062000447601f8201601f19168301620003eb565b92818452828287010111620003e65760005b8181106200046f57508260009394955001015290565b858101830151848201840152820162000459565b51906001600160a01b0382168203620003e65756fe60806040818152600436101561001457600080fd5b600090813560e01c928363128b8f65146102fb5750826324609906146102b9578263313ce5671461029f5782635cc23f7d1461028357826366060ada146102645782636812fa991461022257826370d0d076146101e0578263b09f1266146101c4578263c4fda2f5146101a4578263c699c4d614610188578263d28d88521461016c578263d39bbef01461014a578263d568866c1461011f578263d6d7d525146100d4578263d90fdff1146100d957505063eeb8a8d3146100d457600080fd5b6105a6565b3461011b578160031936011261011b57602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b5080fd5b3461011b576101469061013136610557565b505061013b61045e565b90519182918261050e565b0390f35b3461011b5760209061015b36610557565b50506101656106b9565b9051908152f35b3461011b578160031936011261011b576101469061013b61045e565b3461011b576101469061019a36610557565b505061013b610376565b3461011b578160031936011261011b57602090516603dd0a0301e8008152f35b3461011b578160031936011261011b576101469061013b610376565b3461011b578160031936011261011b57602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461011b578160031936011261011b57602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461011b578160031936011261011b5760209051651977420dc0008152f35b3461011b578160031936011261011b576020905162083d608152f35b3461011b578160031936011261011b576020905160128152f35b3461011b578160031936011261011b57602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b90503461011b578160031936011261011b576020906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b90601f8019910116810190811067ffffffffffffffff82111761036057604052565b634e487b7160e01b600052604160045260246000fd5b60405190600060019081549182811c90808416938415610454575b6020948584108114610440578388528794939291811561042057506001146103c4575b50506103c29250038361033e565b565b60008181527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf695935091905b8183106104085750506103c2935082010138806103b4565b855488840185015294850194879450918301916103f0565b9150506103c294925060ff191682840152151560051b82010138806103b4565b634e487b7160e01b85526022600452602485fd5b91607f1691610391565b604051906000805490600182811c90808416938415610504575b6020948584108114610440578388528794939291811561042057506001146104a85750506103c29250038361033e565b60008080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56395935091905b8183106104ec5750506103c2935082010138806103b4565b855488840185015294850194879450918301916104d4565b91607f1691610478565b6020808252825181830181905290939260005b82811061054357505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610521565b9060206003198301126105a15760043567ffffffffffffffff928382116105a157806023830112156105a15781600401359384116105a157602484830101116105a1576024019190565b600080fd5b346105a1576105b436610557565b505060406105c06106b9565b815190600182526020820152f35b818102929181159184041417156105e157565b634e487b7160e01b600052601160045260246000fd5b60009080156106b55780806001146106ad576002146106a5576001918261013383101683600b841016176106955760028392935b8082116106585750508260001904821161064457500290565b634e487b7160e01b81526011600452602490fd5b90938060001904811161068157818516610678575b800293811c9061062b565b8093029261066d565b634e487b7160e01b83526011600452602483fd5b929150600283910a926106445750565b509060049150565b505050600190565b5090565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660408051630176f71760e71b815260209260049284838581855afa928315610b9057600093610b61575b506107377f0000000000000000000000000000000000000000000000000000000000000000610bb2565b926402540be40080850294808604821490151715610ae0576107787f0000000000000000000000000000000000000000000000000000000000000000610bb2565b81810290808204831490151715610b2f576107b27f0000000000000000000000000000000000000000000000000000000000000000610bb2565b9082820291808304841490151715610b4c576107ed7f0000000000000000000000000000000000000000000000000000000000000000610bb2565b838102938185041490151715610b4c57610831929161082c91670de0b6b3a764000098818a809310600014610b445790610826916105ce565b046105ce565b6105ce565b60038281029281840403610b2f5791818380808080808c998e6108fe9a6fffffffffffffffffffffffffffffffff1060071b89811c67ffffffffffffffff1060061b1789811c63ffffffff1060051b179089821c61ffff10901b1788811c60ff10821b1760ff627f624b60e81b8383061a91838b821c600f109104011b04808080028a0401010480808002890401010480808002880401010480808002870401010480808002860401010480808002850401010480808002840401010480918180029004109003906105ce565b049481519263b137392960e01b845281848781845afa938415610b2457600094610af5575b5084840293808504861490151715610ae0579080839287945194858092630f446c1d60e41b82525afa918215610ad65750600091610aa7575b508381029150801590820484141715610a92579082610826651977420dc00062083d6061098b950493046105f7565b6e01ed09bead87c0378d8e640000000080821115610a8b57505b8070ffffffffffffffffffffffffffffffffff1060071b81811c68ffffffffffffffffff1060061b1781811c64ffffffffff1060051b1781811c62ffffff10841b1760019060b56201000084831c0191831c1b0260121c80830401811c80830401811c80830401811c80830401811c80830401811c80830401811c80830401901c808092041090818103916603dd0a0301e8008084029384041491141715610a765781610a539104846105ce565b048203918211610a61575090565b601190634e487b7160e01b6000525260246000fd5b601183634e487b7160e01b6000525260246000fd5b90506109a5565b601184634e487b7160e01b6000525260246000fd5b82813d8311610acf575b610abb818361033e565b81010312610acc575051803861095c565b80fd5b503d610ab1565b513d6000823e3d90fd5b601186634e487b7160e01b6000525260246000fd5b90938282813d8311610b1d575b610b0c818361033e565b81010312610acc5750519238610923565b503d610b02565b83513d6000823e3d90fd5b601187634e487b7160e01b6000525260246000fd5b5090506105ce565b601188634e487b7160e01b6000525260246000fd5b90928582813d8311610b89575b610b78818361033e565b81010312610acc575051913861070d565b503d610b6e565b50513d6000823e3d90fd5b519069ffffffffffffffffffff821682036105a157565b60a06001600160a01b0391600460405180948193633fabe5a360e21b8352165afa8015610d2b5760009081928291610cd6575b506000831315610c925715610c4d5769ffffffffffffffffffff1615610c085790565b60405162461bcd60e51b815260206004820152601f60248201527f41524254726943727970746f4f7261636c653a207374616c6520726f756e64006044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f41524254726943727970746f4f7261636c653a207374616c65207072696365006044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f41524254726943727970746f4f7261636c653a206665656420707269636520306044820152fd5b92505060a0823d8211610d23575b81610cf160a0938361033e565b81010312610acc5750610d0381610b9b565b602082015190610d1a608060608501519401610b9b565b50909138610be5565b3d9150610ce4565b6040513d6000823e3d90fdfea2646970667358221220e75d03ea948b54166f5d30ba0d5a36b31e305596acda4ca5477ea982f6f5f41b64736f6c63430008120033";

type ARBTriCryptoOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ARBTriCryptoOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ARBTriCryptoOracle__factory extends ContractFactory {
  constructor(...args: ARBTriCryptoOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ARBTriCryptoOracle";
  }

  override deploy(
    __name: PromiseOrValue<string>,
    __symbol: PromiseOrValue<string>,
    pool: PromiseOrValue<string>,
    btcFeed: PromiseOrValue<string>,
    ethFeed: PromiseOrValue<string>,
    usdtFeed: PromiseOrValue<string>,
    wbtcFeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ARBTriCryptoOracle> {
    return super.deploy(
      __name,
      __symbol,
      pool,
      btcFeed,
      ethFeed,
      usdtFeed,
      wbtcFeed,
      overrides || {}
    ) as Promise<ARBTriCryptoOracle>;
  }
  override getDeployTransaction(
    __name: PromiseOrValue<string>,
    __symbol: PromiseOrValue<string>,
    pool: PromiseOrValue<string>,
    btcFeed: PromiseOrValue<string>,
    ethFeed: PromiseOrValue<string>,
    usdtFeed: PromiseOrValue<string>,
    wbtcFeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __name,
      __symbol,
      pool,
      btcFeed,
      ethFeed,
      usdtFeed,
      wbtcFeed,
      overrides || {}
    );
  }
  override attach(address: string): ARBTriCryptoOracle {
    return super.attach(address) as ARBTriCryptoOracle;
  }
  override connect(signer: Signer): ARBTriCryptoOracle__factory {
    return super.connect(signer) as ARBTriCryptoOracle__factory;
  }
  static readonly contractName: "ARBTriCryptoOracle";

  public readonly contractName: "ARBTriCryptoOracle";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ARBTriCryptoOracleInterface {
    return new utils.Interface(_abi) as ARBTriCryptoOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ARBTriCryptoOracle {
    return new Contract(address, _abi, signerOrProvider) as ARBTriCryptoOracle;
  }
}
