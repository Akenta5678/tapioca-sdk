/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MagnetarMarketModule,
  MagnetarMarketModuleInterface,
} from "../../../../contracts/Magnetar/modules/MagnetarMarketModule";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "deposit",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "withdraw",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "withdrawData",
        type: "bytes",
      },
    ],
    name: "depositAddCollateralAndBorrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "deposit",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "lock",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "lockDuration",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
        ],
        internalType:
          "struct ITapiocaOptionLiquidityProvision.IOptionsLockData",
        name: "lockData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "participate",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
        ],
        internalType: "struct ITapiocaOptionsBroker.IOptionsParticipateData",
        name: "participateData",
        type: "tuple",
      },
    ],
    name: "depositAndAddAsset",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawCollateralParams",
        type: "tuple",
      },
    ],
    name: "depositRepayAndRemoveCollateral",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "contract IMarket",
        name: "bingBang",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "deposit",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
    ],
    name: "mintAndLend",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct IUSDOBase.IRemoveAndRepayExternalContracts",
        name: "externalData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "removeAssetFromSGL",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "removeShare",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "repayAssetOnBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "repayAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "removeCollateralFromBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralShare",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "exit",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "oTAPTokenID",
                type: "uint256",
              },
            ],
            internalType: "struct ITapiocaOptionsBroker.IOptionsExitData",
            name: "exitData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "unlock",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            internalType:
              "struct ITapiocaOptionLiquidityProvision.IOptionsUnlockData",
            name: "unlockData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "assetWithdrawData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "collateralWithdrawData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IRemoveAndRepay",
        name: "removeAndRepayData",
        type: "tuple",
      },
    ],
    name: "removeAssetAndRepay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IYieldBoxBase",
        name: "yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "dstChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "receiver",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "adapterParams",
        type: "bytes",
      },
      {
        internalType: "address payable",
        name: "refundAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761363c908161001c8239f35b600080fdfe608080604052600436101561001d575b50361561001b57600080fd5b005b600090813560e01c908163025dc30b146121ef575080633f16547e14611989578063411628d914611315578063530cd30d1461070f578063664653ac1461015d5780639cc6ef14146100c95763e985e9c50361000f57346100c65760403660031901126100c65761008c6126f6565b604061009661270c565b926001600160a01b03809316815280602052209116600052602052602060ff604060002054166040519015158152f35b80fd5b506101403660031901126100c6576004356001600160a01b038082168203610159576100f361270c565b9060643561ffff811681036101555760e43567ffffffffffffffff81116101515761012290369060040161280a565b906101043592831683036101515761014e94610124359460c4359260a435926084359260443591613258565b80f35b8580fd5b8480fd5b8280fd5b5060e03660031901126100c6576004356001600160a01b038082168092036101595761018761270c565b906044359080821682036103bb5761019d612722565b916101a6612740565b918681604051966377607a1760e11b8852169460209485886004818a5afa9788156107045783986106d1575b5060405163de40657760e01b81529086826004818d5afa9182156105d25784926106a2575b50604051630cf35bdd60e41b8152600481018a9052918516986080836024818d5afa801561061c578a938691610670575b5060405190638eb22cdd60e01b978883528360048401528a836064818135998a60248301528c60448301525afa968715610665578b93899861062e575b50908692916104fb575b505092505050610474575b50505060843580610291575b8761014e8787613549565b604080516314890dcb60e21b81526001600160a01b0385166004820181905260248201526044810183905290816064818c8a5af1801561043b57610446575b5060405163226f120560e11b815284816004818b5afa90811561043b57899161040e575b50604051928352600483015260248201528660448201528281606481885afa801561040357839188916103d2575b5061037092610331878961348a565b604051630cb0f5b760e31b81526001600160a01b0390911660048201819052602482015260006044820152606481019190915291829081906084820190565b038189895af180156103c757610399575b50506103908261014e94613549565b38808080610286565b813d83116103c0575b6103ac8183612795565b810103126103bb573880610381565b600080fd5b503d6103a2565b6040513d88823e3d90fd5b82819392503d83116103fc575b6103e98183612795565b810103126103bb57518290610370610322565b503d6103df565b6040513d89823e3d90fd5b90508481813d8311610434575b6104258183612795565b810103126103bb5751386102f4565b503d61041b565b6040513d8b823e3d90fd5b6104679060403d60401161046d575b61045f8183612795565b8101906128a1565b506102d0565b503d610455565b61047e888861348a565b863b15610159576040516374d2492960e11b81523060048201526001600160a01b03861660248201526000604482015260648101919091526084810191909152818160a481838a5af180156104f0576104d8575b8061027a565b6104e19061274f565b6104ec5786386104d2565b8680fd5b6040513d84823e3d90fd5b826105189161054c976000146106275733935b1692309084612a09565b8c8860405180978195829463095ea7b360e01b845260048401602090939291936001600160a01b0360408201951681520152565b03925af191821561061c5784926105dd575b5060408051634d4d7cbd60e11b815260048101929092523060248301819052604483015260006064830152608482019290925290818060a481015b0381878d5af180156105d2576105b4575b808783828061026f565b6105cc9060403d60401161046d5761045f8183612795565b506105aa565b6040513d86823e3d90fd5b91508782813d8311610615575b6105f48183612795565b81010312610155578360409161060c61059994612894565b5091509161055e565b503d6105ea565b6040513d87823e3d90fd5b8c9361050e565b92985096509181813d831161065e575b6106488183612795565b810103126103bb57518d9690958a929086610265565b503d61063e565b6040513d8a823e3d90fd5b610691915060803d811161069b575b6106898183612795565b81019061285b565b5050905038610228565b503d61067f565b6106c3919250873d89116106ca575b6106bb8183612795565b810190612828565b90386101f7565b503d6106b1565b86809299508194503d83116106fd575b6106eb8183612795565b810103126103bb5788915196386101d2565b503d6106e1565b6040513d85823e3d90fd5b5060031960a036820112610984576107256126f6565b9060603660231901126101595767ffffffffffffffff60843511610159576101c09060843536030112610984576064356001600160a01b03811681036103bb576001600160a01b036107756129a4565b60405163de40657760e01b8152911692602082600481875afa91821561061c5785926112f4575b506107ab60c460843501612928565b610e7a575b846107bf608435600401612928565b610c26575b6107e16107dc61018460843501608435600401612c64565b612928565b1580610c12575b61098f575b506107fb6084803501612928565b610817575b8461014e846001600160a01b038086169116613549565b6101a460843501906108316107dc83608435600401612c64565b156109885730945b8660a46084350135966001600160a01b0387163b156109845760405163cce19f8160e01b81526001600160a01b038086166004830152909116602482015260448101889052818180606481010381836001600160a01b038c165af180156104f057610966575b50509161014e956001600160a01b03949285946108c46107dc85608435600401612c64565b6108d4575b505050509150610800565b6109538692610945866108fa60406108f461095d9a608435600401612c64565b01612928565b9061093161092761091b606061091585608435600401612c64565b01612935565b92608435600401612c64565b6080810190612944565b929091604051988996169160208701612c79565b03601f198101845283612795565b8585169130613344565b388080806108c9565b6109759095939594929461274f565b6104ec5791863894929461089f565b5080fd5b8094610839565b6109ab6001600160a01b0384166001600160a01b03861661348a565b60405163cd0211eb60e01b81523060048201526001600160a01b038316602482015260006044820152608480356064908101359083015260209082908190810103818a6001600160a01b038a165af1908115610403578791610be0575b50818110610a17575b506107ed565b60405163226f120560e11b8152916020836004816001600160a01b038a165afa928315610665578893610bac575b5060405163226f120560e11b8152916020836004816001600160a01b038b165afa92831561043b578993610b78575b508103908111610b64579087929160405191638eb22cdd60e01b8352600483015260248201528260448201526020816064816001600160a01b0389165afa908115610704578391610b2f575b506001600160a01b0385163b156101595760405191630208d92960e11b83523060048401526001600160a01b0385166024840152604483015260648201528181608481836001600160a01b0389165af180156104f05715610a1157610b249061274f565b610155578438610a11565b9250506020823d602011610b5c575b81610b4b60209383612795565b810103126103bb5786915138610ac0565b3d9150610b3e565b634e487b7160e01b88526011600452602488fd5b9092506020813d602011610ba4575b81610b9460209383612795565b810103126103bb57519138610a74565b3d9150610b87565b9092506020813d602011610bd8575b81610bc860209383612795565b810103126103bb57519138610a45565b3d9150610bbb565b90506020813d602011610c0a575b81610bfb60209383612795565b810103126103bb575138610a08565b3d9150610bee565b50610c21604460843501612928565b6107e8565b5060405163226f120560e11b8152602081600481885afa9081156103c7578691610e48575b5060246084350135906040519063442c159960e01b825260048201528160248201528660448201526020816064816001600160a01b0388165afa908115610403578791610e15575b506020610cfa9192610cb36107dc61018460843501608435600401612c64565b8015610e01575b15610dfb57305b60405163f4d9375360e01b81526001600160a01b0380881660048301529091166024820152604481019190915291829081906064820190565b03818a8a5af1908115610403578791610dc9575b50610d276107dc61018460843501608435600401612c64565b610d32575b506107c4565b610dc390610d5060406108f461018460843501608435600401612c64565b610db1610d6d606061091561018460843501608435600401612c64565b610da3610d8861092761018460843501608435600401612c64565b906040519586946001600160a01b038c169160208701612c79565b03601f198101835282612795565b876001600160a01b0387169130613344565b38610d2c565b90506020813d602011610df3575b81610de460209383612795565b810103126103bb575138610d0e565b3d9150610dd7565b84610cc1565b50610e10604460843501612928565b610cba565b90506020813d602011610e40575b81610e3060209383612795565b810103126103bb57516020610c93565b3d9150610e23565b90506020813d602011610e72575b81610e6360209383612795565b810103126103bb575138610c4b565b3d9150610e56565b6101046084350135156112af57600460206001600160a01b03610ea160e4608435016129ba565b1660405192838092635ad7038760e01b82525afa9081156103c7578691611275575b5060405163682ee63560e11b815260843561010401356004820152906080826024816001600160a01b0385165afa9182156104035787926111f9575b506040516331a9108f60e11b8152608435610104013560048201526020816024816001600160a01b0386165afa80156106655788906111b5575b6001600160a01b03915016916001600160a01b0384168314809381156111ab575b501561115a5787926110ec575b6001600160a01b03610f7d60e4608435016129ba565b16803b156110e8578380916024604051809481936378dc905960e01b8352610104608435013560048401525af19081156105d25784916110d4575b5050610fc961012460843501612928565b61103a57506001600160a01b0381163b1561098457816040518092635c46a7ef60e11b825281836001600160a01b038261100f61010460843501358b30600485016129ce565b0393165af180156104f057611026575b50506107b0565b61102f9061274f565b61015557843861101f565b6001600160a01b03925060209150606460408461105c610144608435016129ba565b16920151896110696129a4565b9360405196879586946330dce68f60e11b865260048601521660248401526001600160a01b03881660448401525af180156103c7576110a9575b506107b0565b602090813d83116110cd575b6110bf8183612795565b810103126103bb57386110a3565b503d6110b5565b6110dd9061274f565b610159578238610fb8565b8380fd5b6001600160a01b0382163b1561015957604051635c46a7ef60e11b81528381806111226084356101040135308a600485016129ce565b0381836001600160a01b0388165af19081156105d2578491611146575b5050610f67565b61114f9061274f565b61015957823861113f565b60405162461bcd60e51b8152602060048201526024808201527f4d61676e657461723a206f544150546f6b656e4944206f776e6572206d69736d6044820152630c2e8c6d60e31b6064820152608490fd5b9050301438610f5a565b506020813d6020116111f1575b816111cf60209383612795565b810103126111ed576111e86001600160a01b0391612847565b610f39565b8780fd5b3d91506111c2565b8091925060803d811161126e575b6112118183612795565b810103608081126111ed5760609061122883612847565b50601f1901126104ec5760606040519161124183612779565b61124d60208201612c47565b835261125b60408201612c47565b6020840152015160408201529038610eff565b503d611207565b90506020813d6020116112a7575b8161129060209383612795565b81010312610151576112a190612847565b38610ec3565b3d9150611283565b60405162461bcd60e51b815260206004820152601760248201527f4d61676e657461723a206f544150546f6b656e494420300000000000000000006044820152606490fd5b61130e91925060203d6020116106ca576106bb8183612795565b903861079c565b506101003660031901126100c65761132b6126f6565b61133361270c565b61133b612731565b611343612722565b9161134c612740565b8560e43567ffffffffffffffff81116109845761136d90369060040161280a565b936040519563de40657760e01b87526020876004816001600160a01b038c165afa968715610704578397611968575b506040516377607a1760e11b81526020816004816001600160a01b038d165afa9081156105d2578491611933575b50604051630cf35bdd60e41b815260048101829052926080846024816001600160a01b038d165afa90811561061c576001600160a01b0394869261190f575b5060208a606460405180988193638eb22cdd60e01b835288600484015260443560248401528b6044840152165afa9485156103c75786956118d2575b50908592918461177e575b505050506044356116cc575b5050506064359081611480575b8661014e876001600160a01b038089169116613549565b80156116c2578160403080955b82516314890dcb60e21b81526001600160a01b03918216600482015291166024820152604481019290925281806064810103818b6001600160a01b038c165af18015610665576116a4575b506114e4575b80611469565b825115611655578251830190608084602084019303126103bb5761150a60208501612894565b93604081015161ffff811681036103bb5760608201519160808101519067ffffffffffffffff82116103bb57019084603f830112156103bb57602082015191611552836127b7565b956115606040519788612795565b838752604084830101116103bb576001600160a01b0392611588916040602089019101612bff565b341561164e5734965b60208a60046040518096819363226f120560e11b8352165afa92831561164257600093611607575b50936001600160a01b03979388979361014e9b9a97936115f1976000906000146115ff5750905b86156115f85733955b8a8a16612cba565b92936114de565b30956115e9565b9050906115e0565b90926020823d60201161163a575b8161162260209383612795565b810103126100c6575051916001600160a01b036115b9565b3d9150611615565b6040513d6000823e3d90fd5b4796611591565b60405162461bcd60e51b815260206004820152602160248201527f4d61676e6574617256323a2077697468647261774461746120697320656d70746044820152607960f81b6064820152608490fd5b6116bc9060403d60401161046d5761045f8183612795565b506114d8565b816040848061148d565b6116e86001600160a01b0388166001600160a01b038a1661348a565b1561177857305b6001600160a01b0388163b15610159576040516374d2492960e11b81526001600160a01b03918216600482015290851660248201526000604480830191909152356064820152608481019190915281818060a481010381836001600160a01b038c165af180156104f057611764575b8061145c565b61176d9061274f565b61015157853861175e565b836116ef565b602091816117e092156118c4575b156118b2576117ad6001600160a01b0333925b169160443590309084612a09565b60405163095ea7b360e01b81526001600160a01b038d166004820152604480356024830152909586938492839190820190565b03925af191821561061c57849261186e575b5060408051634d4d7cbd60e11b815260048101929092523060248301819052604483015260006064830152608482019290925290818060a481015b0381876001600160a01b038d165af180156105d257611850575b80808592611450565b6118689060403d60401161046d5761045f8183612795565b50611847565b91506020823d6020116118aa575b8161188960209383612795565b8101031261015557836040916118a161182d94612894565b509150916117f2565b3d915061187c565b6117ad6001600160a01b038b9261179f565b6118cd8b6128b7565b61178c565b929195509293506020823d602011611907575b816118f260209383612795565b810103126103bb5790518a9490939285611445565b3d91506118e5565b61192891925060803d811161069b576106898183612795565b505090509038611409565b9350506020833d602011611960575b8161194f60209383612795565b810103126103bb57889251386113ca565b3d9150611942565b61198291975060203d6020116106ca576106bb8183612795565b953861139c565b506101603660031901126100c65761199f6126f6565b906119a861270c565b60443560643580151581036103bb576119bf612731565b9260803660a3190112610155576040366101231901126101555760405163226f120560e11b81526001600160a01b0396871693602091908282600481895afa9182156106655788926121c0575b5060405163de40657760e01b815283816004818a5afa90811561043b57908a918a916121a3575b50604051630cf35bdd60e41b81526004810185905291169760249660808389818d5afa928315612198579086858a8d8f99989796958a9761216f575b50906064916040519a8b948593638eb22cdd60e01b85528c600486015284015260448301525afa95861561216457918c8e928997969594829961212e575b50611ff3575b505050505050611b0491611ac7888861348a565b604051630cb0f5b760e31b81523060048201526001600160a01b038616602482015260006044820152606481019190915291829081906084820190565b03818a895af1908115610403578791611fc6575b5060a43580151581036103bb57611b35575b8661014e8787613549565b908391606089611b43612977565b1660405196878092633873b0cd60e01b82528a60048301525afa948515610665578895611f93575b50611b7881308689612a09565b60405163095ea7b360e01b8082526001600160a01b038916600483015260248201839052959083816044818d8c5af18015611f8857611f47575b5060408051634d4d7cbd60e11b815260048101929092523060248301819052604483015260648201929092526000608482015290818060a481015b03818b8b5af1801561066557611f29575b50611c1086611c0b612977565b61348a565b611c18612918565b15611f225730905b88611c29612977565b169160e435906fffffffffffffffffffffffffffffffff938483168093036103bb57610104359485168095036103bb578b9484936040519d8e946362e8f3db60e11b86521660048501528a8885015260448401526064830152818b5a92608493f1988915610665578899611ef3575b50611caa87611ca5612977565b613549565b611cb2612918565b611cbd575b50611b2a565b8896959615611eb057879882611cd599979899612977565b1693611cdf61298d565b94803b15611eac576040518881526001600160a01b039690961660048701526024860183905288908690604490829084905af1948515610665578895611e92575b5090829184611d2d61298d565b1691604051968793849263422e498360e11b845260048401525af19283156103c7578693611e60575b5060048183611d6361298d565b1660405192838092635ad7038760e01b82525afa918215610403578792611e2a575b50501692833b156101555760405190815230600482015260248101829052848160448183885af190811561061c578591611e16575b5050823b156110e857611de792849283604051809681958294635c46a7ef60e11b845230600485016129ce565b03925af180156104f057611e02575b80808080969496611cb7565b611e0b9061274f565b610159578238611df6565b611e1f9061274f565b6110e8578338611dba565b90809250813d8311611e59575b611e418183612795565b8101031261015157611e5290612847565b3880611d85565b503d611e37565b809650818094503d8311611e8b575b611e798183612795565b810103126103bb578794519138611d56565b503d611e6f565b611e9f909591929561274f565b6104ec5792869338611d20565b8880fd5b6064906017846040519262461bcd60e51b845260048401528201527f4d61676e657461723a20744f4c50546f6b656e496420300000000000000000006044820152fd5b9080995081813d8311611f1b575b611f0b8183612795565b810103126103bb57519738611c98565b503d611f01565b8290611c20565b611f419060403d60401161046d5761045f8183612795565b50611bfe565b8381813d8311611f81575b611f5c8183612795565b81010312611f7d5791604091611f74611bed94612894565b50915091611bb2565b8980fd5b503d611f52565b6040513d8c823e3d90fd5b9094506060813d8211611fbe575b81611fae60609383612795565b810103126111ed57519338611b6b565b3d9150611fa1565b90508181813d8311611fec575b611fdd8183612795565b810103126103bb575138611b18565b503d611fd3565b938093928261204e97989661201a9415612120575b50156121195733931692309084612a09565b8a8c60405180968195829463095ea7b360e01b845260048401602090939291936001600160a01b0360408201951681520152565b03925af1801561043b579083916120da575b5060408051634d4d7cbd60e11b8152600481019390935230602484018190526044840152600060648401526084830191909152818060a481015b03818b8b5af1801561066557918391611b04936120bc575b81938b828c611ab3565b6120d49060403d60401161046d5761045f8183612795565b506120b2565b90508381813d8311612112575b6120f18183612795565b81010312611eac578261209a92612109604093612894565b50925090612060565b503d6120e7565b8a9361050e565b6121298d6128b7565b612008565b93509750509481813d831161215d575b6121488183612795565b810103126103bb5786948c8e92519738611aad565b503d61213e565b6040513d8e823e3d90fd5b60649291975061218c9060803d811161069b576106898183612795565b50509050969091611a6f565b6040513d8d823e3d90fd5b6121ba9150853d87116106ca576106bb8183612795565b38611a33565b9091508281813d83116121e8575b6121d88183612795565b810103126103bb57519038611a0c565b503d6121ce565b600319915060e036830112610159576122066126f6565b9161220f61270c565b612217612722565b9360c4359267ffffffffffffffff84116104ec5760a09084360301126101515763de40657760e01b84526001600160a01b0393848216916020968783600481875afa92831561043b5789936126d7575b5060405163226f120560e11b81528881600481885afa908115611f88578a916126aa575b50604051630cf35bdd60e41b81526004810182905293881693608081602481885afa908115612198578b91612688575b5060443590811515938461257d575b5050505060643590816124d8575b50505060843590816122e8578780f35b84600401946122f686612928565b156124d15730955b604051946377607a1760e11b8087528a87600481855afa968715612164578c976124a2575b5060405196638eb22cdd60e01b885260048801528560248801528b60448801528a87606481885afa968715612164578c97612473575b50813b1561246f5760405163cce19f8160e01b81526001600160a01b0389811660048301528a166024820152604481018890528c8160648183875af1801561246457612451575b506123aa83612928565b6123b7575b505050508780f35b8a9060046040518094819382525afa998a15612198578b9a61241d575b5050976123f461240d9960846123ec60648601612935565b940190612944565b979098612405479a309a36916127d3565b971693613258565b38808080808080808080806123af565b90809a50813d831161244a575b6124348183612795565b810103126103bb576123f461240d9951996123d4565b503d61242a565b61245d909c919c61274f565b9a386123a0565b6040513d8f823e3d90fd5b8b80fd5b9096508a81813d831161249b575b61248b8183612795565b8101031261246f57519538612359565b503d612481565b9096508a81813d83116124ca575b6124ba8183612795565b8101031261246f57519538612323565b503d6124b0565b84956122fe565b6124e2848461348a565b15612575578785305b60405163cd0211eb60e01b81526001600160a01b03918216600482015291166024820152600060448201526064810192909252816084818c885af1801561043b5783918991612548575b505061254091613549565b3880806122d8565b908092503d831161256e575b61255e8183612795565b810103126111ed57818738612535565b503d612554565b8785806124eb565b1561267c57891661259082303384612a09565b60405163095ea7b360e01b81526001600160a01b038716600482015260248101839052908b908290818f816044810103925af180156121645761263f575b5060408051634d4d7cbd60e11b8152600481019390935230602484018190526044840152606483019190915260006084830152818060a481015b03818d885af18015611f8857612621575b8080806122ca565b6126399060403d60401161046d5761045f8183612795565b50612619565b908a82813d8311612675575b6126558183612795565b8101031261246f576126089261266c604093612894565b509250906125ce565b503d61264b565b612590828b8a9361050e565b6126a0915060803d811161069b576106898183612795565b50509050386122bb565b90508881813d83116126d0575b6126c18183612795565b81010312611f7d57513861228b565b503d6126b7565b6126ef919350883d8a116106ca576106bb8183612795565b9138612267565b600435906001600160a01b03821682036103bb57565b602435906001600160a01b03821682036103bb57565b60a4359081151582036103bb57565b6084359081151582036103bb57565b60c4359081151582036103bb57565b67ffffffffffffffff811161276357604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761276357604052565b90601f8019910116810190811067ffffffffffffffff82111761276357604052565b67ffffffffffffffff811161276357601f01601f191660200190565b9291926127df826127b7565b916127ed6040519384612795565b8294818452818301116103bb578281602093846000960137010152565b9080601f830112156103bb57816020612825933591016127d3565b90565b908160209103126103bb57516001600160a01b03811681036103bb5790565b51906001600160a01b03821682036103bb57565b91908260809103126103bb57815160058110156103bb579161287f60208201612847565b91606061288e60408401612847565b92015190565b519081151582036103bb57565b91908260409103126103bb576020825192015190565b6001600160a01b03339116036128c957565b60405162461bcd60e51b815260206004820152602160248201527f4d61676e6574617256323a206f70657261746f72206e6f7420617070726f76656044820152601960fa1b6064820152608490fd5b6101243580151581036103bb5790565b3580151581036103bb5790565b3561ffff811681036103bb5790565b903590601e19813603018212156103bb570180359067ffffffffffffffff82116103bb576020019181360383136103bb57565b60c4356001600160a01b03811681036103bb5790565b610144356001600160a01b03811681036103bb5790565b6044356001600160a01b03811681036103bb5790565b356001600160a01b03811681036103bb5790565b919060c093916001600160a01b0380921684521660208301526040820152608060608201526002608082015261060f60f31b60a08201520190565b604080516323b872dd60e01b60208083019182526001600160a01b03958616602484015295851660448301526064808301979097529581529394909390929091612a54608484612795565b168351908482019282841067ffffffffffffffff85111761276357612ad49386528683527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487840152600080958192519082855af13d15612b5e573d91612aba836127b7565b92612ac788519485612795565b83523d868985013e612b62565b90815180612ae4575b5050505050565b828591810103126100c6575082612afb9101612894565b15612b0857808080612add565b60849250519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b6060915b91929015612bc45750815115612b76575090565b3b15612b7f5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015612bd75750805190602001fd5b60405162461bcd60e51b815260206004820152908190612bfb906024830190612c22565b0390fd5b60005b838110612c125750506000910152565b8181015183820152602001612c02565b90602091612c3b81518092818552858086019101612bff565b601f01601f1916010190565b51906fffffffffffffffffffffffffffffffff821682036103bb57565b903590609e19813603018212156103bb570190565b93909261ffff86949360a0979415158752166020860152604085015260806060850152816080850152848401376000828201840152601f01601f1916010190565b959791939261ffff16908115612f41576001600160a01b03809716976040988951630cf35bdd60e41b8152876004820152608081602481855afa908115612f3657908a91600091612f14575b508b516301ffc9a760e01b815263843c6ae360e01b6004820152911697602094909185816024818d5afa9081612ee0575b50612d4b5750505050505050505050505050565b8b516311a5cc7760e31b815260048101929092526001600160a01b031660248201523060448201526064810189905260006084820181905290918b91839160a49183915af18015612eb157612ec4575b503415612ebc57985b8851633b58a71760e21b815282816004818a5afa908115612eb157600091612e7c575b5015612e7357905b8789519a612ddc8c612779565b168a5289019060008252888a01908152853b156103bb5787612e4b926000998b519c8d9a8b998a9863695ef6bf60e01b8a523060048b015260248a01526044890152606488015260a06084880152511660a4860152511660c484015251606060e4840152610104830190612c22565b03925af1908115612e695750612e5e5750565b612e679061274f565b565b513d6000823e3d90fd5b50606090612dcf565b908382813d8311612eaa575b612e928183612795565b810103126100c65750612ea490612894565b38612dc7565b503d612e88565b8a513d6000823e3d90fd5b503098612da4565b612eda908a3d8c1161046d5761045f8183612795565b50612d9b565b8681813d8311612f0d575b612ef58183612795565b810103126103bb57612f0690612894565b5038612d37565b503d612eeb565b612f2c915060803d811161069b576106898183612795565b5050905038612d06565b8b513d6000823e3d90fd5b95905060a4949750604080975060009392505197889687956311a5cc7760e31b875260048701526001600160a01b03938480921660248801521660448601526064850152826084850152165af1801561164257612f9b5750565b612fb29060403d811161046d5761045f8183612795565b5050565b9791939261ffff9096959196169081156131ff57506001600160a01b03809816966040978851630cf35bdd60e41b8152866004820152608081602481855afa908115612eb157908b916000916131dd575b5016958951986301ffc9a760e01b8a5263843c6ae360e01b60048b01526020998a816024818c5afa90816131a9575b5061304957505050505050505050505050565b60a48b9260008e95855196879586946311a5cc7760e31b865260048601521660248401523060448401528160648401528160848401525af1801561317a5761318d575b50341561318557945b8751633b58a71760e21b81528781600481895afa90811561317a57600091613145575b501561313c57955b888851966130cd88612779565b168652850160008152878601968752843b156103bb5760009689612e4b928a519b8c998a98899763695ef6bf60e01b89523060048a0152602489015260448801528b606488015260a06084880152511660a4860152511660c484015251606060e4840152610104830190612c22565b506060956130c0565b908882813d8311613173575b61315b8183612795565b810103126100c6575061316d90612894565b386130b8565b503d613151565b89513d6000823e3d90fd5b503094613095565b6131a390893d8b1161046d5761045f8183612795565b5061308c565b8b81813d83116131d6575b6131be8183612795565b810103126103bb576131cf90612894565b5038613036565b503d6131b4565b6131f5915060803d811161069b576106898183612795565b5050905038613007565b979050604080975060a4955060009392505197889687956311a5cc7760e31b875260048701526001600160a01b03938480921660248801521660448601528360648601526084850152165af1801561164257612f9b5750565b9698949591949261ffff169182156132ea57506001600160a01b03809716976040988951630cf35bdd60e41b8152876004820152608081602481855afa908115612f3657908a91600091612f1457508b516301ffc9a760e01b815263843c6ae360e01b6004820152911697602094909185816024818d5afa9081612ee05750612d4b5750505050505050505050505050565b9096915060a4959850604080985060009493505198899788966311a5cc7760e31b885260048801526001600160a01b039485809216602489015216604487015260648601526084850152165af1801561164257612f9b5750565b94939291928151156116555781518201916020966080828986019503126103bb57613370888301612894565b97604090818401519061ffff821682036103bb5760608501519460808101519067ffffffffffffffff82116103bb57019087603f830112156103bb5780820151916133ba836127b7565b986133c786519a8b612795565b838a528584830101116103bb576001600160a01b03926133ec9186848c019101612bff565b34156134825780349a5b60048651809581936377607a1760e11b8352165afa938415612e69575060009361344b575b5050612e6798996000906000146134435750915b871561343c573396612fb6565b3096612fb6565b90509161342f565b81819c949c3d831161347b575b6134628183612795565b810103126134775751919950612e673861341b565b8a80fd5b503d613458565b80479a6133f6565b60405163e985e9c560e01b81523060048201526001600160a01b0382811660248301529283169290602081604481875afa90811561164257600091613510575b50156134d557505050565b823b156103bb57604460009283604051958694859363a22cb46560e01b8552166004840152600160248401525af1801561164257612e5e5750565b906020823d8211613541575b8161352960209383612795565b810103126100c6575061353b90612894565b386134ca565b3d915061351c565b60405163e985e9c560e01b81523060048201526001600160a01b0382811660248301529283169290602081604481875afa908115611642576000916135cd575b5061359357505050565b823b156103bb57604460009283604051958694859363a22cb46560e01b85521660048401528160248401525af1801561164257612e5e5750565b906020823d82116135fe575b816135e660209383612795565b810103126100c657506135f890612894565b38613589565b3d91506135d956fea2646970667358221220d4fefcba38afa989b13b10ca1b433faa5b4392cd12e9fe2985867a1ed87037e164736f6c63430008120033";

type MagnetarMarketModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MagnetarMarketModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MagnetarMarketModule__factory extends ContractFactory {
  constructor(...args: MagnetarMarketModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MagnetarMarketModule";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MagnetarMarketModule> {
    return super.deploy(overrides || {}) as Promise<MagnetarMarketModule>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MagnetarMarketModule {
    return super.attach(address) as MagnetarMarketModule;
  }
  override connect(signer: Signer): MagnetarMarketModule__factory {
    return super.connect(signer) as MagnetarMarketModule__factory;
  }
  static readonly contractName: "MagnetarMarketModule";

  public readonly contractName: "MagnetarMarketModule";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MagnetarMarketModuleInterface {
    return new utils.Interface(_abi) as MagnetarMarketModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MagnetarMarketModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MagnetarMarketModule;
  }
}
