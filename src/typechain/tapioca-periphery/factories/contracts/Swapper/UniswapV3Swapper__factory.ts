/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  UniswapV3Swapper,
  UniswapV3SwapperInterface,
} from "../../../contracts/Swapper/UniswapV3Swapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "contract ISwapRouter",
        name: "_swapRouter",
        type: "address",
      },
      {
        internalType: "contract IUniswapV3Factory",
        name: "_factory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_old",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_new",
        type: "uint256",
      },
    ],
    name: "PoolFee",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawFromYb",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "depositToYb",
        type: "bool",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenInId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenOutId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawFromYb",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "depositToYb",
        type: "bool",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDefaultDexOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getInputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getOutputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint24",
        name: "_newFee",
        type: "uint24",
      },
    ],
    name: "setPoolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0346200019357601f620026b338819003918201601f191683019291906001600160401b0384118385101762000198578160609284926040968752833981010312620001935780516001600160a01b0391908281168082036200019357602083015192848416908185036200019357860151948086169283870362000193576000543360018060a01b03198216176000558851923391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360018055610bb862ffffff1960025416176002551562000184575015620001735715620001625760805260a05260c052516125049081620001af82396080518181816102680152818161048401528181610718015281816107c201528181610867015281816108bf0152818161097e015261100e015260a05181818161029e015281816104200152610dcf015260c051818181610a0001528181610d8b01526110930152f35b835163d23f952160e01b8152600490fd5b845163d23f952160e01b8152600490fd5b63d23f952160e01b8152600490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b60003560e01c908163089fe6aa1461137a575080631a1632101461134a5780633fa2ef5e146112b75780635bf66e4814610ffc578063715018a614610f9657806373dd250c14610f2b5780637b2a8bd214610e1a5780638da5cb5b14610df3578063c31c9c0714610daf578063c45a015514610d6b578063e3c711a014610969578063efa84c6d1461017c5763f2fde38b146100ae57600080fd5b34610177576020366003190112610177576100c76113da565b6100cf6114da565b6001600160a01b0380911690811561012357600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b600080fd5b346101775736600319016101a081126101775761014013610177576001600160a01b0361016435166101643503610177576101843567ffffffffffffffff811161017757366023820112156101775780600401356101d9816114be565b916101e7604051938461149c565b8183523660248383010111610177578160009260246020930183860137830101528060006004356001600160a01b038116808203610177571580159061094d575b1561084157916044356001600160a01b038116810361017757935b60006084358015801581610836575b156106be575061028c91505b60a43590602435877f0000000000000000000000000000000000000000000000000000000000000000611981565b60405163095ea7b360e01b60208201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660248201526044810182905290929060009081906102f181606481015b03601f19810183528261149c565b60208151910182895af1610303611939565b8161068f575b5015610665575115610657575b602081805181010312610177576020015162ffffff6002541693610338611913565b1561064e57305b604051958661010081011067ffffffffffffffff61010089011117610638576001600160a01b038093610100890160405216875282881660208801526040870152166060850152608084015260a08301526101443560c0830152600060e08301526001600160a01b0360e06040519363414bf389821b855282815116600486015282602082015116602486015262ffffff60408201511660448601528260608201511660648601526080810151608486015260a081015160a486015260c081015160c486015201511660e48301526020826101048160006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af191821561057357600092610604575b5061045a611913565b61046f575b6040809350519182526020820152f35b5060405163095ea7b360e01b602082019081527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660248301819052604483018490529360009283929083906104d081606481016102e3565b51925af16104dc611939565b816105d5575b501561057f57604060009260a4825180958193634d4d7cbd60e11b835260643560048401523060248401526001600160a01b03610164351660448401528660648401528160848401525af1801561057357604092600091610544575b5061045f565b6105649150833d851161056c575b61055c818361149c565b810190611923565b90508361053e565b503d610552565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152602860248201527f42617365537761707065723a3a73616665417070726f76653a20617070726f76604482015267194819985a5b195960c21b6064820152608490fd5b80518015925082156105ea575b5050836104e2565b6105fd9250602080918301019101611969565b83806105e2565b9091506020813d602011610630575b816106206020938361149c565b8101031261017757519083610451565b3d9150610613565b634e487b7160e01b600052604160045260246000fd5b6101643561033f565b506106606115d7565b610316565b60405162461bcd60e51b8152602060048201526002602482015261534160f01b6044820152606490fd5b80518015925082156106a4575b505087610309565b6106b79250602080918301019101611969565b878061069c565b906024359182610786575b505050606435806106df575b5061028c9061025e565b60c43561077c576040519063442c159960e01b8252600482015260e4356024820152600060448201526020816064816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa801561057357610751575b5061028c905b906106d5565b602090813d8311610775575b610767818361149c565b810103126101775786610745565b503d61075d565b5061028c9061074b565b919250901561082f57506040519063442c159960e01b8252600482015260a4356024820152600060448201526020816064816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610573576000916107fd575b505b8680806106c9565b90506020813d602011610827575b816108186020938361149c565b810103126101775751866107f3565b3d915061080b565b90506107f5565b5060c4351515610252565b50604051630cf35bdd60e41b815260243560048201526080816024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156105735760009161092a575b5091604051630cf35bdd60e41b815260643560048201526080816024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610573576000916108f7575b5093610243565b610919915060803d608011610923575b610911818361149c565b81019061163a565b50509050856108f0565b503d610907565b610943915060803d60801161092357610911818361149c565b5050905084610898565b506044356001600160a01b038116809103610177571515610228565b34610177576109c061097a3661140e565b50507f00000000000000000000000000000000000000000000000000000000000000006109a78183611673565b9390916020936060810135906080868201359101611767565b600254604051630b4c774160e11b81526001600160a01b038581166004830152878116602483015262ffffff9092166044820152919592509084816064817f000000000000000000000000000000000000000000000000000000000000000086165afa90811561057357600091610d36575b508160405191610a4183611464565b600283528683016040368237603c610a5885611bda565b526000610a6485611bfd565b5260405192839163883bdbfd60e01b8352602495868401908b60048601525180915260448401919060005b8c828210610d165750505050600093918380920392165afa90811561057357600090600092610c0c575b50610acd610ac682611bfd565b5191611bda565b5160060b9060060b0390667fffffffffffff8213667fffffffffffff19831217610bf75783610b0781610aff84611bfd565b511692611bda565b51169003928311610be25760060b916000603c840560020b93600081129081610bce575b50610ba5575b80610b925750851b77ffffffffffffffffffffffffffffffffffffffff000000001615610b7e57506fffffffffffffffffffffffffffffffff610b7694951690611c20565b604051908152f35b634e487b7160e01b60009081526012600452fd5b634e487b7160e01b815260116004529050fd5b92627fffff198114610bbb576000190192610b31565b634e487b7160e01b845260116004528284fd5b915050603c6000910760060b151589610b2b565b50634e487b7160e01b60009081526011600452fd5b82634e487b7160e01b60005260116004526000fd5b9150503d806000833e610c1f818361149c565b81019060408183031261017757805167ffffffffffffffff908181116101775782019183601f8401121561017757825192610c5984611bc2565b93610c67604051958661149c565b8085528a8086019160051b83010191868311610177578b01905b828210610cfd575050508881015191821161017757019180601f84011215610177578251610cae81611bc2565b93610cbc604051958661149c565b818552898086019260051b820101928311610177578901905b828210610ce55750505088610ab9565b81518781168103610177578152908901908901610cd5565b81518060060b8103610177578152908b01908b01610c81565b835163ffffffff1685528896508a95509384019390920191600101610a8f565b90508481813d8311610d64575b610d4d818361149c565b8101031261017757610d5e90611612565b86610a32565b503d610d43565b346101775760003660031901126101775760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101775760003660031901126101775760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101775760003660031901126101775760206001600160a01b0360005416604051908152f35b346101775760c036600319011261017757610f27610e366113f0565b610e3e6113ff565b90610e47611592565b50610e50611592565b91610e59611532565b9060443582526064356020830152610e6f611532565b90600082526000604083015260043560208301526024356060830152610e93611568565b9315158452151560208401528352602083015260408201526040519182918291909161012060206040610140840195606081516001600160a01b03808251168852858201518689015284820151168488015201516060860152606083820151805160808801528481015160a08801528381015160c0880152015160e086015201518051151561010085015201511515910152565b0390f35b346101775760203660031901126101775760043562ffffff80821680920361017757610f556114da565b7f2bff118b9b9e3deb4fc5204e6ba828351c954685d0b119d0e21add79f878339960406002549281519084168152846020820152a162ffffff191617600255005b3461017757600036600319011261017757610faf6114da565b6000805473ffffffffffffffffffffffffffffffffffffffff19811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101775761100a3661140e565b50507f00000000000000000000000000000000000000000000000000000000000000009061105461103b8383611673565b9190936020936060810135906080868201359101611767565b50600254604051630b4c774160e11b81526001600160a01b038681166004830152848116602483015262ffffff909216604482015291949184816064817f000000000000000000000000000000000000000000000000000000000000000086165afa90811561057357600091611282575b5081604051916110d483611464565b600283528683016040368237603c6110eb85611bda565b5260006110f785611bfd565b5260405192839163883bdbfd60e01b8352602495868401908b60048601525180915260448401919060005b8c8282106112625750505050600093918380920392165afa908115610573576000906000926111585750610acd610ac682611bfd565b9150503d806000833e61116b818361149c565b81019060408183031261017757805167ffffffffffffffff908181116101775782019183601f84011215610177578251926111a584611bc2565b936111b3604051958661149c565b8085528a8086019160051b83010191868311610177578b01905b828210611249575050508881015191821161017757019180601f840112156101775782516111fa81611bc2565b93611208604051958661149c565b818552898086019260051b820101928311610177578901905b8282106112315750505088610ab9565b81518781168103610177578152908901908901611221565b81518060060b8103610177578152908b01908b016111cd565b835163ffffffff1685528896508a95509384019390920191600101611122565b90508481813d83116112b0575b611299818361149c565b81010312610177576112aa90611612565b866110c5565b503d61128f565b346101775760c0366003190112610177576112d06113da565b6024356001600160a01b039182821680920361017757610f27926112f26113f0565b916112fb6113ff565b611303611592565b5061130c611592565b94611315611532565b936044358552606435602086015261132b611532565b9316835260408301526000602083015260006060830152610e93611568565b3461017757600036600319011261017757610f276113666115d7565b60405191829160208352602083019061139a565b346101775760003660031901126101775760209062ffffff600254168152f35b919082519283825260005b8481106113c6575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016113a5565b600435906001600160a01b038216820361017757565b60843590811515820361017757565b60a43590811515820361017757565b600319810161016081126101775761014013610177576004916101443567ffffffffffffffff92838211610177578060238301121561017757818501359384116101775760248483010111610177576024019190565b6060810190811067ffffffffffffffff82111761063857604052565b6040810190811067ffffffffffffffff82111761063857604052565b90601f8019910116810190811067ffffffffffffffff82111761063857604052565b67ffffffffffffffff811161063857601f01601f191660200190565b6001600160a01b036000541633036114ee57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b604051906080820182811067ffffffffffffffff8211176106385760405260006060838281528260208201528260408201520152565b604051906040820182811067ffffffffffffffff8211176106385760405260006020838281520152565b604051906060820182811067ffffffffffffffff82111761063857604052816115b9611532565b81526115c3611532565b602082015260406115d2611568565b910152565b610e1042018042116115fc57604051906020820152602081526115f981611480565b90565b634e487b7160e01b600052601160045260246000fd5b51906001600160a01b038216820361017757565b356001600160a01b03811681036101775790565b91908260809103126101775781516005811015610177579161165e60208201611612565b91606061166d60408401611612565b92015190565b91906001600160a01b03908161168885611626565b1615801590611751575b156116ae5750506115f960406116a784611626565b9301611626565b1691604051630cf35bdd60e41b90818152602083013560048201526080928382602481895afa918215610573576060938593602492600091611730575b509760405195869485938452013560048301525afa9182156105735760009261171357505090565b6117299250803d1061092357610911818361149c565b5050905090565b6117479150853d871161092357610911818361149c565b50509050386116eb565b508161175f60408601611626565b161515611692565b939284359260009283928392918615801581611906575b15611793575050505050505060409092013590565b81929394969995989791611866575b505050816117b1575b50505050565b9091929394506040830135801560001461185c57509160646020926001600160a01b03606095604051968795869463442c159960e01b8652600486015201356024840152876044840152165afa918215611850578092611819575b50505b90388080806117ab565b9091506020823d8211611848575b816118346020938361149c565b81010312611845575051388061180c565b80fd5b3d9150611827565b604051903d90823e3d90fd5b935050505061180f565b9298509091156118ff57506040519063442c159960e01b82526004820152602083013560248201528360448201526020816064816001600160a01b038b165afa9081156118f45784916118bf575b505b953880806117a2565b90506020813d82116118ec575b816118d96020938361149c565b810103126118e85751386118b4565b8380fd5b3d91506118cc565b6040513d86823e3d90fd5b90506118b6565b5060408a0135151561177e565b6101243580151581036101775790565b9190826040910312610177576020825192015190565b3d15611964573d9061194a826114be565b91611958604051938461149c565b82523d6000602084013e565b606090565b90816020910312610177575180151581036101775790565b91909161010435801515810361017757611ab55750506001600160a01b03919250166040519060208201906323b872dd60e01b82523360248401523060448401528360648401526064835260a083019183831067ffffffffffffffff8411176106385760008091611a3795856040526119f986611480565b602086527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460c0820152519082855af1611a31611939565b91611b25565b80519081611a4457505090565b602080611a55938301019101611969565b15611a5d5790565b60405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b60409392509060006001600160a01b0360a493865197889687956311a5cc7760e31b8752600487015230602487015230604487015260648601526084850152165af190811561057357600091611b09575090565b611b21915060403d811161056c5761055c818361149c565b5090565b91929015611b875750815115611b39575090565b3b15611b425790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015611b9a5750805190602001fd5b60405162461bcd60e51b815260206004820152908190611bbe90602483019061139a565b0390fd5b67ffffffffffffffff81116106385760051b60200190565b805115611be75760200190565b634e487b7160e01b600052603260045260246000fd5b805160011015611be75760400190565b818102929181159184041417156115fc57565b9291909260020b90600082126000146121b057600160ff1b82146115fc57816000035b620d89e88111612187576001811615612175576001600160881b036ffffcb933bd6fad37aa2d162d1a5940015b169260028216612149575b60049182811661211d575b600881166120f1575b601081166120c5575b60208116612099575b6040811661206d575b608090818116612042575b6101008116612017575b6102008116611fec575b6104008116611fc1575b6108008116611f96575b6110008116611f6b575b6120008116611f40575b6140008116611f15575b6180008116611eea575b620100008116611ebf575b620200008116611e95575b620400008116611e57575b6208000016611e18575b50600012611df2575b63ffffffff8360201c931615600014611de95760ff60005b168301809311611dd457506fffffffffffffffffffffffffffffffff916001600160a01b039081908116848111611dab5780611d8c91611c0d565b941691161015611da1576115f992169061245d565b6115f99216612402565b80611db5916121b6565b941691161015611dca576115f9921690612393565b6115f9921661223f565b601190634e487b7160e01b6000525260246000fd5b60ff6001611d51565b918015611e03576000190491611d39565b601283634e487b7160e01b6000525260246000fd5b6b048a170391f7dc42444e8fa294919491828102928184041490151715611e42571c926000611d30565b601183634e487b7160e01b6000525260246000fd5b946d2216e584f5fa1ea926041bedfe9890818102918183041490151715611e8057811c94611d26565b601184634e487b7160e01b6000525260246000fd5b946e5d6af8dedb81196699c329225ee60490818102918183041490151715611e8057811c94611d1b565b946f09aa508b5b7a84e1c677de54f3e99bc990818102918183041490151715611e8057811c94611d10565b946f31be135f97d08fd981231505542fcfa690818102918183041490151715611e8057811c94611d05565b946f70d869a156d2a1b890bb3df62baf32f790818102918183041490151715611e8057811c94611cfb565b946fa9f746462d870fdf8a65dc1f90e061e590818102918183041490151715611e8057811c94611cf1565b946fd097f3bdfd2022b8845ad8f792aa582590818102918183041490151715611e8057811c94611ce7565b946fe7159475a2c29b7443b29c7fa6e889d990818102918183041490151715611e8057811c94611cdd565b946ff3392b0822b70005940c7a398e4b70f390818102918183041490151715611e8057811c94611cd3565b946ff987a7253ac413176f2b074cf7815e5490818102918183041490151715611e8057811c94611cc9565b946ffcbe86c7900a88aedcffc83b479aa3a490818102918183041490151715611e8057811c94611cbf565b946ffe5dee046a99a2a811c461f1969c305390818102918183041490151715611e8057811c94611cb5565b936fff2ea16466c96a3843ec78b326b5286190818102918183041490151715611e425760801c93611caa565b936fff973b41fa98c081472e6896dfb254c090818102918183041490151715611e425760801c93611ca1565b936fffcb9843d60f6159c9db58835c92664490818102918183041490151715611e425760801c93611c98565b936fffe5caca7e10e4e61c3624eaa0941cd090818102918183041490151715611e425760801c93611c8f565b936ffff2e50f5f656932ef12357cf3c7fdcc90818102918183041490151715611e425760801c93611c86565b926ffff97272373d413259a46990580e213a908181029181830414901517156115fc5760801c92611c7b565b6001600160881b03600160801b611c70565b60405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606490fd5b81611c43565b600019828209908281029081808410930393838503936000951461223457600160401b9184831115612230570991818311848183039561221c57508460c01b948504600160c01b14911417156115fc570360401c17808004600114811517156115fc5790565b634e487b7160e01b81526011600452602490fd5b8580fd5b505060401c92915050565b600160801b9291600019828509938260801b92838087109603958087039614612384578583111561017757829109908019600181018091116115fc5781168091049161229a600096600184808a030401908684119003611c0d565b92806003029660038804820361221c5760028098186122b98184611c0d565b89039089821161237057906122cd91611c0d565b6122d78184611c0d565b89039089821161237057906122eb91611c0d565b6122f58184611c0d565b890390898211612370579061230991611c0d565b6123138184611c0d565b890390898211612370579061232791611c0d565b6123318184611c0d565b8903908982116123705761234f9161234891611c0d565b8093611c0d565b880397881161221c57506115f9959661236791611c0d565b93030417611c0d565b634e487b7160e01b83526011600452602483fd5b50508092935015610177570490565b600019828209828202908180821091039381850391600095146123f757600160801b938285111561223057908491099282841190858284039661221c57508560801b95860414911417156115fc570360801c17808004600114811517156115fc5790565b505060801c92915050565b600160c01b9291600019828509938260c01b92838087109603958087039614612384578583111561017757829109908019600181018091116115fc5781168091049161229a600096600184808a030401908684119003611c0d565b60001982820990828102908180841093039383850393600095146124c357600160c01b9184831115612230570991818311848183039561221c57508460401b948504600160401b14911417156115fc570360c01c17808004600114811517156115fc5790565b505060c01c9291505056fea26469706673582212201fe59205be04c4ee6539dd3552de74fbd6da70172d21efe8bfe75054df55d62c64736f6c63430008120033";

type UniswapV3SwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3SwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3Swapper__factory extends ContractFactory {
  constructor(...args: UniswapV3SwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UniswapV3Swapper";
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    _swapRouter: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV3Swapper> {
    return super.deploy(
      _yieldBox,
      _swapRouter,
      _factory,
      overrides || {}
    ) as Promise<UniswapV3Swapper>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    _swapRouter: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yieldBox,
      _swapRouter,
      _factory,
      overrides || {}
    );
  }
  override attach(address: string): UniswapV3Swapper {
    return super.attach(address) as UniswapV3Swapper;
  }
  override connect(signer: Signer): UniswapV3Swapper__factory {
    return super.connect(signer) as UniswapV3Swapper__factory;
  }
  static readonly contractName: "UniswapV3Swapper";

  public readonly contractName: "UniswapV3Swapper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3SwapperInterface {
    return new utils.Interface(_abi) as UniswapV3SwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3Swapper {
    return new Contract(address, _abi, signerOrProvider) as UniswapV3Swapper;
  }
}
