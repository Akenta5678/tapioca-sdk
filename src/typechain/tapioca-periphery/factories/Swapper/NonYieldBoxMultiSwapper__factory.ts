/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NonYieldBoxMultiSwapper,
  NonYieldBoxMultiSwapperInterface,
} from "../../Swapper/NonYieldBoxMultiSwapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_pairCodeHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "getInputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getOutputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountMinOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0346100c257601f61115838819003918201601f19168301916001600160401b038311848410176100c75780849260409485528339810103126100c2578051906001600160a01b03821682036100c257602001519060805260a05260405161107a90816100de82396080518181816101560152818161020b015281816103120152818161035c015281816105c00152610818015260a051818181610131015281816101da015281816102e00152818161033a015281816105e201526107ee0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c806324805ab9146107d457806327a1bd21146105ac5763b40707081461003d57600080fd5b346104875760c0366003190112610487576004356001600160a01b038116810361048757602435906001600160a01b0382168203610487576001600160a01b0360643516606435036104875760843567ffffffffffffffff8111610487576100a9903690600401610857565b91604051906323b872dd60e01b602083015233602483015230604483015260a4356064830152606482528160a081011067ffffffffffffffff60a08401111761044d57816000929160a0849301604052826001600160a01b0360208451940192165af1610114610990565b8161057d575b50156105395761012b913691610911565b9061017a7f00000000000000000000000000000000000000000000000000000000000000008360a4357f0000000000000000000000000000000000000000000000000000000000000000610c9b565b918251600019810190811161048c57610193908461097c565b5160443581106104f4576001600160a01b036101ae8361096f565b51166001600160a01b036101c18461096f565b51168351600110156104de576102359161022f60a435927f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b03604089015116907f0000000000000000000000000000000000000000000000000000000000000000610b87565b906109e8565b60005b8251600019810190811161048c578110156104bd576001600160a01b0361025f828561097c565b511690600181019182821161048c576001600160a01b03610280848761097c565b51166001600160a01b0361029f6102978385610ac0565b50958a61097c565b51941682036104b557600093915b86518060011981011161048c57600119018410156104a25760028401841161048c576103806001600160a01b03916103367f00000000000000000000000000000000000000000000000000000000000000008461030d60028a018d61097c565b5116867f0000000000000000000000000000000000000000000000000000000000000000610b87565b935b7f0000000000000000000000000000000000000000000000000000000000000000917f0000000000000000000000000000000000000000000000000000000000000000610b87565b16916040519182602081011067ffffffffffffffff60208501111761044d576020830160405260008352833b156104875760405163022c0d9f60e01b8152600481019690965260248601919091526001600160a01b0316604485015260806064850152805160848501819052849160005b82811061046f5750509181600060a482868383819984010152601f801991011681010301925af1801561046357610432575b61042d9150610ab1565b610238565b67ffffffffffffffff821161044d5761042d91604052610423565b634e487b7160e01b600052604160045260246000fd5b6040513d6000823e3d90fd5b602082820181015160a48984010152879450016103f1565b600080fd5b634e487b7160e01b600052601160045260246000fd5b6103806001600160a01b03913093610338565b6000916102ad565b6020826104d6816064356001600160a01b0389166109e8565b604051908152f35b634e487b7160e01b600052603260045260246000fd5b60405162461bcd60e51b815260206004820152601760248201527f696e73756666696369656e742d616d6f756e742d6f75740000000000000000006044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f426f72696e6745524332303a205472616e7366657246726f6d206661696c65646044820152fd5b8051801592508215610592575b50503861011a565b6105a592506020809183010191016109d0565b388061058a565b34610487576105ba36610888565b906106097f0000000000000000000000000000000000000000000000000000000000000000937f0000000000000000000000000000000000000000000000000000000000000000923691610911565b92610618600285511015610c1d565b6106228451610c69565b938451936000199485810190811161048c5761063e908761097c565b52805184810190811161048c57805b61066557602061065c8761096f565b51604051908152f35b84810181811161048c5761069c856001600160a01b0380610686858861097c565b511690610693868861097c565b51169087610e21565b906106a7848a61097c565b51908115610769576106ce82826106d393151580610760575b6106c990610ef2565b611007565b610f84565b90820391821161048c576106e96106ef92610fe8565b90610f64565b90600182019182811161048c57821061071b5761070c908861097c565b52801561048c5784018061064d565b60405162461bcd60e51b815260206004820152601460248201527f64732d6d6174682d6164642d6f766572666c6f770000000000000000000000006044820152606490fd5b508515156106c0565b60405162461bcd60e51b815260206004820152602c60248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4f60448201527f55545055545f414d4f554e5400000000000000000000000000000000000000006064820152608490fd5b346104875761083c6108156107e836610888565b919290927f0000000000000000000000000000000000000000000000000000000000000000933691610911565b907f0000000000000000000000000000000000000000000000000000000000000000610c9b565b805160001981019190821161048c5760209161065c9161097c565b9181601f840112156104875782359167ffffffffffffffff8311610487576020808501948460051b01011161048757565b6040600319820112610487576004359067ffffffffffffffff8211610487576108b391600401610857565b909160243590565b6080810190811067ffffffffffffffff82111761044d57604052565b90601f8019910116810190811067ffffffffffffffff82111761044d57604052565b67ffffffffffffffff811161044d5760051b60200190565b929161091c826108f9565b9161092a60405193846108d7565b829481845260208094019160051b810192831161048757905b8282106109505750505050565b81356001600160a01b0381168103610487578152908301908301610943565b8051156104de5760200190565b80518210156104de5760209160051b010190565b3d156109cb573d9067ffffffffffffffff821161044d57604051916109bf601f8201601f1916602001846108d7565b82523d6000602084013e565b606090565b90816020910312610487575180151581036104875790565b600092838093604051602081019363a9059cbb60e01b85526001600160a01b038093166024830152604482015260448152610a22816108bb565b5193165af1610a2f610990565b81610a82575b5015610a3d57565b60405162461bcd60e51b815260206004820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c6564000000006044820152606490fd5b8051801592508215610a97575b505038610a35565b610aaa92506020809183010191016109d0565b3880610a8f565b600019811461048c5760010190565b90916001600160a01b0391828416838216818114610b34571015610b2f57925b91831615610aea57565b60405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a205a45524f5f4144445245535300006044820152606490fd5b610ae0565b60405162461bcd60e51b815260206004820152602560248201527f556e697377617056324c6962726172793a204944454e544943414c5f41444452604482015264455353455360d81b6064820152608490fd5b91610b9191610ac0565b926040519160208301906bffffffffffffffffffffffff199586809260601b16835260601b16603484015260288352606083019280841067ffffffffffffffff85111761044d576001600160a01b039560b592856040528251902090608083019660ff60f81b885260601b1660818301526095820152015260558152610c16816108bb565b5190201690565b15610c2457565b60405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a20494e56414c49445f5041544800006044820152606490fd5b90610c73826108f9565b610c8060405191826108d7565b8281528092610c91601f19916108f9565b0190602036910137565b9392919091610cae600283511015610c1d565b610cb88251610c69565b92610cc28461096f565b5260005b8251600019810190811161048c57811015610dff576001600160a01b039081610cef828661097c565b5116600182019283831161048c57610d16918591610d0d868961097c565b5116908a610e21565b610d23838895939561097c565b518015610d9457610d52610d4b610d589287151580610d8b575b610d4690610ef2565b610fe8565b9283611007565b94610f84565b9081019081811161048c57811061071b57610d79610d8091610d8695610f64565b918761097c565b52610ab1565b610cc6565b50841515610d3d565b60405162461bcd60e51b815260206004820152602b60248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4960448201527f4e5055545f414d4f554e540000000000000000000000000000000000000000006064820152608490fd5b5050509150565b51906dffffffffffffffffffffffffffff8216820361048757565b60608291610e4860049596610e368886610ac0565b50976001600160a01b03958694610b87565b1660405194858092630240bc6b60e21b82525afa928315610463576000908194610e97575b5081906dffffffffffffffffffffffffffff80911694169416911614600014610e935791565b9091565b93506060843d8211610eea575b81610eb1606093836108d7565b81010312610ee757610ec284610e06565b906040610ed160208701610e06565b95015163ffffffff811603610ee7575081610e6d565b80fd5b3d9150610ea4565b15610ef957565b60405162461bcd60e51b815260206004820152602860248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4c60448201527f49515549444954590000000000000000000000000000000000000000000000006064820152608490fd5b8115610f6e570490565b634e487b7160e01b600052601260045260246000fd5b906103e8918281029281840481148215171561048c57830403610fa357565b60405162461bcd60e51b815260206004820152601460248201527f64732d6d6174682d6d756c2d6f766572666c6f770000000000000000000000006044820152606490fd5b906103e5918281029281840481148215171561048c57830403610fa357565b60009291801591821561101e575b505015610fa357565b8082029450915081158285048214171561048c5761103c9084610f64565b14388061101556fea264697066735822122001160a2618b60a5e8582123d78382b99d6294a08a614cbe579172aa7994bebfc64736f6c63430008120033";

type NonYieldBoxMultiSwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NonYieldBoxMultiSwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NonYieldBoxMultiSwapper__factory extends ContractFactory {
  constructor(...args: NonYieldBoxMultiSwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "NonYieldBoxMultiSwapper";
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _pairCodeHash: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NonYieldBoxMultiSwapper> {
    return super.deploy(
      _factory,
      _pairCodeHash,
      overrides || {}
    ) as Promise<NonYieldBoxMultiSwapper>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _pairCodeHash: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_factory, _pairCodeHash, overrides || {});
  }
  override attach(address: string): NonYieldBoxMultiSwapper {
    return super.attach(address) as NonYieldBoxMultiSwapper;
  }
  override connect(signer: Signer): NonYieldBoxMultiSwapper__factory {
    return super.connect(signer) as NonYieldBoxMultiSwapper__factory;
  }
  static readonly contractName: "NonYieldBoxMultiSwapper";

  public readonly contractName: "NonYieldBoxMultiSwapper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NonYieldBoxMultiSwapperInterface {
    return new utils.Interface(_abi) as NonYieldBoxMultiSwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NonYieldBoxMultiSwapper {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NonYieldBoxMultiSwapper;
  }
}
