/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CurveSwapper,
  CurveSwapperInterface,
} from "../../Swapper/CurveSwapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICurvePool",
        name: "_curvePool",
        type: "address",
      },
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "Undefined",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawFromYb",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "depositToYb",
        type: "bool",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenInId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenOutId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawFromYb",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "depositToYb",
        type: "bool",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "curvePool",
    outputs: [
      {
        internalType: "contract ICurvePool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDefaultDexOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getInputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "dexOptions",
        type: "bytes",
      },
    ],
    name: "getOutputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03461010557601f6117cc38819003918201601f19168301916001600160401b0383118484101761010a5780849260409485528339810103126101055780516001600160a01b039182821691829003610105576020015191808316808403610105576000549160018060a01b0319923384821617600055604051913391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001805583156100f65750156100e45760025416176002556080526040516116ab908161012182396080518181816103190152818161053c0152610c2c0152f35b60405163d23f952160e01b8152600490fd5b63d23f952160e01b8152600490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c80631a163210146100c7578063218751b2146100c25780633fa2ef5e146100bd5780635bf66e48146100b8578063715018a6146100b35780637b2a8bd2146100ae5780638da5cb5b146100a9578063de406577146100a4578063e3c711a01461009f578063efa84c6d1461009a5763f2fde38b1461009557600080fd5b6106b1565b61060c565b610560565b61051c565b6104f5565b610474565b61041e565b6102f2565b6101c1565b6100ff565b6100dc565b60009103126100d757565b600080fd5b346100d75760003660031901126100d757604051633937a73d60e01b8152600490fd5b346100d75760003660031901126100d75760206001600160a01b0360025416604051908152f35b6001600160a01b038116036100d757565b801515036100d757565b6101bf909291926101006040610140830195606081516001600160a01b0380825116875260208201516020880152848201511684870152015160608501526060602082015180516080870152602081015160a08701528381015160c0870152015160e085015201519101906020809180511515845201511515910152565b565b346100d75760c03660031901126100d7576102866004356101e181610126565b602435906101ee82610126565b608435906101fb82610137565b60a4359261020884610137565b61021061082f565b5061021961082f565b936102226107cf565b92604435845260643560208501526102386107cf565b926001600160a01b0380921684521660408301526000602083015260006060830152610262610805565b93151584521515602084015283526020830152604082015260405191829182610141565b0390f35b6101409060031901126100d757600490565b600319810161016081126100d757610140136100d7576004916101443567ffffffffffffffff928382116100d757806023830112156100d757818501359384116100d757602484830101116100d7576024019190565b346100d7576103c4602061031661034c61030b3661029c565b81949294019061088c565b917f0000000000000000000000000000000000000000000000000000000000000000906060810135906080868201359101610954565b509061036f6103636002546001600160a01b031690565b6001600160a01b031690565b9061038f61038261038961038284610906565b51600f0b90565b92610929565b9060405195869485938493635e0d443f60e01b8552600485016040919493926060820195600f0b8252600f0b60208201520152565b03915afa801561041957610286916000916103eb575b506040519081529081906020820190565b61040c915060203d8111610412575b61040481836105ce565b810190610939565b386103da565b503d6103fa565b610948565b346100d75760008060031936011261047157610438610777565b806001600160a01b038154811981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b346100d75760c03660031901126100d75761028660843561049481610137565b60a435906104a182610137565b6104a961082f565b506104b261082f565b916104bb6107cf565b90604435825260643560208301526104d16107cf565b90600082526000604083015260043560208301526024356060830152610262610805565b346100d75760003660031901126100d75760206001600160a01b0360005416604051908152f35b346100d75760003660031901126100d75760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346100d75761056e3661029c565b505060405163d623472560e01b815260049150fd5b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116105ad57604052565b610583565b6040810190811067ffffffffffffffff8211176105ad57604052565b90601f8019910116810190811067ffffffffffffffff8211176105ad57604052565b67ffffffffffffffff81116105ad57601f01601f191660200190565b346100d7576101a03660031901126100d7576106273661028a565b610164359061063582610126565b610184359167ffffffffffffffff83116100d757366023840112156100d757826004013591610663836105f0565b9261067160405194856105ce565b80845236602482870101116100d757602081600092602461069f980183880137850101526101443590610b5b565b60408051928352602083019190915290f35b346100d75760203660031901126100d7576004356106ce81610126565b6106d6610777565b6001600160a01b038091168015610723576000918254826001600160a01b03198216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6001600160a01b0360005416330361078b57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b604051906080820182811067ffffffffffffffff8211176105ad5760405260006060838281528260208201528260408201520152565b604051906040820182811067ffffffffffffffff8211176105ad5760405260006020838281520152565b604051906060820182811067ffffffffffffffff8211176105ad57604052816108566107cf565b81526108606107cf565b6020820152604061086f610805565b910152565b67ffffffffffffffff81116105ad5760051b60200190565b60209081818403126100d75780359067ffffffffffffffff82116100d757019180601f840112156100d75782356108c281610874565b936108d060405195866105ce565b818552838086019260051b8201019283116100d7578301905b8282106108f7575050505090565b813581529083019083016108e9565b8051156109135760200190565b634e487b7160e01b600052603260045260246000fd5b8051600110156109135760400190565b908160209103126100d7575190565b6040513d6000823e3d90fd5b92939193600094600091853593841580801590610a9f575b1561098257505050505060409192935092013590565b81929497939591610a1e575b5050508261099b57505050565b9293509091604081013580610a17575060405163442c159960e01b8152600481019390935260600135602483015260006044830152602090829060649082906001600160a01b03165afa908115610419576000916109f9575b505b90565b610a11915060203d81116104125761040481836105ce565b386109f4565b9250505090565b929750909115610a98575060405163442c159960e01b81526004810191909152602086810135602483015260006044830152816064816001600160a01b0386165afa90811561041957600091610a7a575b505b9438808061098e565b610a92915060203d81116104125761040481836105ce565b38610a6f565b9050610a71565b506040880135151561096c565b60209081818403126100d75780519067ffffffffffffffff82116100d757019180601f840112156100d7578251610ae281610874565b93610af060405195866105ce565b818552838086019260051b8201019283116100d7578301905b828210610b17575050505090565b81518152908301908301610b09565b908160209103126100d757516109f681610126565b356109f681610137565b91908260409103126100d7576020825192015190565b90919392600094610b76602092838082518301019101610aac565b95610b8c6103636002546001600160a01b031690565b96610b9681610906565b5191604096875186818c8180610bbf63c661065760e01b9a8b8352600483019190602083019252565b03915afa94851561041957610bfc9b8892600097610d8e575b50610be286610929565b51918b51809e819482938352600483019190602083019252565b03915afa958615610419576101209a600097610d55575b50610c8f91610c869189013594610c6d8a6060810135987f000000000000000000000000000000000000000000000000000000000000000098610c5b8a8c8360808701610954565b50918a61010060a086013595016110fb565b90610c8061038261038961038284610906565b90611352565b998a9701610b3b565b15610d3d5750916000869492610cb4876001600160a01b03610cfb9997168096610ffe565b8551634d4d7cbd60e11b815260048101919091523060248201526001600160a01b0390921660448301526064820193909352600060848201529384928391829060a4820190565b03925af191821561041957600092610d1257505090565b610d319250803d10610d36575b610d2981836105ce565b810190610b45565b905090565b503d610d1f565b96955050506001600160a01b036101bf939216610dad565b81975091610d7e610c8f93610c86933d8b11610d87575b610d7681836105ce565b810190610b26565b97915091610c13565b503d610d6c565b610da6919750833d8511610d8757610d7681836105ce565b9538610bd8565b60405163a9059cbb60e01b60208201526001600160a01b039290921660248301526044808301939093529181526101bf91610de96064836105ce565b610e03565b908160209103126100d757516109f681610137565b604051610e61916001600160a01b0316610e1c826105b2565b6000806020958685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487860152868151910182855af1610e5b610ef0565b91610f20565b80519081610e6e57505050565b8280610e7e938301019101610dee565b15610e865750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b3d15610f1b573d90610f01826105f0565b91610f0f60405193846105ce565b82523d6000602084013e565b606090565b91929015610f825750815115610f34575090565b3b15610f3d5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015610f955750805190602001fd5b60405162461bcd60e51b8152908190610fb19060048301610fb5565b0390fd5b6020808252825181830181905290939260005b828110610fea57505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610fc8565b60405163095ea7b360e01b602082019081526001600160a01b0390931660248201526044810193909352600092839290839061104781606481015b03601f1981018352826105ce565b51925af1611053610ef0565b816110cc575b501561106157565b60405162461bcd60e51b815260206004820152602860248201527f42617365537761707065723a3a73616665417070726f76653a20617070726f7660448201527f65206661696c65640000000000000000000000000000000000000000000000006064820152608490fd5b80518015925082156110e1575b505038611059565b6110f49250602080918301019101610dee565b38806110d9565b94929193943561110a81610137565b61112857505050816109f69130906001600160a01b03339116611196565b604093509060006001600160a01b0360a493869795975197889687956311a5cc7760e31b8752600487015230602487015230604487015260648601526084850152165af19081156104195760009161117e575090565b6109f4915060403d8111610d3657610d2981836105ce565b9290604051926323b872dd60e01b60208501526001600160a01b03809216602485015216604483015260648201526064815260a081019181831067ffffffffffffffff8411176105ad576101bf92604052610e03565b156111f357565b60405162461bcd60e51b815260206004820152601760248201527f696e73756666696369656e742d616d6f756e742d6f75740000000000000000006044820152606490fd5b60405190611245826105b2565b601782527f4375727665537761707065723a20617070726f76696e670000000000000000006020830152565b6040519061127e826105b2565b601882527f4375727665537761707065723a2065786368616e67696e6700000000000000006020830152565b604051906112b7826105b2565b601782527f4375727665537761707065723a2065786368616e6765640000000000000000006020830152565b156112ea57565b60405162461bcd60e51b815260206004820152600b60248201527f73776170206661696c65640000000000000000000000000000000000000000006044820152606490fd5b9190820391821161133c57565b634e487b7160e01b600052601160045260246000fd5b91929061136a6103636002546001600160a01b031690565b9260409182519163c661065760e01b908184526020976fffffffffffffffffffffffffffffffff946004958a82806113ab8488168b83019190602083019252565b03818d5afa948515610419578b92600096611615575b508851908152908616878201908152909190829081906020015b03818c5afa908115610419576000916115f8575b50865190635e0d443f60e01b82528a8280611425868a898d85016040919493926060820195600f0b8252600f0b60208201520152565b03818d5afa80156104195789611450916001600160a01b03948e6000926115db575b505010156111ec565b16938651986370a0823160e01b94858b528b8b80611480308c83019190916001600160a01b036020820193169052565b03818a5afa9a8b15610419578c60009c6115b2575b50506114b29184916114ad6114a8611238565b61163c565b610ffe565b6114bd6114a8611271565b6114d26103636002546001600160a01b031690565b90813b156100d757600080946115198a519b8c9687958694630f7c084960e21b86528d8601909493926060926080830196600f0b8352600f0b602083015260408201520152565b03925af193841561041957611553958895611599575b5061153b6114a86112aa565b51908152309281019283529384928391829160200190565b03915afa908115610419576109f69360009261157c575b50506115778282116112e3565b61132f565b6115929250803d106104125761040481836105ce565b388061156a565b806115a66115ac92610599565b806100cc565b3861152f565b85929c506114b29391816115d192903d106104125761040481836105ce565b9b9150918c611495565b6115f19250803d106104125761040481836105ce565b388e611447565b61160f91508a3d8c11610d8757610d7681836105ce565b386113ef565b8392919650611633906113db943d8511610d8757610d7681836105ce565b959091926113c1565b6000809160405161166281611039602082019463104c13eb60e21b865260248301610fb5565b51906a636f6e736f6c652e6c6f675afa5056fea2646970667358221220cbecce6f6372fd6ac62d3bc833e954b18e09bff8b875d8266f932c8d6308b89364736f6c63430008120033";

type CurveSwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurveSwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CurveSwapper__factory extends ContractFactory {
  constructor(...args: CurveSwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CurveSwapper";
  }

  override deploy(
    _curvePool: PromiseOrValue<string>,
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CurveSwapper> {
    return super.deploy(
      _curvePool,
      _yieldBox,
      overrides || {}
    ) as Promise<CurveSwapper>;
  }
  override getDeployTransaction(
    _curvePool: PromiseOrValue<string>,
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_curvePool, _yieldBox, overrides || {});
  }
  override attach(address: string): CurveSwapper {
    return super.attach(address) as CurveSwapper;
  }
  override connect(signer: Signer): CurveSwapper__factory {
    return super.connect(signer) as CurveSwapper__factory;
  }
  static readonly contractName: "CurveSwapper";

  public readonly contractName: "CurveSwapper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveSwapperInterface {
    return new utils.Interface(_abi) as CurveSwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurveSwapper {
    return new Contract(address, _abi, signerOrProvider) as CurveSwapper;
  }
}
