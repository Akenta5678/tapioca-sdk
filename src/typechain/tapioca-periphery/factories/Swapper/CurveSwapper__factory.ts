/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CurveSwapper,
  CurveSwapperInterface,
} from "../../Swapper/CurveSwapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICurvePool",
        name: "_curvePool",
        type: "address",
      },
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "Undefined",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawFromYb",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "depositToYb",
        type: "bool",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenInId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenOutId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawFromYb",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "depositToYb",
        type: "bool",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "curvePool",
    outputs: [
      {
        internalType: "contract ICurvePool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDefaultDexOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getInputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "dexOptions",
        type: "bytes",
      },
    ],
    name: "getOutputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03461011a57601f61176538819003918201601f19168301916001600160401b0383118484101761011f57808492604094855283398101031261011a5780516001600160a01b03918282169182900361011a57602001519180831680840361011a576000549160018060a01b0319923384821617600055604051913391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360018055831561010b5750156100f957600254161760025560805260405161162f908161013682396080518181816102e9015281816104e001528181610822015281816108de015281816109f70152610c340152f35b60405163d23f952160e01b8152600490fd5b63d23f952160e01b8152600490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c9081631a16321014610f5b57508063218751b214610f325780633fa2ef5e14610e9e5780635bf66e4814610ba3578063715018a614610b5b5780637b2a8bd214610a4d5780638da5cb5b14610a26578063de406577146109e1578063e3c711a0146109bd578063efa84c6d1461014d5763f2fde38b1461009a57600080fd5b3461014a57602036600319011261014a576100b3610f7c565b6100bb61105a565b6001600160a01b039081169081156100f6576000548260018060a01b0319821617600055166000805160206115da833981519152600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b80fd5b503461014a5736600319016101a081126109b9576101401361014a57610164356001600160a01b038116900361014a57610184356001600160401b0381116109b957366023820112156109b957806004013590826101aa8361103f565b916101b86040519384611006565b838352602083019336602482840101116109b55780602460209301863783010152829080518101926020828186019503126106e55751906001600160401b0382116106e557019180603f840112156106b357602083015161021881611154565b936102266040519586611006565b8185526040602086019260051b82010192831161088757604001905b8282106109a55750506002546001600160a01b03169190506102638361116b565b516040519063c661065760e01b82526004820152602081602481865afa908115610671578591610986575b50602061029a8561118e565b5160246040518096819363c661065760e01b835260048301525afa928315610671578593610965575b508490608435801580158161095a575b156107ce575061030d92505b60a43591602435907f00000000000000000000000000000000000000000000000000000000000000006114e9565b6103206103198561116b565b519461118e565b5160025460405163c661065760e01b81526001600160801b038781166004830152969093926001600160a01b039092169190602085602481865afa9485156107a25789956107ad575b5060405163c661065760e01b81529782166004890152602088602481865afa9788156107a2578998610771575b50604051635e0d443f60e01b8152602081806103bd8887600f0b87600f0b6004850161119e565b0381875afa908115610766578a91610730575b5061014435116106f1576040516370a0823160e01b8152306004820152948993906020876024816001600160a01b038e165afa9687156106715785976106b7575b5061041d918691611411565b6002546001600160a01b031690813b156106b357836084926040519687958694630f7c084960e21b8652600f0b6004860152600f0b602485015260448401526101443560648401525af180156106a85761067c575b506040516370a0823160e01b815230600482015293602090859060249082906001600160a01b03165afa93841561067157859461063d575b508084111561060a5783039283116105f6576101243580151581036105f157156105a25750604083916105078460018060a01b037f0000000000000000000000000000000000000000000000000000000000000000168093611411565b8151634d4d7cbd60e11b8152606480356004830152306024830152610164356001600160a01b0316604483015281018590526084810184905292839160a49183915af19081156105975760409391610568575b505b82519182526020820152f35b6105889150833d8511610590575b6105808183611006565b8101906111d9565b90503861055a565b503d610576565b6040513d85823e3d90fd5b90604093506105ec9084519063a9059cbb60e01b60208301526105de826105d08761016435602484016111ef565b03601f198101845283611006565b6001600160a01b0316611222565b61055c565b600080fd5b634e487b7160e01b84526011600452602484fd5b60405162461bcd60e51b815260206004820152600b60248201526a1cddd85c0819985a5b195960aa1b6044820152606490fd5b9093506020813d602011610669575b8161065960209383611006565b810103126105f1575192386104aa565b3d915061064c565b6040513d87823e3d90fd5b6001600160401b038111610694576040526020610472565b634e487b7160e01b86526041600452602486fd5b6040513d88823e3d90fd5b8380fd5b9096506020813d6020116106e9575b816106d360209383611006565b810103126106e557519561041d610411565b8480fd5b3d91506106c6565b60405162461bcd60e51b81526020600482015260176024820152761a5b9cdd59999a58da595b9d0b585b5bdd5b9d0b5bdd5d604a1b6044820152606490fd5b90506020813d60201161075e575b8161074b60209383611006565b8101031261075a5751386103d0565b8980fd5b3d915061073e565b6040513d8c823e3d90fd5b61079491985060203d60201161079b575b61078c8183611006565b8101906111ba565b9638610396565b503d610782565b6040513d8b823e3d90fd5b6107c791955060203d60201161079b5761078c8183611006565b9338610369565b9060243591826108a7575b505050606435806107ef575b5061030d916102df565b60c43561089d5760405163442c159960e01b8152600481019190915260e4356024820152604481018790526020816064817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa801561089257610863575b5061030d915b916107e5565b602090813d831161088b575b6108798183611006565b810103126108875738610857565b8580fd5b503d61086f565b6040513d89823e3d90fd5b5061030d9161085d565b929350909115610953575060405163442c159960e01b8152600481019190915260a4356024820152604481018690526020816064817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156106a8578691610921575b505b903880806107d9565b90506020813d60201161094b575b8161093c60209383611006565b81010312610887575138610916565b3d915061092f565b9050610918565b5060c43515156102d3565b61097f91935060203d60201161079b5761078c8183611006565b91386102c3565b61099f915060203d60201161079b5761078c8183611006565b3861028e565b8151815260209182019101610242565b8280fd5b5080fd5b503461014a576109cc36610fb0565b505060405163d623472560e01b815260049150fd5b503461014a578060031936011261014a576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461014a578060031936011261014a57546040516001600160a01b039091168152602090f35b503461014a5760c036600319011261014a57610b5790610a6b610f92565b610a73610fa1565b610a7b611110565b50610a84611110565b92610a8d6110b2565b9160443583526064356020840152610aa36110b2565b91808352604083015260043560208301526024356060830152610ac46110e7565b93151584521515602084015283526020830152604082015260405191829182919091610120602060406101408401956060815160018060a01b03808251168852858201518689015284820151168488015201516060860152606083820151805160808801528481015160a08801528381015160c0880152015160e086015201518051151561010085015201511515910152565b0390f35b503461014a578060031936011261014a57610b7461105a565b80546001600160a01b03198116825581906001600160a01b03166000805160206115da8339815191528280a380f35b503461014a57610bb236610fb0565b819392910160209384818303126106b3578035906001600160401b0382116106e557019080601f830112156106b3578135610bec81611154565b92610bfa6040519485611006565b818452868085019260051b820101928311610887579086808095949301915b838310610e8e575060608601359560808101359350879250907f0000000000000000000000000000000000000000000000000000000000000000908201358415801581610e81575b15610d0f575050505050610cb79350905b6002546001600160a01b031690610c92610c8b8261116b565b519161118e565b5160405195869485938493635e0d443f60e01b8552600f0b90600f0b6004850161119e565b03915afa918215610d03578092610cd3575b5050604051908152f35b9091508282813d8311610cfc575b610ceb8183611006565b8101031261014a5750513880610cc9565b503d610ce1565b604051903d90823e3d90fd5b81929394969591610dd9575b50505085610d30575b5050610cb79350610c72565b9293919260c0820135610dcb5760405163442c159960e01b8152600481019690965260e09190910135602486015260448501869052849060649082906001600160a01b03165afa8015610dc05790859291610d93575b610cb793505b3880610d24565b919092813d8311610db9575b610da98183611006565b810103126109b557818491610d86565b503d610d9f565b6040513d86823e3d90fd5b50509190610cb79350610d8c565b929694955092939092909115610e7657505060405163442c159960e01b8152600481019190915260a082013560248201526044810186905286816064816001600160a01b0388165afa9081156106a8579087949392918791610e41575b505b92388080610d1b565b85819394959692503d8311610e6f575b610e5b8183611006565b810103126108875790869392915138610e36565b503d610e51565b909493929150610e38565b5060c08401351515610c61565b8235815291810191859101610c19565b503461014a5760c036600319011261014a57610eb8610f7c565b906024356001600160a01b0381811692918390036109b957610b5793610edc610f92565b92610ee5610fa1565b90610eee611110565b50610ef7611110565b95610f006110b2565b9460443586526064356020870152610f166110b2565b9416845260408401528060208401526060830152610ac46110e7565b503461014a578060031936011261014a576002546040516001600160a01b039091168152602090f35b9050346109b957816003193601126109b957633937a73d60e01b8152600490fd5b600435906001600160a01b03821682036105f157565b6084359081151582036105f157565b60a4359081151582036105f157565b600319810161016081126105f157610140136105f1576004916001600160401b039161014435908382116105f157806023830112156105f157818501359384116105f157602484830101116105f1576024019190565b601f909101601f19168101906001600160401b0382119082101761102957604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161102957601f01601f191660200190565b6000546001600160a01b0316330361106e57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60405190608082016001600160401b038111838210176110295760405260006060838281528260208201528260408201520152565b60408051919082016001600160401b038111838210176110295760405260006020838281520152565b60405190606082016001600160401b0381118382101761102957604052816111366110b2565b81526111406110b2565b6020820152604061114f6110e7565b910152565b6001600160401b0381116110295760051b60200190565b8051156111785760200190565b634e487b7160e01b600052603260045260246000fd5b8051600110156111785760400190565b6040919493926060820195600f0b8252600f0b60208201520152565b908160209103126105f157516001600160a01b03811681036105f15790565b91908260409103126105f1576020825192015190565b6001600160a01b039091168152602081019190915260400190565b908160209103126105f1575180151581036105f15790565b60408051908101916001600160a01b03166001600160401b0383118284101761102957611291926040526000806020958685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487860152868151910182855af161128b61130d565b9161133d565b8051908161129e57505050565b82806112ae93830101910161120a565b156112b65750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b3d15611338573d9061131e8261103f565b9161132c6040519384611006565b82523d6000602084013e565b606090565b9192901561139f5750815115611351575090565b3b1561135a5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156113b25750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b8285106113f8575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506113d5565b600092918361143c61144a8295604051928391602083019663095ea7b360e01b8852602484016111ef565b03601f198101835282611006565b51925af161145661130d565b816114ba575b501561146457565b60405162461bcd60e51b815260206004820152602860248201527f42617365537761707065723a3a73616665417070726f76653a20617070726f76604482015267194819985a5b195960c21b6064820152608490fd5b80518015925082156114cf575b50503861145c565b6114e2925060208091830101910161120a565b38806114c7565b93919092936101043580151581036105f15761155c5750506040516323b872dd60e01b60208201523360248201523060448201526064808201859052815260a08101929091506001600160401b0383118284101761102957604092909252611559916001600160a01b0316611222565b90565b6040935090600060a492859694965196879586946311a5cc7760e31b865260048601523060248601523060448601526064850152608484015260018060a01b03165af19081156115cd576000916115b1575090565b6115c9915060403d8111610590576105808183611006565b5090565b6040513d6000823e3d90fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220ed8656f12ce80307b1893cd628148c309f707dc259743b46600a767670857c2f64736f6c63430008120033";

type CurveSwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurveSwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CurveSwapper__factory extends ContractFactory {
  constructor(...args: CurveSwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CurveSwapper";
  }

  override deploy(
    _curvePool: PromiseOrValue<string>,
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CurveSwapper> {
    return super.deploy(
      _curvePool,
      _yieldBox,
      overrides || {}
    ) as Promise<CurveSwapper>;
  }
  override getDeployTransaction(
    _curvePool: PromiseOrValue<string>,
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_curvePool, _yieldBox, overrides || {});
  }
  override attach(address: string): CurveSwapper {
    return super.attach(address) as CurveSwapper;
  }
  override connect(signer: Signer): CurveSwapper__factory {
    return super.connect(signer) as CurveSwapper__factory;
  }
  static readonly contractName: "CurveSwapper";

  public readonly contractName: "CurveSwapper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveSwapperInterface {
    return new utils.Interface(_abi) as CurveSwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurveSwapper {
    return new Contract(address, _abi, signerOrProvider) as CurveSwapper;
  }
}
