/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CurveSwapper,
  CurveSwapperInterface,
} from "../../Swapper/CurveSwapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICurvePool",
        name: "_curvePool",
        type: "address",
      },
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "Undefined",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawFromYb",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "depositToYb",
        type: "bool",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenInId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenOutId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawFromYb",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "depositToYb",
        type: "bool",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "curvePool",
    outputs: [
      {
        internalType: "contract ICurvePool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDefaultDexOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getInputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "dexOptions",
        type: "bytes",
      },
    ],
    name: "getOutputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03461011a57601f61177d38819003918201601f19168301916001600160401b0383118484101761011f57808492604094855283398101031261011a5780516001600160a01b03918282169182900361011a57602001519180831680840361011a576000549160018060a01b0319923384821617600055604051913391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360018055831561010b5750156100f9576002541617600255608052604051611647908161013682396080518181816102ff015281816104fd0152818161085a0152818161091301528181610a2e0152610c6b0152f35b60405163d23f952160e01b8152600490fd5b63d23f952160e01b8152600490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c9081631a16321014610f9857508063218751b214610f715780633fa2ef5e14610ede5780635bf66e4814610bd9578063715018a614610b875780637b2a8bd214610a785780638da5cb5b14610a52578063de40657714610a0e578063e3c711a0146109ea578063efa84c6d146101605763f2fde38b1461009a57600080fd5b3461015d57602036600319011261015d576100b3610fb9565b6100bb611097565b6001600160a01b0380911690811561010957600054826001600160a01b0319821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b80fd5b503461015d5736600319016101a081126109e6576101401361015d576001600160a01b036101643516610164350361015d576101843567ffffffffffffffff81116109e657366023820112156109e657806004013590826101c08361107b565b916101ce6040519384611043565b838352602083019336602482840101116109e257806024602093018637830101528290805181019260208281860195031261071257519067ffffffffffffffff821161071257019180603f840112156106e057602083015161022f81611194565b9361023d6040519586611043565b8185526040602086019260051b8201019283116108b757604001905b8282106109d2575050506001600160a01b036002541690610279836111ac565b516040519063c661065760e01b82526004820152602081602481865afa90811561069d5785916109b3575b5060206102b0856111cf565b5160246040518096819363c661065760e01b835260048301525afa92831561069d578593610992575b5084906084358015801581610987575b15610801575061032392505b60a43591602435907f0000000000000000000000000000000000000000000000000000000000000000611525565b61033661032f856111ac565b51946111cf565b51906001600160a01b0360025416916040519063c661065760e01b82526fffffffffffffffffffffffffffffffff968781166004840152602083602481885afa9283156107d55789936107e0575b5060405163c661065760e01b81529782166004890152602088602481885afa9788156107d55789986107a4575b50604051635e0d443f60e01b8152600f82810b600483015283900b602482015260448101859052602081606481895afa908115610799578a91610763575b50610144351161071e576040516370a0823160e01b81523060048201529489936020876024816001600160a01b038e165afa96871561069d5785976106e4575b5061043b91869161142f565b6001600160a01b036002541690813b156106e057836084926040519687958694630f7c084960e21b8652600f0b6004860152600f0b602485015260448401526101443560648401525af180156106d5576106a8575b5060206001600160a01b03946024604051809781936370a0823160e01b8352306004840152165afa93841561069d578594610669575b50808411156106245783039283116106105761012435801515810361060b57156105bc575060408391610524846001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016809361142f565b60a4825180948193634d4d7cbd60e11b835260643560048401523060248401526001600160a01b03610164351660448401528760648401528160848401525af19081156105b15760409391610582575b505b82519182526020820152f35b6105a29150833d85116105aa575b61059a8183611043565b8101906111fe565b905038610574565b503d610590565b6040513d85823e3d90fd5b6040805163a9059cbb60e01b60208201526001600160a01b036101643581166024830152604480830187905282529195509192610606929190610600606484611043565b1661122c565b610576565b600080fd5b634e487b7160e01b84526011600452602484fd5b60405162461bcd60e51b815260206004820152600b60248201527f73776170206661696c65640000000000000000000000000000000000000000006044820152606490fd5b9093506020813d602011610695575b8161068560209383611043565b8101031261060b575192386104c6565b3d9150610678565b6040513d87823e3d90fd5b67ffffffffffffffff81116106c1576040526020610490565b634e487b7160e01b86526041600452602486fd5b6040513d88823e3d90fd5b8380fd5b9096506020813d602011610716575b8161070060209383611043565b8101031261071257519561043b61042f565b8480fd5b3d91506106f3565b60405162461bcd60e51b815260206004820152601760248201527f696e73756666696369656e742d616d6f756e742d6f75740000000000000000006044820152606490fd5b90506020813d602011610791575b8161077e60209383611043565b8101031261078d5751386103ef565b8980fd5b3d9150610771565b6040513d8c823e3d90fd5b6107c791985060203d6020116107ce575b6107bf8183611043565b8101906111df565b96386103b1565b503d6107b5565b6040513d8b823e3d90fd5b6107fa91935060203d6020116107ce576107bf8183611043565b9138610384565b9060243591826108d7575b50505060643580610822575b50610323916102f5565b60c4356108cd576040519063442c159960e01b8252600482015260e43560248201528660448201526020816064816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa80156108c257610893575b50610323915b91610818565b602090813d83116108bb575b6108a98183611043565b810103126108b75738610887565b8580fd5b503d61089f565b6040513d89823e3d90fd5b506103239161088d565b92935090911561098057506040519063442c159960e01b8252600482015260a43560248201528560448201526020816064816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156106d557869161094e575b505b9038808061080c565b90506020813d602011610978575b8161096960209383611043565b810103126108b7575138610943565b3d915061095c565b9050610945565b5060c43515156102e9565b6109ac91935060203d6020116107ce576107bf8183611043565b91386102d9565b6109cc915060203d6020116107ce576107bf8183611043565b386102a4565b8151815260209182019101610259565b8280fd5b5080fd5b503461015d576109f936610fed565b505060405163d623472560e01b815260049150fd5b503461015d578060031936011261015d5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461015d578060031936011261015d576001600160a01b036020915416604051908152f35b503461015d5760c036600319011261015d57610b8390610a96610fcf565b610a9e610fde565b610aa661114f565b50610aaf61114f565b92610ab86110ef565b9160443583526064356020840152610ace6110ef565b91808352604083015260043560208301526024356060830152610aef611125565b9315158452151560208401528352602083015260408201526040519182918291909161012060206040610140840195606081516001600160a01b03808251168852858201518689015284820151168488015201516060860152606083820151805160808801528481015160a08801528381015160c0880152015160e086015201518051151561010085015201511515910152565b0390f35b503461015d578060031936011261015d57610ba0611097565b806001600160a01b038154811981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461015d57610be836610fed565b819392910160209384818303126106e05780359067ffffffffffffffff821161071257019080601f830112156106e0578135610c2381611194565b92610c316040519485611043565b818452868085019260051b8201019283116108b7579086808095949301915b838310610ece575060608601359560808101359350879250907f0000000000000000000000000000000000000000000000000000000000000000908201358415801581610ec1575b15610d58575050505050610d009350905b6001600160a01b036002541690610cc9610cc2826111ac565b51916111cf565b51604051635e0d443f60e01b8152600f92830b6004820152910b602482015260448101929092529092839190829081906064820190565b03915afa918215610d4c578092610d1c575b5050604051908152f35b9091508282813d8311610d45575b610d348183611043565b8101031261015d5750513880610d12565b503d610d2a565b604051903d90823e3d90fd5b81929394969591610e1c575b50505085610d79575b5050610d009350610ca9565b9293919260c0820135610e0e5760e0956001600160a01b03606492604051988995869463442c1599831b8652600486015201356024840152896044840152165afa8015610e035790859291610dd6575b610d0093505b3880610d6d565b919092813d8311610dfc575b610dec8183611043565b810103126109e257818491610dc9565b503d610de2565b6040513d86823e3d90fd5b50509190610d009350610dcf565b929694955092939092909115610eb65750506040519063442c159960e01b8252600482015260a0820135602482015285604482015286816064816001600160a01b0388165afa9081156106d5579087949392918791610e81575b505b92388080610d64565b85819394959692503d8311610eaf575b610e9b8183611043565b810103126108b75790869392915138610e76565b503d610e91565b909493929150610e78565b5060c08401351515610c98565b8235815291810191859101610c50565b503461015d5760c036600319011261015d57610ef8610fb9565b90602435906001600160a01b038083168093036109e657610b8393610f1b610fcf565b92610f24610fde565b90610f2d61114f565b50610f3661114f565b95610f3f6110ef565b9460443586526064356020870152610f556110ef565b9416845260408401528060208401526060830152610aef611125565b503461015d578060031936011261015d5760206001600160a01b0360025416604051908152f35b9050346109e657816003193601126109e657633937a73d60e01b8152600490fd5b600435906001600160a01b038216820361060b57565b60843590811515820361060b57565b60a43590811515820361060b57565b6003198101610160811261060b576101401361060b576004916101443567ffffffffffffffff9283821161060b578060238301121561060b578185013593841161060b576024848301011161060b576024019190565b90601f8019910116810190811067ffffffffffffffff82111761106557604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161106557601f01601f191660200190565b6001600160a01b036000541633036110ab57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b604051906080820182811067ffffffffffffffff8211176110655760405260006060838281528260208201528260408201520152565b604051906040820182811067ffffffffffffffff8211176110655760405260006020838281520152565b604051906060820182811067ffffffffffffffff82111761106557604052816111766110ef565b81526111806110ef565b6020820152604061118f611125565b910152565b67ffffffffffffffff81116110655760051b60200190565b8051156111b95760200190565b634e487b7160e01b600052603260045260246000fd5b8051600110156111b95760400190565b9081602091031261060b57516001600160a01b038116810361060b5790565b919082604091031261060b576020825192015190565b9081602091031261060b5751801515810361060b5790565b6001600160a01b0316604051604081019181831067ffffffffffffffff8411176110655761129c926040526000806020958685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487860152868151910182855af161129661132b565b9161135b565b805190816112a957505050565b82806112b9938301019101611214565b156112c15750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b3d15611356573d9061133c8261107b565b9161134a6040519384611043565b82523d6000602084013e565b606090565b919290156113bd575081511561136f575090565b3b156113785790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156113d05750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510611416575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506113f3565b60405163095ea7b360e01b602082019081526001600160a01b039390931660248201526044808201949094529283526000928392908390611471606482611043565b51925af161147d61132b565b816114f6575b501561148b57565b60405162461bcd60e51b815260206004820152602860248201527f42617365537761707065723a3a73616665417070726f76653a20617070726f7660448201527f65206661696c65640000000000000000000000000000000000000000000000006064820152608490fd5b805180159250821561150b575b505038611483565b61151e9250602080918301019101611214565b3880611503565b939190929361010435801515810361060b57611593575050506040516323b872dd60e01b60208201523360248201523060448201528260648201526064815260a0810181811067ffffffffffffffff82111761106557604052611590916001600160a01b031661122c565b90565b604093509060006001600160a01b0360a493869795975197889687956311a5cc7760e31b8752600487015230602487015230604487015260648601526084850152165af1908115611605576000916115e9575090565b611601915060403d81116105aa5761059a8183611043565b5090565b6040513d6000823e3d90fdfea264697066735822122043ccfed11402d90ae4fc63335f292a3dc21d2e9134616608d5effda8f3715ccf64736f6c63430008120033";

type CurveSwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurveSwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CurveSwapper__factory extends ContractFactory {
  constructor(...args: CurveSwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CurveSwapper";
  }

  override deploy(
    _curvePool: PromiseOrValue<string>,
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CurveSwapper> {
    return super.deploy(
      _curvePool,
      _yieldBox,
      overrides || {}
    ) as Promise<CurveSwapper>;
  }
  override getDeployTransaction(
    _curvePool: PromiseOrValue<string>,
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_curvePool, _yieldBox, overrides || {});
  }
  override attach(address: string): CurveSwapper {
    return super.attach(address) as CurveSwapper;
  }
  override connect(signer: Signer): CurveSwapper__factory {
    return super.connect(signer) as CurveSwapper__factory;
  }
  static readonly contractName: "CurveSwapper";

  public readonly contractName: "CurveSwapper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveSwapperInterface {
    return new utils.Interface(_abi) as CurveSwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurveSwapper {
    return new Contract(address, _abi, signerOrProvider) as CurveSwapper;
  }
}
