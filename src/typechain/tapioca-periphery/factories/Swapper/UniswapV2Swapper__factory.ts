/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  UniswapV2Swapper,
  UniswapV2SwapperInterface,
} from "../../Swapper/UniswapV2Swapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IUniswapV2Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDefaultSwapData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getInputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getOutputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0346200017a57601f620015d538819003918201601f191683019291906001600160401b038411838510176200017f5781606092849260409687528339810103126200017a57620000518162000195565b9082620000616020830162000195565b910151916001600160a01b03808416928385036200017a5760008054336001600160a01b0319821681178355885195859390928416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a360018055169283156200016b5750169182156200015a5715620001495760805260a05260c0525161142a9081620001ab8239608051818181610291015281816107bd015281816108d301526109ec015260a0518161088f015260c05181818161025c015281816104dc01528181610570015281816106070152818161073f0152818161084b015261098b0152f35b835163d23f952160e01b8152600490fd5b845163d23f952160e01b8152600490fd5b63d23f952160e01b8152600490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200017a5756fe60406080815260048036101561001457600080fd5b600091823560e01c806312874bdb14610a465780635bf66e4814610972578063715018a61461091d5780638da5cb5b146108f7578063c31c9c07146108b3578063c45a01551461086f578063de4065771461082b578063e3c711a014610726578063efa84c6d146101655763f2fde38b1461008e57600080fd5b34610161576020366003190112610161578135916001600160a01b039182841680940361015d576100bd610b86565b831561010b575050825473ffffffffffffffffffffffffffffffffffffffff19811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b8280fd5b509190346107225736600319016101a0811261016157610140136107225761016435916001600160a01b039081841680850361072257610184359367ffffffffffffffff851161016157366023860112156101615784810135936101c885610b6a565b956101d589519788610b48565b8587526024953687828401011161071e57869392918187926020998a9301838c0137890101526002600154146106dd5760026001558690859783358281168082036105ea57158015906106c8575b156105ee579060443583811681036105ea57610240905b83610fde565b9a6084358981158015906105df575b1561049a5750945b6102897f00000000000000000000000000000000000000000000000000000000000000009660a435908a35878a6111a0565b926102b884877f000000000000000000000000000000000000000000000000000000000000000016809761109d565b511561048c575b8a8180518101031261048857928992838f8f96908b958f8a908d940151916102e561102f565b1561047e575061031f30935b519a8b998a9889976338ed173960e01b8952880152610144359087015260a0604487015260a4860190610c95565b92166064840152608483015203925af19081156104745790610348918891610452575b50610cd2565b519861035261102f565b610369575b8a8a8a8a600180558351928352820152f35b8091929394959697985051600019810190811161044057815181101561042e57926103a98a848d9897958c8c9660a49960051b010151169316809361109d565b85519687958694634d4d7cbd60e11b865260643590860152309085015260448401528960648401528160848401525af191821561042357916103f4575b509038808080808080610357565b6104149150843d861161041c575b61040c8183610b48565b81019061103f565b9050386103e6565b503d610402565b8551903d90823e3d90fd5b634e487b7160e01b8852603285528588fd5b634e487b7160e01b8852601185528588fd5b61046e91503d808a833e6104668183610b48565b810190610c19565b38610342565b8b513d89823e3d90fd5b61031f90936102f1565b8980fd5b50610495610bde565b6102bf565b959050873580610547575b506064358e816104b7575b5050610257565b519063442c159960e01b82528882015260e435898201528a60448201528b81606481897f0000000000000000000000000000000000000000000000000000000000000000165afa801561053c57908c91610513575b508e6104b0565b813d8311610535575b6105268183610b48565b81010312610488578a3861050c565b503d61051c565b508e513d8c823e3d90fd5b9095508d519063442c159960e01b82528782015260a435888201528960448201528a81606481887f0000000000000000000000000000000000000000000000000000000000000000165afa9081156105d5578a916105a8575b5094386104a5565b90508a81813d83116105ce575b6105bf8183610b48565b810103126104885751386105a0565b503d6105b5565b8e513d8c823e3d90fd5b5060c435151561024f565b8880fd5b508a51630cf35bdd60e41b8082528635868301526080917f00000000000000000000000000000000000000000000000000000000000000008516919083818a81865afa90811561053c57918f9594939284928b918e916106a7575b5096518094819382526064358c8301525afa9182156105d5579061024092918b92610676575b505061023a565b6106959250803d106106a0575b61068d8183610b48565b810190610d2d565b50509050388061066f565b503d610683565b6106be9150843d86116106a05761068d8183610b48565b5050905038610649565b506044358381168091036105ea571515610223565b50601f606492868a519362461bcd60e51b85528401528201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b8580fd5b5080fd5b509034610161578261073736610abb565b5050916107867f000000000000000000000000000000000000000000000000000000000000000061077161076b8287610d66565b90610fde565b94606081013590608060208201359101610e66565b85516307c0329d60e21b815292830152506024810184905291829081906107b1906044830190610c95565b03816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa90811561081f57906107fc918460209592610804575b5050610cf8565b519051908152f35b61081892503d8091833e6104668183610b48565b38806107f5565b505051903d90823e3d90fd5b838234610722578160031936011261072257602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b838234610722578160031936011261072257602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b838234610722578160031936011261072257602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b8382346107225781600319360112610722576001600160a01b0360209254169051908152f35b833461096f578060031936011261096f57610936610b86565b806001600160a01b038154811981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b509034610161578261098336610abb565b5050916109b77f000000000000000000000000000000000000000000000000000000000000000061077161076b8287610d66565b50906109e08551948593849363d06ca61f60e01b85528401528660248401526044830190610c95565b03816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa90811561081f57906107fc918460209592610a2b575b5050610cd2565b610a3f92503d8091833e6104668183610b48565b3880610a24565b838234610722578160031936011261072257610a7790610a64610bde565b9051918291602083526020830190610a7b565b0390f35b919082519283825260005b848110610aa7575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610a86565b60031981016101608112610b115761014013610b11576004916101443567ffffffffffffffff92838211610b115780602383011215610b115781850135938411610b115760248483010111610b11576024019190565b600080fd5b6040810190811067ffffffffffffffff821117610b3257604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610b3257604052565b67ffffffffffffffff8111610b3257601f01601f191660200190565b6001600160a01b03600054163303610b9a57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b610e104201804211610c035760405190602082015260208152610c0081610b16565b90565b634e487b7160e01b600052601160045260246000fd5b906020908183820312610b1157825167ffffffffffffffff93848211610b11570181601f82011215610b11578051938411610b32578360051b9060405194610c6385840187610b48565b85528380860192820101928311610b11578301905b828210610c86575050505090565b81518152908301908301610c78565b90815180825260208080930193019160005b828110610cb5575050505090565b83516001600160a01b031685529381019392810192600101610ca7565b805160011015610ce25760400190565b634e487b7160e01b600052603260045260246000fd5b805115610ce25760200190565b356001600160a01b0381168103610b115790565b51906001600160a01b0382168203610b1157565b9190826080910312610b115781516005811015610b115791610d5160208201610d19565b916060610d6060408401610d19565b92015190565b91906001600160a01b039081610d7b85610d05565b1615801590610e50575b15610da1575050610c006040610d9a84610d05565b9301610d05565b1691604051630cf35bdd60e41b90818152602083013560048201526080928382602481895afa918215610e23576060938593602492600091610e2f575b509760405195869485938452013560048301525afa918215610e2357600092610e0657505090565b610e1c9250803d106106a05761068d8183610b48565b5050905090565b6040513d6000823e3d90fd5b610e469150853d87116106a05761068d8183610b48565b5050905038610dde565b5081610e5e60408601610d05565b161515610d85565b939284359260009283928392918615801590610fd1575b15610e915750505050505060409092013590565b80919293959894979650610f43575b5081610ead575b50505050565b606093949550602092916001600160a01b03606492604051968795869463442c159960e01b8652600486015201356024840152876044840152165afa918215610f37578092610f03575b50509038808080610ea7565b9091506020823d8211610f2f575b81610f1e60209383610b48565b8101031261096f5750513880610ef7565b3d9150610f11565b604051903d90823e3d90fd5b9096506040519063442c159960e01b82526004820152602083013560248201528360448201526020816064816001600160a01b038b165afa908115610fc6578491610f91575b509538610ea0565b90506020813d8211610fbe575b81610fab60209383610b48565b81010312610fba575138610f89565b8380fd5b3d9150610f9e565b6040513d86823e3d90fd5b5060408901351515610e7d565b9190604051926060840184811067ffffffffffffffff821117610b32576040526002845260403660208601376110298461101781610cf8565b6001600160a01b038094169052610cd2565b91169052565b610124358015158103610b115790565b9190826040910312610b11576020825192015190565b3d15611080573d9061106682610b6a565b916110746040519384610b48565b82523d6000602084013e565b606090565b90816020910312610b1157518015158103610b115790565b919091604051916001600160a01b03602084019463095ea7b360e01b8652166024840152604483015260448252608082019282841067ffffffffffffffff851117610b32576000809493819460405251925af16110f8611055565b81611171575b501561110657565b60405162461bcd60e51b815260206004820152602860248201527f42617365537761707065723a3a73616665417070726f76653a20617070726f7660448201527f65206661696c65640000000000000000000000000000000000000000000000006064820152608490fd5b8051801592508215611186575b5050386110fe565b6111999250602080918301019101611085565b388061117e565b919091610104358015158103610b11576112e75750506001600160a01b03919250166040519060208201906323b872dd60e01b82523360248401523060448401528360648401526064835260a083019183831067ffffffffffffffff841117610b325760008091611256958560405261121886610b16565b602086527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460c0820152519082855af1611250611055565b91611357565b8051908161126357505090565b602080611274938301019101611085565b1561127c5790565b60405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608490fd5b60409392509060006001600160a01b0360a493865197889687956311a5cc7760e31b8752600487015230602487015230604487015260648601526084850152165af1908115610e235760009161133b575090565b611353915060403d811161041c5761040c8183610b48565b5090565b919290156113b9575081511561136b575090565b3b156113745790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156113cc5750805190602001fd5b60405162461bcd60e51b8152602060048201529081906113f0906024830190610a7b565b0390fdfea26469706673582212208a9f017c4b5cd6314aa295ef6eb9097a917a867ba5318f8b03a6554ad797702164736f6c63430008120033";

type UniswapV2SwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV2SwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV2Swapper__factory extends ContractFactory {
  constructor(...args: UniswapV2SwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UniswapV2Swapper";
  }

  override deploy(
    _router: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV2Swapper> {
    return super.deploy(
      _router,
      _factory,
      _yieldBox,
      overrides || {}
    ) as Promise<UniswapV2Swapper>;
  }
  override getDeployTransaction(
    _router: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _router,
      _factory,
      _yieldBox,
      overrides || {}
    );
  }
  override attach(address: string): UniswapV2Swapper {
    return super.attach(address) as UniswapV2Swapper;
  }
  override connect(signer: Signer): UniswapV2Swapper__factory {
    return super.connect(signer) as UniswapV2Swapper__factory;
  }
  static readonly contractName: "UniswapV2Swapper";

  public readonly contractName: "UniswapV2Swapper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV2SwapperInterface {
    return new utils.Interface(_abi) as UniswapV2SwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV2Swapper {
    return new Contract(address, _abi, signerOrProvider) as UniswapV2Swapper;
  }
}
