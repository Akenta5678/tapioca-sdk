/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  UniswapV2Swapper,
  UniswapV2SwapperInterface,
} from "../../Swapper/UniswapV2Swapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawFromYb",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "depositToYb",
        type: "bool",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenInId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenOutId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawFromYb",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "depositToYb",
        type: "bool",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IUniswapV2Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDefaultDexOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getInputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getOutputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0346200016557601f6200194c38819003918201601f191683019291906001600160401b038411838510176200016a5781606092849260409687528339810103126200016557620000518162000180565b9082620000616020830162000180565b910151916001600160a01b0380841692838503620001655760008054336001600160a01b0319821681178355885195859390928416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600180551692831562000156575016918215620001455715620001345760805260a05260c052516117b690816200019682396080518181816103a60152818161053b015281816106570152610f1d015260a0518161057f015260c051818181610337015281816105c3015281816106010152610e8e0152f35b835163d23f952160e01b8152600490fd5b845163d23f952160e01b8152600490fd5b63d23f952160e01b8152600490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620001655756fe6080604052600436101561001257600080fd5b60003560e01c80631a163210146100d75780633fa2ef5e146100d25780635bf66e48146100cd578063715018a6146100c85780637b2a8bd2146100c35780638da5cb5b146100be578063c31c9c07146100b9578063c45a0155146100b4578063de406577146100af578063e3c711a0146100aa578063efa84c6d146100a55763f2fde38b146100a057600080fd5b610825565b610780565b6105e7565b6105a3565b61055f565b61051b565b6104f4565b610473565b61041d565b61031d565b6101f0565b61011c565b919082519283825260005b848110610108575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016100e7565b346101505760003660031901126101505761014c6101386109fe565b6040519182916020835260208301906100dc565b0390f35b600080fd5b6001600160a01b0381160361015057565b8015150361015057565b6101ee909291926101006040610140830195606081516001600160a01b0380825116875260208201516020880152848201511684870152015160608501526060602082015180516080870152602081015160a08701528381015160c0870152015160e085015201519101906020809180511515845201511515910152565b565b346101505760c03660031901126101505761014c60043561021081610155565b6024359061021d82610155565b6084359061022a82610166565b60a4359261023784610166565b61023f6109a3565b506102486109a3565b93610251610943565b9260443584526064356020850152610267610943565b926001600160a01b0380921684521660408301526000602083015260006060830152610291610979565b93151584521515602084015283526020830152604082015260405191829182610170565b61014090600319011261015057600490565b600319810161016081126101505761014013610150576004916101443567ffffffffffffffff92838211610150578060238301121561015057818501359384116101505760248483010111610150576024019190565b346101505761039a6000610330366102c7565b505061037e7f00000000000000000000000000000000000000000000000000000000000000006103696103638285610b9b565b90610e2c565b92606081013590608060208201359101610ccb565b5060405163d06ca61f60e01b8152938492839260048401610af7565b03816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610418576000916103f7575b508051600110156103f2576040908101519051908152602090f35b610b1a565b610412913d8091833e61040a8183610742565b810190610a40565b386103d7565b610b0e565b3461015057600080600319360112610470576104376108eb565b806001600160a01b038154811981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b346101505760c03660031901126101505761014c60843561049381610166565b60a435906104a082610166565b6104a86109a3565b506104b16109a3565b916104ba610943565b90604435825260643560208301526104d0610943565b90600082526000604083015260043560208301526024356060830152610291610979565b346101505760003660031901126101505760206001600160a01b0360005416604051908152f35b346101505760003660031901126101505760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101505760003660031901126101505760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101505760003660031901126101505760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101505761064b60006105fa366102c7565b505061062d7f00000000000000000000000000000000000000000000000000000000000000006103696103638285610b9b565b6040516307c0329d60e21b8152948593849350909160048401610af7565b03816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156104185760009161069e575b508051156103f257602090810151604051908152f35b6106b1913d8091833e61040a8183610742565b38610688565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176106e957604052565b6106b7565b6060810190811067ffffffffffffffff8211176106e957604052565b6080810190811067ffffffffffffffff8211176106e957604052565b60a0810190811067ffffffffffffffff8211176106e957604052565b90601f8019910116810190811067ffffffffffffffff8211176106e957604052565b67ffffffffffffffff81116106e957601f01601f191660200190565b34610150576101a03660031901126101505761079b366102b5565b61016435906107a982610155565b610184359167ffffffffffffffff83116101505736602384011215610150578260040135916107d783610764565b926107e56040519485610742565b8084523660248287010111610150576020816000926024610813980183880137850101526101443590610e72565b60408051928352602083019190915290f35b346101505760203660031901126101505760043561084281610155565b61084a6108eb565b6001600160a01b038091168015610897576000918254826001600160a01b03198216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6001600160a01b036000541633036108ff57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b604051906080820182811067ffffffffffffffff8211176106e95760405260006060838281528260208201528260408201520152565b604051906040820182811067ffffffffffffffff8211176106e95760405260006020838281520152565b604051906060820182811067ffffffffffffffff8211176106e957604052816109ca610943565b81526109d4610943565b602082015260406109e3610979565b910152565b634e487b7160e01b600052601160045260246000fd5b610e104201804211610a235760405190602082015260208152610a20816106cd565b90565b6109e8565b67ffffffffffffffff81116106e95760051b60200190565b60209081818403126101505780519067ffffffffffffffff821161015057019180601f84011215610150578251610a7681610a28565b93610a846040519586610742565b818552838086019260051b820101928311610150578301905b828210610aab575050505090565b81518152908301908301610a9d565b90815180825260208080930193019160005b828110610ada575050505090565b83516001600160a01b031685529381019392810192600101610acc565b604090610a20939281528160208201520190610aba565b6040513d6000823e3d90fd5b634e487b7160e01b600052603260045260246000fd5b8051600110156103f25760400190565b80518210156103f25760209160051b010190565b35610a2081610155565b9190826080910312610150578151600581101561015057916020810151610b8481610155565b9160606040830151610b9581610155565b92015190565b91906001600160a01b039081610bb085610b54565b1615801590610c99575b15610bd6575050610a206040610bcf84610b54565b9301610b54565b604051630cf35bdd60e41b8082526020860135600483015294608093909216908381602481855afa91821561041857610c34938593606093600091610c78575b50976040519586948593849384520135600483019190602083019252565b03915afa91821561041857600092610c4b57505090565b610c6a9250803d10610c71575b610c628183610742565b810190610b5e565b5050905090565b503d610c58565b610c8f9150853d8711610c7157610c628183610742565b5050905038610c16565b50610cb5610ca960408601610b54565b6001600160a01b031690565b1515610bba565b90816020910312610150575190565b92939193600094600091853593841580801590610e1f575b15610cf957505050505060409192935092013590565b81929497939591610d9e575b50505082610d1257505050565b9293509091604081013580610d97575060405163442c159960e01b8152600481019390935260600135602483015260006044830152602090829060649082906001600160a01b03165afa90811561041857600091610d6f575b5090565b610a20915060203d8111610d90575b610d888183610742565b810190610cbc565b503d610d7e565b9250505090565b929750909115610e18575060405163442c159960e01b81526004810191909152602086810135602483015260006044830152816064816001600160a01b0386165afa90811561041857600091610dfa575b505b94388080610d05565b610e12915060203d8111610d9057610d888183610742565b38610def565b9050610df1565b5060408801351515610ce3565b919060405190610e3b826106ee565b600282526020820193604036863782948351156103f2576001600160a01b0380921690528251600110156103f25760409116910152565b90919392936002600154146111375760026001558492600080967f000000000000000000000000000000000000000000000000000000000000000094610eb88682610b9b565b610ec490829592610e2c565b60608301359590938491838a6020870135610ee4828c8360808c01610ccb565b5060a0890135918b6101008b0194610efb95611484565b9b8c968794610f0861117c565b610f11906116e6565b6001600160a01b039a8b7f0000000000000000000000000000000000000000000000000000000000000000169687610f4892611396565b610f506111c3565b610f59906116e6565b51159161012092611115575b610f8b610f9991610f7c610f7761123f565b6116e6565b60208082518301019101610cbc565b98610f94611278565b61173d565b610fa584610f94611278565b019b610fb08d6112b1565b1561110b57610fd830975b6040516338ed173960e01b815298899788968795600487016112bb565b03925af19081156104185761100a91611003918b916110f1575b50610ffe610f776112f3565b610b30565b51966112b1565b61101f575b505050505091906101ee60018055565b92878698969361105d856110a498956110546110478a61104160409c5161132c565b90610b40565b516001600160a01b031690565b96168096611396565b8551634d4d7cbd60e11b815260048101919091523060248201526001600160a01b0390921660448301526064820193909352600060848201529384928391829060a4820190565b03925af191821561041857916110c1575b5091388080808061100f565b6110e2915060403d81116110ea575b6110da8183610742565b81019061133b565b9050386110b5565b503d6110d0565b61110591503d808d833e61040a8183610742565b38610ff2565b610fd88b97610fbb565b50611121610f77611206565b610f99610f8b61112f6109fe565b915050610f65565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b60405190611189826106ee565b6025825264657220257360d81b6040837f556e69737761705632537761707065723a20617070726f76696e6720726f757460208201520152565b604051906111d0826106ee565b60218252603960f91b6040837f556e69737761705632537761707065723a20617070726f76656420726f75746560208201520152565b60405190611213826106cd565b601f82527f556e69737761705632537761707065723a206372656174696e672064617461006020830152565b6040519061124c826106cd565b601a82527f556e69737761705632537761707065723a206465636f64696e670000000000006020830152565b60405190611285826106cd565b601d82527f556e69737761705632537761707065723a207377617070696e672025730000006020830152565b35610a2081610166565b916080936112e8916001600160a01b0393989796988552602085015260a0604085015260a0840190610aba565b951660608201520152565b60405190611300826106cd565b601982527f556e69737761705632537761707065723a2073776170706564000000000000006020830152565b600019810191908211610a2357565b9190826040910312610150576020825192015190565b3d1561137c573d9061136282610764565b916113706040519384610742565b82523d6000602084013e565b606090565b908160209103126101505751610a2081610166565b60009291838093604051906001600160a01b03602083019463095ea7b360e01b86521660248301526044820152604481526113d08161070a565b51925af16113dc611351565b81611455575b50156113ea57565b60405162461bcd60e51b815260206004820152602860248201527f42617365537761707065723a3a73616665417070726f76653a20617070726f7660448201527f65206661696c65640000000000000000000000000000000000000000000000006064820152608490fd5b805180159250821561146a575b5050386113e2565b61147d9250602080918301019101611381565b3880611462565b94929193943561149381610166565b6114b15750505081610a209130906001600160a01b0333911661151f565b604093509060006001600160a01b0360a493869795975197889687956311a5cc7760e31b8752600487015230602487015230604487015260648601526084850152165af190811561041857600091611507575090565b610d6b915060403d81116110ea576110da8183610742565b906000806115b19460405194602097888701956323b872dd60e01b87526001600160a01b03938480921660248a015216604488015260648701526064865261156686610726565b169260405194611575866106cd565b8786527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656488870152519082855af16115ab611351565b91611640565b805190816115be57505050565b82806115ce938301019101611381565b156115d65750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b919290156116a25750815115611654575090565b3b1561165d5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156116b55750805190602001fd5b60405162461bcd60e51b81529081906116d190600483016116d5565b0390fd5b906020610a209281815201906100dc565b6117146117226101ee9260405192839163104c13eb60e21b60208401526020602484015260448301906100dc565b03601f198101835282610742565b600080916020815191016a636f6e736f6c652e6c6f675afa50565b61172261176c916101ee93604051938492632d839cb360e21b60208501526040602485015260648401906100dc565b90604483015203601f19810183528261074256fea26469706673582212203feb33f16fddb2743bb4f36e9e19584a07f4732d66b918a326b6b98024731aaa64736f6c63430008120033";

type UniswapV2SwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV2SwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV2Swapper__factory extends ContractFactory {
  constructor(...args: UniswapV2SwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UniswapV2Swapper";
  }

  override deploy(
    _router: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV2Swapper> {
    return super.deploy(
      _router,
      _factory,
      _yieldBox,
      overrides || {}
    ) as Promise<UniswapV2Swapper>;
  }
  override getDeployTransaction(
    _router: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _router,
      _factory,
      _yieldBox,
      overrides || {}
    );
  }
  override attach(address: string): UniswapV2Swapper {
    return super.attach(address) as UniswapV2Swapper;
  }
  override connect(signer: Signer): UniswapV2Swapper__factory {
    return super.connect(signer) as UniswapV2Swapper__factory;
  }
  static readonly contractName: "UniswapV2Swapper";

  public readonly contractName: "UniswapV2Swapper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV2SwapperInterface {
    return new utils.Interface(_abi) as UniswapV2SwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV2Swapper {
    return new Contract(address, _abi, signerOrProvider) as UniswapV2Swapper;
  }
}
