/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  UniswapV3Swapper,
  UniswapV3SwapperInterface,
} from "../../Swapper/UniswapV3Swapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "contract ISwapRouter",
        name: "_swapRouter",
        type: "address",
      },
      {
        internalType: "contract IUniswapV3Factory",
        name: "_factory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_old",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_new",
        type: "uint256",
      },
    ],
    name: "PoolFee",
    type: "event",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDefaultSwapData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getInputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getOutputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint24",
        name: "_newFee",
        type: "uint24",
      },
    ],
    name: "setPoolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0346200019357601f6200240038819003918201601f191683019291906001600160401b0384118385101762000198578160609284926040968752833981010312620001935780516001600160a01b0391908281168082036200019357602083015192848416908185036200019357860151948086169283870362000193576000543360018060a01b03198216176000558851923391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360018055610bb862ffffff1960025416176002551562000184575015620001735715620001625760805260a05260c052516122519081620001af823960805181818161024b0152818161046701528181610706015281816107920152818161082d01528181610885015281816109440152610ec3015260a051818181610281015281816104030152610d95015260c0518181816109c601528181610d510152610f480152f35b835163d23f952160e01b8152600490fd5b845163d23f952160e01b8152600490fd5b63d23f952160e01b8152600490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b60003560e01c908163089fe6aa146111a05750806312874bdb1461116c5780635bf66e4814610eb1578063715018a614610e4b57806373dd250c14610de05780638da5cb5b14610db9578063c31c9c0714610d75578063c45a015514610d31578063e3c711a01461092f578063efa84c6d146101605763f2fde38b1461009857600080fd5b3461015b57602036600319011261015b576004356001600160a01b0380821680920361015b576100c66112cc565b811561010757600054826001600160a01b0319821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b600080fd5b3461015b5736600319016101a0811261015b576101401361015b576001600160a01b036101643516610164350361015b576101843567ffffffffffffffff811161015b573660238201121561015b5780600401356101bd816112b0565b916101cb604051938461128e565b818352366024838301011161015b578160009260246020930183860137830101528060006004356001600160a01b03811680820361015b5715801590610913575b1561080757916044356001600160a01b038116810361015b57935b600060843580158015906107fc575b156106b65761026f91505b60a43590602435877f000000000000000000000000000000000000000000000000000000000000000061169d565b60405163095ea7b360e01b60208201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660248201526044810182905290929060009081906102d481606481015b03601f19810183528261128e565b60208151910182895af16102e6611655565b81610687575b501561065d57511561064f575b60208180518101031261015b576020015162ffffff600254169361031b61162f565b1561064657305b604051958661010081011067ffffffffffffffff61010089011117610630576001600160a01b038093610100890160405216875282881660208801526040870152166060850152608084015260a08301526101443560c0830152600060e08301526001600160a01b0360e06040519363414bf389821b855282815116600486015282602082015116602486015262ffffff60408201511660448601528260608201511660648601526080810151608486015260a081015160a486015260c081015160c486015201511660e48301526020826101048160006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1918215610556576000926105fc575b5061043d61162f565b610452575b6040809350519182526020820152f35b5060405163095ea7b360e01b602082019081527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660248301819052604483018490529360009283929083906104b381606481016102c6565b51925af16104bf611655565b816105cd575b501561056257604060009260a4825180958193634d4d7cbd60e11b835260643560048401523060248401526001600160a01b03610164351660448401528660648401528160848401525af1801561055657604092600091610527575b50610442565b6105479150833d851161054f575b61053f818361128e565b81019061163f565b905083610521565b503d610535565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152602860248201527f42617365537761707065723a3a73616665417070726f76653a20617070726f7660448201527f65206661696c65640000000000000000000000000000000000000000000000006064820152608490fd5b80518015925082156105e2575b5050836104c5565b6105f59250602080918301019101611685565b83806105da565b9091506020813d602011610628575b816106186020938361128e565b8101031261015b57519083610434565b3d915061060b565b634e487b7160e01b600052604160045260246000fd5b61016435610322565b50610658611324565b6102f9565b60405162461bcd60e51b8152602060048201526002602482015261534160f01b6044820152606490fd5b805180159250821561069c575b5050876102ec565b6106af9250602080918301019101611685565b8780610694565b506024358061075e575b50606435806106d4575b5061026f90610241565b6040519063442c159960e01b8252600482015260e4356024820152600060448201526020816064816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa801561055657156106ca57602090813d8311610757575b610749818361128e565b8101031261015b57866106ca565b503d61073f565b90506040519063442c159960e01b8252600482015260a4356024820152600060448201526020816064816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610556576000916107ca575b50866106c0565b90506020813d6020116107f4575b816107e56020938361128e565b8101031261015b5751866107c3565b3d91506107d8565b5060c4351515610236565b50604051630cf35bdd60e41b815260243560048201526080816024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610556576000916108f0575b5091604051630cf35bdd60e41b815260643560048201526080816024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610556576000916108bd575b5093610227565b6108df915060803d6080116108e9575b6108d7818361128e565b810190611387565b50509050856108b6565b503d6108cd565b610909915060803d6080116108e9576108d7818361128e565b505090508461085e565b506044356001600160a01b03811680910361015b57151561020c565b3461015b5761098661094036611200565b50507f000000000000000000000000000000000000000000000000000000000000000061096d81836113c0565b93909160209360608101359060808682013591016114b4565b600254604051630b4c774160e11b81526001600160a01b038581166004830152878116602483015262ffffff9092166044820152919592509084816064817f000000000000000000000000000000000000000000000000000000000000000086165afa90811561055657600091610cfc575b508160405191610a0783611256565b600283528683016040368237603c610a1e85611909565b526000610a2a8561192c565b5260405192839163883bdbfd60e01b8352602495868401908b60048601525180915260448401919060005b8c828210610cdc5750505050600093918380920392165afa90811561055657600090600092610bd2575b50610a93610a8c8261192c565b5191611909565b5160060b9060060b0390667fffffffffffff8213667fffffffffffff19831217610bbd5783610acd81610ac58461192c565b511692611909565b51169003928311610ba85760060b916000603c840560020b93600081129081610b94575b50610b6b575b80610b585750851b77ffffffffffffffffffffffffffffffffffffffff000000001615610b4457506fffffffffffffffffffffffffffffffff610b3c9495169061194f565b604051908152f35b634e487b7160e01b60009081526012600452fd5b634e487b7160e01b815260116004529050fd5b92627fffff198114610b81576000190192610af7565b634e487b7160e01b845260116004528284fd5b915050603c6000910760060b151589610af1565b50634e487b7160e01b60009081526011600452fd5b82634e487b7160e01b60005260116004526000fd5b9150503d806000833e610be5818361128e565b81019060408183031261015b57805167ffffffffffffffff9081811161015b5782019183601f8401121561015b57825192610c1f846118f1565b93610c2d604051958661128e565b8085528a8086019160051b8301019186831161015b578b01905b828210610cc3575050508881015191821161015b57019180601f8401121561015b578251610c74816118f1565b93610c82604051958661128e565b818552898086019260051b82010192831161015b578901905b828210610cab5750505088610a7f565b8151878116810361015b578152908901908901610c9b565b81518060060b810361015b578152908b01908b01610c47565b835163ffffffff1685528896508a95509384019390920191600101610a55565b90508481813d8311610d2a575b610d13818361128e565b8101031261015b57610d249061135f565b866109f8565b503d610d09565b3461015b57600036600319011261015b5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461015b57600036600319011261015b5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461015b57600036600319011261015b5760206001600160a01b0360005416604051908152f35b3461015b57602036600319011261015b5760043562ffffff80821680920361015b57610e0a6112cc565b7f2bff118b9b9e3deb4fc5204e6ba828351c954685d0b119d0e21add79f878339960406002549281519084168152846020820152a162ffffff191617600255005b3461015b57600036600319011261015b57610e646112cc565b6000805473ffffffffffffffffffffffffffffffffffffffff19811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461015b57610ebf36611200565b50507f000000000000000000000000000000000000000000000000000000000000000090610f09610ef083836113c0565b91909360209360608101359060808682013591016114b4565b50600254604051630b4c774160e11b81526001600160a01b038681166004830152848116602483015262ffffff909216604482015291949184816064817f000000000000000000000000000000000000000000000000000000000000000086165afa90811561055657600091611137575b508160405191610f8983611256565b600283528683016040368237603c610fa085611909565b526000610fac8561192c565b5260405192839163883bdbfd60e01b8352602495868401908b60048601525180915260448401919060005b8c8282106111175750505050600093918380920392165afa9081156105565760009060009261100d5750610a93610a8c8261192c565b9150503d806000833e611020818361128e565b81019060408183031261015b57805167ffffffffffffffff9081811161015b5782019183601f8401121561015b5782519261105a846118f1565b93611068604051958661128e565b8085528a8086019160051b8301019186831161015b578b01905b8282106110fe575050508881015191821161015b57019180601f8401121561015b5782516110af816118f1565b936110bd604051958661128e565b818552898086019260051b82010192831161015b578901905b8282106110e65750505088610a7f565b8151878116810361015b5781529089019089016110d6565b81518060060b810361015b578152908b01908b01611082565b835163ffffffff1685528896508a95509384019390920191600101610fd7565b90508481813d8311611165575b61114e818361128e565b8101031261015b5761115f9061135f565b86610f7a565b503d611144565b3461015b57600036600319011261015b5761119c611188611324565b6040519182916020835260208301906111c0565b0390f35b3461015b57600036600319011261015b5760209062ffffff600254168152f35b919082519283825260005b8481106111ec575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016111cb565b6003198101610160811261015b576101401361015b576004916101443567ffffffffffffffff9283821161015b578060238301121561015b578185013593841161015b576024848301011161015b576024019190565b6060810190811067ffffffffffffffff82111761063057604052565b6040810190811067ffffffffffffffff82111761063057604052565b90601f8019910116810190811067ffffffffffffffff82111761063057604052565b67ffffffffffffffff811161063057601f01601f191660200190565b6001600160a01b036000541633036112e057565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b610e104201804211611349576040519060208201526020815261134681611272565b90565b634e487b7160e01b600052601160045260246000fd5b51906001600160a01b038216820361015b57565b356001600160a01b038116810361015b5790565b919082608091031261015b578151600581101561015b57916113ab6020820161135f565b9160606113ba6040840161135f565b92015190565b91906001600160a01b0390816113d585611373565b161580159061149e575b156113fb57505061134660406113f484611373565b9301611373565b1691604051630cf35bdd60e41b90818152602083013560048201526080928382602481895afa91821561055657606093859360249260009161147d575b509760405195869485938452013560048301525afa9182156105565760009261146057505090565b6114769250803d106108e9576108d7818361128e565b5050905090565b6114949150853d87116108e9576108d7818361128e565b5050905038611438565b50816114ac60408601611373565b1615156113df565b939284359260009283928392918615801590611622575b156114df5750505050505060409092013590565b80919293959894979650611594575b50816114fb575b50505050565b606093949550602092916001600160a01b03606492604051968795869463442c159960e01b8652600486015201356024840152876044840152165afa918215611588578092611551575b505090388080806114f5565b9091506020823d8211611580575b8161156c6020938361128e565b8101031261157d5750513880611545565b80fd5b3d915061155f565b604051903d90823e3d90fd5b9096506040519063442c159960e01b82526004820152602083013560248201528360448201526020816064816001600160a01b038b165afa9081156116175784916115e2575b5095386114ee565b90506020813d821161160f575b816115fc6020938361128e565b8101031261160b5751386115da565b8380fd5b3d91506115ef565b6040513d86823e3d90fd5b50604089013515156114cb565b61012435801515810361015b5790565b919082604091031261015b576020825192015190565b3d15611680573d90611666826112b0565b91611674604051938461128e565b82523d6000602084013e565b606090565b9081602091031261015b5751801515810361015b5790565b91909161010435801515810361015b576117e45750506001600160a01b03919250166040519060208201906323b872dd60e01b82523360248401523060448401528360648401526064835260a083019183831067ffffffffffffffff8411176106305760008091611753958560405261171586611272565b602086527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460c0820152519082855af161174d611655565b91611854565b8051908161176057505090565b602080611771938301019101611685565b156117795790565b60405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608490fd5b60409392509060006001600160a01b0360a493865197889687956311a5cc7760e31b8752600487015230602487015230604487015260648601526084850152165af190811561055657600091611838575090565b611850915060403d811161054f5761053f818361128e565b5090565b919290156118b65750815115611868575090565b3b156118715790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156118c95750805190602001fd5b60405162461bcd60e51b8152602060048201529081906118ed9060248301906111c0565b0390fd5b67ffffffffffffffff81116106305760051b60200190565b8051156119165760200190565b634e487b7160e01b600052603260045260246000fd5b8051600110156119165760400190565b8181029291811591840414171561134957565b9291909260020b9060008212600014611ef357600160ff1b821461134957816000035b620d89e88111611eca576001811615611eae5770ffffffffffffffffffffffffffffffffff6ffffcb933bd6fad37aa2d162d1a5940015b169260028216611e82575b600491828116611e56575b60088116611e2a575b60108116611dfe575b60208116611dd2575b60408116611da6575b608090818116611d7b575b6101008116611d50575b6102008116611d25575b6104008116611cfa575b6108008116611ccf575b6110008116611ca4575b6120008116611c79575b6140008116611c4e575b6180008116611c23575b620100008116611bf8575b620200008116611bce575b620400008116611b90575b6208000016611b51575b50600012611b2b575b63ffffffff8360201c931615600014611b225760ff60005b168301809311611b0d57506fffffffffffffffffffffffffffffffff916001600160a01b039081908116848111611ae45780611ac59161193c565b941691161015611ada576113469216906121a5565b611346921661214a565b80611aee91611ef9565b941691161015611b03576113469216906120db565b6113469216611f87565b601190634e487b7160e01b6000525260246000fd5b60ff6001611a8a565b918015611b3c576000190491611a72565b601283634e487b7160e01b6000525260246000fd5b6b048a170391f7dc42444e8fa294919491828102928184041490151715611b7b571c926000611a69565b601183634e487b7160e01b6000525260246000fd5b946d2216e584f5fa1ea926041bedfe9890818102918183041490151715611bb957811c94611a5f565b601184634e487b7160e01b6000525260246000fd5b946e5d6af8dedb81196699c329225ee60490818102918183041490151715611bb957811c94611a54565b946f09aa508b5b7a84e1c677de54f3e99bc990818102918183041490151715611bb957811c94611a49565b946f31be135f97d08fd981231505542fcfa690818102918183041490151715611bb957811c94611a3e565b946f70d869a156d2a1b890bb3df62baf32f790818102918183041490151715611bb957811c94611a34565b946fa9f746462d870fdf8a65dc1f90e061e590818102918183041490151715611bb957811c94611a2a565b946fd097f3bdfd2022b8845ad8f792aa582590818102918183041490151715611bb957811c94611a20565b946fe7159475a2c29b7443b29c7fa6e889d990818102918183041490151715611bb957811c94611a16565b946ff3392b0822b70005940c7a398e4b70f390818102918183041490151715611bb957811c94611a0c565b946ff987a7253ac413176f2b074cf7815e5490818102918183041490151715611bb957811c94611a02565b946ffcbe86c7900a88aedcffc83b479aa3a490818102918183041490151715611bb957811c946119f8565b946ffe5dee046a99a2a811c461f1969c305390818102918183041490151715611bb957811c946119ee565b936fff2ea16466c96a3843ec78b326b5286190818102918183041490151715611b7b5760801c936119e3565b936fff973b41fa98c081472e6896dfb254c090818102918183041490151715611b7b5760801c936119da565b936fffcb9843d60f6159c9db58835c92664490818102918183041490151715611b7b5760801c936119d1565b936fffe5caca7e10e4e61c3624eaa0941cd090818102918183041490151715611b7b5760801c936119c8565b936ffff2e50f5f656932ef12357cf3c7fdcc90818102918183041490151715611b7b5760801c936119bf565b926ffff97272373d413259a46990580e213a908181029181830414901517156113495760801c926119b4565b70ffffffffffffffffffffffffffffffffff600160801b6119a9565b60405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606490fd5b81611972565b6000198282099082810290818084109303938385039360009514611f7c57680100000000000000009184831115611f785709918183118481830395611f6457508460c01b948504600160c01b1491141715611349570360401c17808004600114811517156113495790565b634e487b7160e01b81526011600452602490fd5b8580fd5b505060401c92915050565b600160801b9291600019828509938260801b928380871096039580870396146120cc578583111561015b578291099080196001810180911161134957811680910491611fe2600096600184808a03040190868411900361193c565b928060030296600388048203611f64576002809818612001818461193c565b8903908982116120b857906120159161193c565b61201f818461193c565b8903908982116120b857906120339161193c565b61203d818461193c565b8903908982116120b857906120519161193c565b61205b818461193c565b8903908982116120b8579061206f9161193c565b612079818461193c565b8903908982116120b857612097916120909161193c565b809361193c565b8803978811611f64575061134695966120af9161193c565b9303041761193c565b634e487b7160e01b83526011600452602483fd5b5050809293501561015b570490565b6000198282098282029081808210910393818503916000951461213f57600160801b9382851115611f78579084910992828411908582840396611f6457508560801b9586041491141715611349570360801c17808004600114811517156113495790565b505060801c92915050565b600160c01b9291600019828509938260c01b928380871096039580870396146120cc578583111561015b578291099080196001810180911161134957811680910491611fe2600096600184808a03040190868411900361193c565b600019828209908281029081808410930393838503936000951461221057600160c01b9184831115611f785709918183118481830395611f6457508460401b948504680100000000000000001491141715611349570360c01c17808004600114811517156113495790565b505060c01c9291505056fea2646970667358221220cb714f88f097d6f87abaec4a70fecfd3e5f6cd6f947be87dcd14e964635b748964736f6c63430008120033";

type UniswapV3SwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3SwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3Swapper__factory extends ContractFactory {
  constructor(...args: UniswapV3SwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UniswapV3Swapper";
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    _swapRouter: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV3Swapper> {
    return super.deploy(
      _yieldBox,
      _swapRouter,
      _factory,
      overrides || {}
    ) as Promise<UniswapV3Swapper>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    _swapRouter: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yieldBox,
      _swapRouter,
      _factory,
      overrides || {}
    );
  }
  override attach(address: string): UniswapV3Swapper {
    return super.attach(address) as UniswapV3Swapper;
  }
  override connect(signer: Signer): UniswapV3Swapper__factory {
    return super.connect(signer) as UniswapV3Swapper__factory;
  }
  static readonly contractName: "UniswapV3Swapper";

  public readonly contractName: "UniswapV3Swapper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3SwapperInterface {
    return new utils.Interface(_abi) as UniswapV3SwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3Swapper {
    return new Contract(address, _abi, signerOrProvider) as UniswapV3Swapper;
  }
}
