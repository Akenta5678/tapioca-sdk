/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  UniswapV3Swapper,
  UniswapV3SwapperInterface,
} from "../../Swapper/UniswapV3Swapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "contract ISwapRouter",
        name: "_swapRouter",
        type: "address",
      },
      {
        internalType: "contract IUniswapV3Factory",
        name: "_factory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_old",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_new",
        type: "uint256",
      },
    ],
    name: "PoolFee",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawFromYb",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "depositToYb",
        type: "bool",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenInId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenOutId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawFromYb",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "depositToYb",
        type: "bool",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDefaultDexOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getInputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getOutputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint24",
        name: "_newFee",
        type: "uint24",
      },
    ],
    name: "setPoolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0346200019357601f620026f238819003918201601f191683019291906001600160401b0384118385101762000198578160609284926040968752833981010312620001935780516001600160a01b0391908281168082036200019357602083015192848416908185036200019357860151948086169283870362000193576000543360018060a01b03198216176000558851923391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360018055610bb862ffffff1960025416176002551562000184575015620001735715620001625760805260a05260c052516125439081620001af82396080518181816102610152818161047d01528181610726015281816107d001528181610875015281816108cd0152818161098c015261101c015260a051818181610297015281816104190152610ddd015260c051818181610a0e01528181610d9901526110a10152f35b835163d23f952160e01b8152600490fd5b845163d23f952160e01b8152600490fd5b63d23f952160e01b8152600490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b60003560e01c908163089fe6aa14611388575080631a163210146113585780633fa2ef5e146112c55780635bf66e481461100a578063715018a614610fa457806373dd250c14610f395780637b2a8bd214610e285780638da5cb5b14610e01578063c31c9c0714610dbd578063c45a015514610d79578063e3c711a014610977578063efa84c6d146101755763f2fde38b146100ae57600080fd5b34610170576020366003190112610170576100c76113e8565b6100cf6114e8565b6001600160a01b0380911690811561011c57600054826001600160a01b0319821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b600080fd5b346101705736600319016101a081126101705761014013610170576001600160a01b0361016435166101643503610170576101843567ffffffffffffffff811161017057366023820112156101705780600401356101d2816114cc565b916101e060405193846114aa565b8183523660248383010111610170578160009260246020930183860137830101528060006004356001600160a01b038116808203610170571580159061095b575b1561084f57916044356001600160a01b038116810361017057935b60006084358015801581610844575b156106cc575061028591505b60a43590602435877f000000000000000000000000000000000000000000000000000000000000000061198f565b60405163095ea7b360e01b60208201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660248201526044810182905290929060009081906102ea81606481015b03601f1981018352826114aa565b60208151910182895af16102fc611947565b8161069d575b5015610673575115610665575b602081805181010312610170576020015162ffffff6002541693610331611921565b1561065c57305b604051958661010081011067ffffffffffffffff61010089011117610646576001600160a01b038093610100890160405216875282881660208801526040870152166060850152608084015260a08301526101443560c0830152600060e08301526001600160a01b0360e06040519363414bf389821b855282815116600486015282602082015116602486015262ffffff60408201511660448601528260608201511660648601526080810151608486015260a081015160a486015260c081015160c486015201511660e48301526020826101048160006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af191821561056c57600092610612575b50610453611921565b610468575b6040809350519182526020820152f35b5060405163095ea7b360e01b602082019081527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660248301819052604483018490529360009283929083906104c981606481016102dc565b51925af16104d5611947565b816105e3575b501561057857604060009260a4825180958193634d4d7cbd60e11b835260643560048401523060248401526001600160a01b03610164351660448401528660648401528160848401525af1801561056c5760409260009161053d575b50610458565b61055d9150833d8511610565575b61055581836114aa565b810190611931565b905083610537565b503d61054b565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152602860248201527f42617365537761707065723a3a73616665417070726f76653a20617070726f7660448201527f65206661696c65640000000000000000000000000000000000000000000000006064820152608490fd5b80518015925082156105f8575b5050836104db565b61060b9250602080918301019101611977565b83806105f0565b9091506020813d60201161063e575b8161062e602093836114aa565b810103126101705751908361044a565b3d9150610621565b634e487b7160e01b600052604160045260246000fd5b61016435610338565b5061066e6115e5565b61030f565b60405162461bcd60e51b8152602060048201526002602482015261534160f01b6044820152606490fd5b80518015925082156106b2575b505087610302565b6106c59250602080918301019101611977565b87806106aa565b906024359182610794575b505050606435806106ed575b5061028590610257565b60c43561078a576040519063442c159960e01b8252600482015260e4356024820152600060448201526020816064816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa801561056c5761075f575b50610285905b906106e3565b602090813d8311610783575b61077581836114aa565b810103126101705786610753565b503d61076b565b5061028590610759565b919250901561083d57506040519063442c159960e01b8252600482015260a4356024820152600060448201526020816064816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa90811561056c5760009161080b575b505b8680806106d7565b90506020813d602011610835575b81610826602093836114aa565b81010312610170575186610801565b3d9150610819565b9050610803565b5060c435151561024b565b50604051630cf35bdd60e41b815260243560048201526080816024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa90811561056c57600091610938575b5091604051630cf35bdd60e41b815260643560048201526080816024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa90811561056c57600091610905575b509361023c565b610927915060803d608011610931575b61091f81836114aa565b810190611648565b50509050856108fe565b503d610915565b610951915060803d6080116109315761091f81836114aa565b50509050846108a6565b506044356001600160a01b038116809103610170571515610221565b34610170576109ce6109883661141c565b50507f00000000000000000000000000000000000000000000000000000000000000006109b58183611681565b9390916020936060810135906080868201359101611775565b600254604051630b4c774160e11b81526001600160a01b038581166004830152878116602483015262ffffff9092166044820152919592509084816064817f000000000000000000000000000000000000000000000000000000000000000086165afa90811561056c57600091610d44575b508160405191610a4f83611472565b600283528683016040368237603c610a6685611bfb565b526000610a7285611c1e565b5260405192839163883bdbfd60e01b8352602495868401908b60048601525180915260448401919060005b8c828210610d245750505050600093918380920392165afa90811561056c57600090600092610c1a575b50610adb610ad482611c1e565b5191611bfb565b5160060b9060060b0390667fffffffffffff8213667fffffffffffff19831217610c055783610b1581610b0d84611c1e565b511692611bfb565b51169003928311610bf05760060b916000603c840560020b93600081129081610bdc575b50610bb3575b80610ba05750851b77ffffffffffffffffffffffffffffffffffffffff000000001615610b8c57506fffffffffffffffffffffffffffffffff610b8494951690611c41565b604051908152f35b634e487b7160e01b60009081526012600452fd5b634e487b7160e01b815260116004529050fd5b92627fffff198114610bc9576000190192610b3f565b634e487b7160e01b845260116004528284fd5b915050603c6000910760060b151589610b39565b50634e487b7160e01b60009081526011600452fd5b82634e487b7160e01b60005260116004526000fd5b9150503d806000833e610c2d81836114aa565b81019060408183031261017057805167ffffffffffffffff908181116101705782019183601f8401121561017057825192610c6784611be3565b93610c7560405195866114aa565b8085528a8086019160051b83010191868311610170578b01905b828210610d0b575050508881015191821161017057019180601f84011215610170578251610cbc81611be3565b93610cca60405195866114aa565b818552898086019260051b820101928311610170578901905b828210610cf35750505088610ac7565b81518781168103610170578152908901908901610ce3565b81518060060b8103610170578152908b01908b01610c8f565b835163ffffffff1685528896508a95509384019390920191600101610a9d565b90508481813d8311610d72575b610d5b81836114aa565b8101031261017057610d6c90611620565b86610a40565b503d610d51565b346101705760003660031901126101705760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101705760003660031901126101705760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101705760003660031901126101705760206001600160a01b0360005416604051908152f35b346101705760c036600319011261017057610f35610e446113fe565b610e4c61140d565b90610e556115a0565b50610e5e6115a0565b91610e67611540565b9060443582526064356020830152610e7d611540565b90600082526000604083015260043560208301526024356060830152610ea1611576565b9315158452151560208401528352602083015260408201526040519182918291909161012060206040610140840195606081516001600160a01b03808251168852858201518689015284820151168488015201516060860152606083820151805160808801528481015160a08801528381015160c0880152015160e086015201518051151561010085015201511515910152565b0390f35b346101705760203660031901126101705760043562ffffff80821680920361017057610f636114e8565b7f2bff118b9b9e3deb4fc5204e6ba828351c954685d0b119d0e21add79f878339960406002549281519084168152846020820152a162ffffff191617600255005b3461017057600036600319011261017057610fbd6114e8565b6000805473ffffffffffffffffffffffffffffffffffffffff19811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610170576110183661141c565b50507f0000000000000000000000000000000000000000000000000000000000000000906110626110498383611681565b9190936020936060810135906080868201359101611775565b50600254604051630b4c774160e11b81526001600160a01b038681166004830152848116602483015262ffffff909216604482015291949184816064817f000000000000000000000000000000000000000000000000000000000000000086165afa90811561056c57600091611290575b5081604051916110e283611472565b600283528683016040368237603c6110f985611bfb565b52600061110585611c1e565b5260405192839163883bdbfd60e01b8352602495868401908b60048601525180915260448401919060005b8c8282106112705750505050600093918380920392165afa90811561056c576000906000926111665750610adb610ad482611c1e565b9150503d806000833e61117981836114aa565b81019060408183031261017057805167ffffffffffffffff908181116101705782019183601f84011215610170578251926111b384611be3565b936111c160405195866114aa565b8085528a8086019160051b83010191868311610170578b01905b828210611257575050508881015191821161017057019180601f8401121561017057825161120881611be3565b9361121660405195866114aa565b818552898086019260051b820101928311610170578901905b82821061123f5750505088610ac7565b8151878116810361017057815290890190890161122f565b81518060060b8103610170578152908b01908b016111db565b835163ffffffff1685528896508a95509384019390920191600101611130565b90508481813d83116112be575b6112a781836114aa565b81010312610170576112b890611620565b866110d3565b503d61129d565b346101705760c0366003190112610170576112de6113e8565b6024356001600160a01b039182821680920361017057610f35926113006113fe565b9161130961140d565b6113116115a0565b5061131a6115a0565b94611323611540565b9360443585526064356020860152611339611540565b9316835260408301526000602083015260006060830152610ea1611576565b3461017057600036600319011261017057610f356113746115e5565b6040519182916020835260208301906113a8565b346101705760003660031901126101705760209062ffffff600254168152f35b919082519283825260005b8481106113d4575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016113b3565b600435906001600160a01b038216820361017057565b60843590811515820361017057565b60a43590811515820361017057565b600319810161016081126101705761014013610170576004916101443567ffffffffffffffff92838211610170578060238301121561017057818501359384116101705760248483010111610170576024019190565b6060810190811067ffffffffffffffff82111761064657604052565b6040810190811067ffffffffffffffff82111761064657604052565b90601f8019910116810190811067ffffffffffffffff82111761064657604052565b67ffffffffffffffff811161064657601f01601f191660200190565b6001600160a01b036000541633036114fc57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b604051906080820182811067ffffffffffffffff8211176106465760405260006060838281528260208201528260408201520152565b604051906040820182811067ffffffffffffffff8211176106465760405260006020838281520152565b604051906060820182811067ffffffffffffffff82111761064657604052816115c7611540565b81526115d1611540565b602082015260406115e0611576565b910152565b610e10420180421161160a57604051906020820152602081526116078161148e565b90565b634e487b7160e01b600052601160045260246000fd5b51906001600160a01b038216820361017057565b356001600160a01b03811681036101705790565b91908260809103126101705781516005811015610170579161166c60208201611620565b91606061167b60408401611620565b92015190565b91906001600160a01b03908161169685611634565b161580159061175f575b156116bc57505061160760406116b584611634565b9301611634565b1691604051630cf35bdd60e41b90818152602083013560048201526080928382602481895afa91821561056c57606093859360249260009161173e575b509760405195869485938452013560048301525afa91821561056c5760009261172157505090565b6117379250803d106109315761091f81836114aa565b5050905090565b6117559150853d87116109315761091f81836114aa565b50509050386116f9565b508161176d60408601611634565b1615156116a0565b939284359260009283928392918615801581611914575b156117a1575050505050505060409092013590565b81929394969995989791611874575b505050816117bf575b50505050565b9091929394506040830135801560001461186a57509160646020926001600160a01b03606095604051968795869463442c159960e01b8652600486015201356024840152876044840152165afa91821561185e578092611827575b50505b90388080806117b9565b9091506020823d8211611856575b81611842602093836114aa565b81010312611853575051388061181a565b80fd5b3d9150611835565b604051903d90823e3d90fd5b935050505061181d565b92985090911561190d57506040519063442c159960e01b82526004820152602083013560248201528360448201526020816064816001600160a01b038b165afa9081156119025784916118cd575b505b953880806117b0565b90506020813d82116118fa575b816118e7602093836114aa565b810103126118f65751386118c2565b8380fd5b3d91506118da565b6040513d86823e3d90fd5b90506118c4565b5060408a0135151561178c565b6101243580151581036101705790565b9190826040910312610170576020825192015190565b3d15611972573d90611958826114cc565b9161196660405193846114aa565b82523d6000602084013e565b606090565b90816020910312610170575180151581036101705790565b91909161010435801515810361017057611ad65750506001600160a01b03919250166040519060208201906323b872dd60e01b82523360248401523060448401528360648401526064835260a083019183831067ffffffffffffffff8411176106465760008091611a459585604052611a078661148e565b602086527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460c0820152519082855af1611a3f611947565b91611b46565b80519081611a5257505090565b602080611a63938301019101611977565b15611a6b5790565b60405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608490fd5b60409392509060006001600160a01b0360a493865197889687956311a5cc7760e31b8752600487015230602487015230604487015260648601526084850152165af190811561056c57600091611b2a575090565b611b42915060403d81116105655761055581836114aa565b5090565b91929015611ba85750815115611b5a575090565b3b15611b635790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015611bbb5750805190602001fd5b60405162461bcd60e51b815260206004820152908190611bdf9060248301906113a8565b0390fd5b67ffffffffffffffff81116106465760051b60200190565b805115611c085760200190565b634e487b7160e01b600052603260045260246000fd5b805160011015611c085760400190565b8181029291811591840414171561160a57565b9291909260020b90600082126000146121e557600160ff1b821461160a57816000035b620d89e881116121bc5760018116156121a05770ffffffffffffffffffffffffffffffffff6ffffcb933bd6fad37aa2d162d1a5940015b169260028216612174575b600491828116612148575b6008811661211c575b601081166120f0575b602081166120c4575b60408116612098575b60809081811661206d575b6101008116612042575b6102008116612017575b6104008116611fec575b6108008116611fc1575b6110008116611f96575b6120008116611f6b575b6140008116611f40575b6180008116611f15575b620100008116611eea575b620200008116611ec0575b620400008116611e82575b6208000016611e43575b50600012611e1d575b63ffffffff8360201c931615600014611e145760ff60005b168301809311611dff57506fffffffffffffffffffffffffffffffff916001600160a01b039081908116848111611dd65780611db791611c2e565b941691161015611dcc57611607921690612497565b611607921661243c565b80611de0916121eb565b941691161015611df5576116079216906123cd565b6116079216612279565b601190634e487b7160e01b6000525260246000fd5b60ff6001611d7c565b918015611e2e576000190491611d64565b601283634e487b7160e01b6000525260246000fd5b6b048a170391f7dc42444e8fa294919491828102928184041490151715611e6d571c926000611d5b565b601183634e487b7160e01b6000525260246000fd5b946d2216e584f5fa1ea926041bedfe9890818102918183041490151715611eab57811c94611d51565b601184634e487b7160e01b6000525260246000fd5b946e5d6af8dedb81196699c329225ee60490818102918183041490151715611eab57811c94611d46565b946f09aa508b5b7a84e1c677de54f3e99bc990818102918183041490151715611eab57811c94611d3b565b946f31be135f97d08fd981231505542fcfa690818102918183041490151715611eab57811c94611d30565b946f70d869a156d2a1b890bb3df62baf32f790818102918183041490151715611eab57811c94611d26565b946fa9f746462d870fdf8a65dc1f90e061e590818102918183041490151715611eab57811c94611d1c565b946fd097f3bdfd2022b8845ad8f792aa582590818102918183041490151715611eab57811c94611d12565b946fe7159475a2c29b7443b29c7fa6e889d990818102918183041490151715611eab57811c94611d08565b946ff3392b0822b70005940c7a398e4b70f390818102918183041490151715611eab57811c94611cfe565b946ff987a7253ac413176f2b074cf7815e5490818102918183041490151715611eab57811c94611cf4565b946ffcbe86c7900a88aedcffc83b479aa3a490818102918183041490151715611eab57811c94611cea565b946ffe5dee046a99a2a811c461f1969c305390818102918183041490151715611eab57811c94611ce0565b936fff2ea16466c96a3843ec78b326b5286190818102918183041490151715611e6d5760801c93611cd5565b936fff973b41fa98c081472e6896dfb254c090818102918183041490151715611e6d5760801c93611ccc565b936fffcb9843d60f6159c9db58835c92664490818102918183041490151715611e6d5760801c93611cc3565b936fffe5caca7e10e4e61c3624eaa0941cd090818102918183041490151715611e6d5760801c93611cba565b936ffff2e50f5f656932ef12357cf3c7fdcc90818102918183041490151715611e6d5760801c93611cb1565b926ffff97272373d413259a46990580e213a9081810291818304149015171561160a5760801c92611ca6565b70ffffffffffffffffffffffffffffffffff600160801b611c9b565b60405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606490fd5b81611c64565b600019828209908281029081808410930393838503936000951461226e5768010000000000000000918483111561226a570991818311848183039561225657508460c01b948504600160c01b149114171561160a570360401c178080046001148115171561160a5790565b634e487b7160e01b81526011600452602490fd5b8580fd5b505060401c92915050565b600160801b9291600019828509938260801b928380871096039580870396146123be5785831115610170578291099080196001810180911161160a578116809104916122d4600096600184808a030401908684119003611c2e565b9280600302966003880482036122565760028098186122f38184611c2e565b8903908982116123aa579061230791611c2e565b6123118184611c2e565b8903908982116123aa579061232591611c2e565b61232f8184611c2e565b8903908982116123aa579061234391611c2e565b61234d8184611c2e565b8903908982116123aa579061236191611c2e565b61236b8184611c2e565b8903908982116123aa576123899161238291611c2e565b8093611c2e565b8803978811612256575061160795966123a191611c2e565b93030417611c2e565b634e487b7160e01b83526011600452602483fd5b50508092935015610170570490565b6000198282098282029081808210910393818503916000951461243157600160801b938285111561226a57908491099282841190858284039661225657508560801b958604149114171561160a570360801c178080046001148115171561160a5790565b505060801c92915050565b600160c01b9291600019828509938260c01b928380871096039580870396146123be5785831115610170578291099080196001810180911161160a578116809104916122d4600096600184808a030401908684119003611c2e565b600019828209908281029081808410930393838503936000951461250257600160c01b918483111561226a570991818311848183039561225657508460401b94850468010000000000000000149114171561160a570360c01c178080046001148115171561160a5790565b505060c01c9291505056fea2646970667358221220a492267e998840f3202016e236206632927e706aedc2842fe8240b6c6bc5102b64736f6c63430008120033";

type UniswapV3SwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3SwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3Swapper__factory extends ContractFactory {
  constructor(...args: UniswapV3SwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UniswapV3Swapper";
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    _swapRouter: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV3Swapper> {
    return super.deploy(
      _yieldBox,
      _swapRouter,
      _factory,
      overrides || {}
    ) as Promise<UniswapV3Swapper>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    _swapRouter: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yieldBox,
      _swapRouter,
      _factory,
      overrides || {}
    );
  }
  override attach(address: string): UniswapV3Swapper {
    return super.attach(address) as UniswapV3Swapper;
  }
  override connect(signer: Signer): UniswapV3Swapper__factory {
    return super.connect(signer) as UniswapV3Swapper__factory;
  }
  static readonly contractName: "UniswapV3Swapper";

  public readonly contractName: "UniswapV3Swapper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3SwapperInterface {
    return new utils.Interface(_abi) as UniswapV3SwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3Swapper {
    return new Contract(address, _abi, signerOrProvider) as UniswapV3Swapper;
  }
}
