/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TapiocaDeployer,
  TapiocaDeployerInterface,
} from "../../TapiocaDeployer/TapiocaDeployer";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "bytecodeHash",
        type: "bytes32",
      },
    ],
    name: "computeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "bytecodeHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "deployer",
        type: "address",
      },
    ],
    name: "computeAddress",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "contractName",
        type: "string",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576103b9908161001c8239f35b600080fdfe6040608081526004908136101561001557600080fd5b6000803560e01c8063481286e61461024a578063780653061461020857638f3b65931461004157600080fd5b608036600319011261020157823567ffffffffffffffff60443581811161020457366023820112156102045761008090369060248189013591016102ae565b92606435918211610201573660238301121561020157506100aa90369060248188013591016102ae565b938147106101be57508151151591835192602084017f437265617465323a2062797465636f6465206c656e677468206973207a65726f90528484016d0103337b91031b7b73a3930b1ba160951b905285519380602088019580604e83019061011291896102fa565b810103602e81018252604e016101289082610276565b6101319161031d565b6024359181519160200190f56001600160a01b0316928251918291602083017f437265617465323a204661696c6564206f6e206465706c6f7920666f7220636f9052848301660373a3930b1ba160cd1b905251908160478401610193926102fa565b8101036027810182526047016101a99082610276565b6101b59083151561031d565b51908152602090f35b606490602085519162461bcd60e51b8352820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152fd5b80fd5b8380fd5b503461020157606036600319011261020157604435926001600160a01b039182851685036102015750602093610242916024359035610363565b915191168152f35b5034610201578160031936011261020157506001600160a01b0361024260209330906024359035610363565b90601f8019910116810190811067ffffffffffffffff82111761029857604052565b634e487b7160e01b600052604160045260246000fd5b92919267ffffffffffffffff821161029857604051916102d8601f8201601f191660200184610276565b8294818452818301116102f5578281602093846000960137010152565b600080fd5b60005b83811061030d5750506000910152565b81810151838201526020016102fd565b156103255750565b6044604051809262461bcd60e51b82526020600483015261035581518092816024860152602086860191016102fa565b601f01601f19168101030190fd5b90605592600b92604051926040840152602083015281520160ff8153209056fea26469706673582212205fdeeb756325c9a9c34813e20e631ddb7c1283a181c72f32d0a36a1fe8d9ba4e64736f6c63430008120033";

type TapiocaDeployerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TapiocaDeployerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TapiocaDeployer__factory extends ContractFactory {
  constructor(...args: TapiocaDeployerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TapiocaDeployer";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TapiocaDeployer> {
    return super.deploy(overrides || {}) as Promise<TapiocaDeployer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TapiocaDeployer {
    return super.attach(address) as TapiocaDeployer;
  }
  override connect(signer: Signer): TapiocaDeployer__factory {
    return super.connect(signer) as TapiocaDeployer__factory;
  }
  static readonly contractName: "TapiocaDeployer";

  public readonly contractName: "TapiocaDeployer";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TapiocaDeployerInterface {
    return new utils.Interface(_abi) as TapiocaDeployerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TapiocaDeployer {
    return new Contract(address, _abi, signerOrProvider) as TapiocaDeployer;
  }
}
