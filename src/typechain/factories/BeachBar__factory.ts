/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BeachBar, BeachBarInterface } from "../BeachBar";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract YieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "tapToken_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "mc",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "executeMixologistFn",
    outputs: [
      {
        internalType: "bool[]",
        name: "success",
        type: "bool[]",
      },
      {
        internalType: "bytes[]",
        name: "result",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeTo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeVeTap",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "contract IStrategy",
        name: "strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "registerAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mcAddress",
        type: "address",
      },
      {
        internalType: "enum ContractType",
        name: "contractType_",
        type: "uint8",
      },
    ],
    name: "registerMasterContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mc",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "useCreate2",
        type: "bool",
      },
    ],
    name: "registerMixologist",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeTo_",
        type: "address",
      },
    ],
    name: "setFeeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeVeTap_",
        type: "address",
      },
    ],
    name: "setFeeVeTap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract MultiSwapper",
        name: "swapper",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enable",
        type: "bool",
      },
    ],
    name: "setSwapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract MultiSwapper",
        name: "",
        type: "address",
      },
    ],
    name: "swappers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tapAssetId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tapToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tapiocaMarkets",
    outputs: [
      {
        internalType: "address[]",
        name: "markets",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract MultiSwapper[]",
        name: "swappers_",
        type: "address[]",
      },
    ],
    name: "withdrawAllProtocolFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract YieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50604051620019ac380380620019ac833981016040819052620000349162000138565b600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36001600160a01b03808316608081905290821660a052604051632c1876e560e21b815263b061db9490620000b4906001908590600090819060040162000177565b602060405180830381600087803b158015620000cf57600080fd5b505af1158015620000e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200010a9190620001bd565b6001600160601b031660c05250620001d79050565b6001600160a01b03811681146200013557600080fd5b50565b600080604083850312156200014c57600080fd5b825162000159816200011f565b60208401519092506200016c816200011f565b809150509250929050565b60808101600486106200019a57634e487b7160e01b600052602160045260246000fd5b9481526001600160a01b0393841660208201529190921660408201526060015290565b600060208284031215620001d057600080fd5b5051919050565b60805160a05160c0516117826200022a6000396000610173015260006102fd0152600081816103810152818161057b015281816108c301528181610b7e01528181610c530152610e4101526117826000f3fe6080604052600436106101045760003560e01c80638cad7fbe116100a0578063d164c24111610064578063d164c2411461031f578063dc2d27b714610341578063de4065771461036f578063e30c3978146103a3578063f46901ed146103c357600080fd5b80638cad7fbe1461024b5780638da5cb5b1461028b578063a76820de146102ab578063aedf4272146102cb578063c7cee532146102eb57600080fd5b8063017e7e5814610109578063078dfbe71461013f5780630e7ee227146101615780630feb123d146101a3578063226a414b146101c35780633f2617cb146101d65780634e71e0c8146101f6578063515104a81461020b5780635971ac301461022b575b600080fd5b34801561011557600080fd5b50600454610129906001600160a01b031681565b6040516101369190611078565b60405180910390f35b34801561014b57600080fd5b5061015f61015a3660046110b9565b6103e3565b005b34801561016d57600080fd5b506101957f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610136565b3480156101af57600080fd5b50600554610129906001600160a01b031681565b61015f6101d13660046110fe565b6104fb565b3480156101e257600080fd5b5061015f6101f1366004611193565b610610565b34801561020257600080fd5b5061015f610665565b34801561021757600080fd5b5061015f6102263660046111c8565b610722565b34801561023757600080fd5b50610195610246366004611205565b6108a9565b34801561025757600080fd5b5061027b610266366004611246565b60066020526000908152604090205460ff1681565b6040519015158152602001610136565b34801561029757600080fd5b50600054610129906001600160a01b031681565b3480156102b757600080fd5b5061015f6102c63660046112b5565b610959565b3480156102d757600080fd5b5061015f6102e6366004611246565b610ada565b3480156102f757600080fd5b506101297f000000000000000000000000000000000000000000000000000000000000000081565b34801561032b57600080fd5b50610334610b26565b60405161013691906112f6565b34801561034d57600080fd5b5061036161035c366004611389565b610d6e565b6040516101369291906114f8565b34801561037b57600080fd5b506101297f000000000000000000000000000000000000000000000000000000000000000081565b3480156103af57600080fd5b50600154610129906001600160a01b031681565b3480156103cf57600080fd5b5061015f6103de366004611246565b61102c565b6000546001600160a01b031633146104165760405162461bcd60e51b815260040161040d906115aa565b60405180910390fd5b81156104d9576001600160a01b0383161515806104305750805b6104745760405162461bcd60e51b81526020600482015260156024820152744f776e61626c653a207a65726f206164647265737360581b604482015260640161040d565b600080546040516001600160a01b03808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0385166001600160a01b031991821617909155600180549091169055505050565b600180546001600160a01b0385166001600160a01b0319909116179055505050565b6000546001600160a01b031633146105255760405162461bcd60e51b815260040161040d906115aa565b6001600160a01b038416600090815260036020526040902054849060ff1615156001146105645760405162461bcd60e51b815260040161040d906115df565b604051631f54245b60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631f54245b906105b6908890889088908890600401611616565b602060405180830381600087803b1580156105d057600080fd5b505af11580156105e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106089190611660565b505050505050565b6000546001600160a01b0316331461063a5760405162461bcd60e51b815260040161040d906115aa565b6001600160a01b03919091166000908152600660205260409020805460ff1916911515919091179055565b6001546001600160a01b03163381146106c05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e6572604482015260640161040d565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316179055600180549091169055565b6000546001600160a01b0316331461074c5760405162461bcd60e51b815260040161040d906115aa565b6001600160a01b03821660009081526003602052604090205460ff16156107af5760405162461bcd60e51b815260206004820152601760248201527610995858da10985c8e881350c81c9959da5cdd195c9959604a1b604482015260640161040d565b604080518082019091526000602082019081526001600160a01b03841682528260028111156107e0576107e061167d565b908160028111156107f3576107f361167d565b90525060028054600181018255600082905282517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910180546001600160a01b031981166001600160a01b039093169283178255602085015185949293909284926001600160a81b03191690911790600160a01b90849081111561087a5761087a61167d565b021790555050506001600160a01b039092166000908152600360205260409020805460ff191660011790555050565b604051632c1876e560e21b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063b061db94906108ff90600190889088908890600401611693565b602060405180830381600087803b15801561091957600080fd5b505af115801561092d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095191906116d8565b949350505050565b60008282828161096b5761096b6116f1565b90506020020160208101906109809190611246565b6001600160a01b031614156109d05760405162461bcd60e51b815260206004820152601660248201527542656163684261723a207a65726f206164647265737360501b604482015260640161040d565b6002548181141560006109e1610b26565b805190915060005b81811015610ad157828181518110610a0357610a036116f1565b60200260200101516001600160a01b03166350afeb8e85610a4a57888884818110610a3057610a306116f1565b9050602002016020810190610a459190611246565b610a72565b88886000818110610a5d57610a5d6116f1565b9050602002016020810190610a729190611246565b6040518263ffffffff1660e01b8152600401610a8e9190611078565b600060405180830381600087803b158015610aa857600080fd5b505af1158015610abc573d6000803e3d6000fd5b5050505080610aca90611707565b90506109e9565b50505050505050565b6000546001600160a01b03163314610b045760405162461bcd60e51b815260040161040d906115aa565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b600254606090806001600160401b03811115610b4457610b44611343565b604051908082528060200260200182016040528015610b6d578160200160208202803683370190505b5091506000805b82811015610d68577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fba96be860028381548110610bbe57610bbe6116f1565b6000918252602090912001546040516001600160e01b031960e084901b168152610bf4916001600160a01b031690600401611078565b60206040518083038186803b158015610c0c57600080fd5b505afa158015610c20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4491906116d8565b915060005b82811015610d57577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638fd4365460028481548110610c9357610c936116f1565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b0390911660048201526024810184905260440160206040518083038186803b158015610ce557600080fd5b505afa158015610cf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1d9190611660565b858381518110610d2f57610d2f6116f1565b6001600160a01b0390921660209283029190910190910152610d5081611707565b9050610c49565b50610d6181611707565b9050610b74565b50505090565b60005460609081906001600160a01b03163314610d9d5760405162461bcd60e51b815260040161040d906115aa565b83806001600160401b03811115610db657610db6611343565b604051908082528060200260200182016040528015610ddf578160200160208202803683370190505b509250806001600160401b03811115610dfa57610dfa611343565b604051908082528060200260200182016040528015610e2d57816020015b6060815260200190600190039081610e185790505b50915060005b8181101561102257600360007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bafe4f148a8a86818110610e8057610e806116f1565b9050602002016020810190610e959190611246565b6040518263ffffffff1660e01b8152600401610eb19190611078565b60206040518083038186803b158015610ec957600080fd5b505afa158015610edd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f019190611660565b6001600160a01b0316815260208101919091526040016000205460ff16610f3a5760405162461bcd60e51b815260040161040d906115df565b868682818110610f4c57610f4c6116f1565b9050602002016020810190610f619190611246565b6001600160a01b0316858281518110610f7c57610f7c6116f1565b6020026020010151604051610f919190611730565b6000604051808303816000865af19150503d8060008114610fce576040519150601f19603f3d011682016040523d82523d6000602084013e610fd3565b606091505b50858381518110610fe657610fe66116f1565b60200260200101858481518110610fff57610fff6116f1565b6020908102919091010191909152901515905261101b81611707565b9050610e33565b5050935093915050565b6000546001600160a01b031633146110565760405162461bcd60e51b815260040161040d906115aa565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0391909116815260200190565b6001600160a01b03811681146110a157600080fd5b50565b803580151581146110b457600080fd5b919050565b6000806000606084860312156110ce57600080fd5b83356110d98161108c565b92506110e7602085016110a4565b91506110f5604085016110a4565b90509250925092565b6000806000806060858703121561111457600080fd5b843561111f8161108c565b935060208501356001600160401b038082111561113b57600080fd5b818701915087601f83011261114f57600080fd5b81358181111561115e57600080fd5b88602082850101111561117057600080fd5b602083019550809450505050611188604086016110a4565b905092959194509250565b600080604083850312156111a657600080fd5b82356111b18161108c565b91506111bf602084016110a4565b90509250929050565b600080604083850312156111db57600080fd5b82356111e68161108c565b91506020830135600381106111fa57600080fd5b809150509250929050565b60008060006060848603121561121a57600080fd5b83356112258161108c565b925060208401356112358161108c565b929592945050506040919091013590565b60006020828403121561125857600080fd5b81356112638161108c565b9392505050565b60008083601f84011261127c57600080fd5b5081356001600160401b0381111561129357600080fd5b6020830191508360208260051b85010111156112ae57600080fd5b9250929050565b600080602083850312156112c857600080fd5b82356001600160401b038111156112de57600080fd5b6112ea8582860161126a565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b818110156113375783516001600160a01b031683529284019291840191600101611312565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561138157611381611343565b604052919050565b6000806000604080858703121561139f57600080fd5b84356001600160401b03808211156113b657600080fd5b6113c28883890161126a565b90965094506020915086820135818111156113dc57600080fd5b8701601f810189136113ed57600080fd5b8035828111156113ff576113ff611343565b8060051b61140e858201611359565b918252828101850191858101908c84111561142857600080fd5b86850192505b838310156114b6578235868111156114465760008081fd5b8501603f81018e136114585760008081fd5b878101358781111561146c5761146c611343565b61147e601f8201601f19168a01611359565b8181528f8b8385010111156114935760008081fd5b818b84018b83013760009181018a0191909152835250918601919086019061142e565b80985050505050505050509250925092565b60005b838110156114e35781810151838201526020016114cb565b838111156114f2576000848401525b50505050565b604080825283519082018190526000906020906060840190828701845b82811015611533578151151584529284019290840190600101611515565b50505083810382850152845180825282820190600581901b8301840187850160005b8381101561159b57601f19808785030186528251805180865261157d818b88018c85016114c8565b96890196601f01909116939093018701925090860190600101611555565b50909998505050505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601b908201527f42656163684261723a204d43206e6f7420726567697374657265640000000000604082015260600190565b6001600160a01b038516815260606020820181905281018390528284608083013760008184016080908101919091529115156040820152601f909201601f19169091010192915050565b60006020828403121561167257600080fd5b81516112638161108c565b634e487b7160e01b600052602160045260246000fd5b60808101600486106116b557634e487b7160e01b600052602160045260246000fd5b9481526001600160a01b0393841660208201529190921660408201526060015290565b6000602082840312156116ea57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600060001982141561172957634e487b7160e01b600052601160045260246000fd5b5060010190565b600082516117428184602087016114c8565b919091019291505056fea2646970667358221220beb6251a7f50c0d29a16f053b98dbb2635606e7e69c236919ee690c663224be364736f6c63430008090033";

export class BeachBar__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _yieldBox: string,
    tapToken_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BeachBar> {
    return super.deploy(
      _yieldBox,
      tapToken_,
      overrides || {}
    ) as Promise<BeachBar>;
  }
  getDeployTransaction(
    _yieldBox: string,
    tapToken_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_yieldBox, tapToken_, overrides || {});
  }
  attach(address: string): BeachBar {
    return super.attach(address) as BeachBar;
  }
  connect(signer: Signer): BeachBar__factory {
    return super.connect(signer) as BeachBar__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BeachBarInterface {
    return new utils.Interface(_abi) as BeachBarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BeachBar {
    return new Contract(address, _abi, signerOrProvider) as BeachBar;
  }
}
