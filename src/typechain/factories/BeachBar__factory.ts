/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BeachBar, BeachBarInterface } from "../BeachBar";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract YieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "tapToken_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "mc",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "executeMixologistFn",
    outputs: [
      {
        internalType: "bool[]",
        name: "success",
        type: "bool[]",
      },
      {
        internalType: "bytes[]",
        name: "result",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeTo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeVeTap",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "contract IStrategy",
        name: "strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "registerAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mcAddress",
        type: "address",
      },
      {
        internalType: "enum ContractType",
        name: "contractType_",
        type: "uint8",
      },
    ],
    name: "registerMasterContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mc",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "useCreate2",
        type: "bool",
      },
    ],
    name: "registerMixologist",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeTo_",
        type: "address",
      },
    ],
    name: "setFeeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeVeTap_",
        type: "address",
      },
    ],
    name: "setFeeVeTap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract MultiSwapper",
        name: "swapper",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enable",
        type: "bool",
      },
    ],
    name: "setSwapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract MultiSwapper",
        name: "",
        type: "address",
      },
    ],
    name: "swappers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tapAssetId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tapToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract MultiSwapper[]",
        name: "swappers_",
        type: "address[]",
      },
    ],
    name: "withdrawAllProtocolFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract YieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b506040516200185b3803806200185b833981016040819052620000349162000138565b600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36001600160a01b03808316608081905290821660a052604051632c1876e560e21b815263b061db9490620000b4906001908590600090819060040162000177565b602060405180830381600087803b158015620000cf57600080fd5b505af1158015620000e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200010a9190620001bd565b6001600160601b031660c05250620001d79050565b6001600160a01b03811681146200013557600080fd5b50565b600080604083850312156200014c57600080fd5b825162000159816200011f565b60208401519092506200016c816200011f565b809150509250929050565b60808101600486106200019a57634e487b7160e01b600052602160045260246000fd5b9481526001600160a01b0393841660208201529190921660408201526060015290565b600060208284031215620001d057600080fd5b5051919050565b60805160a05160c0516116316200022a6000396000610158015260006102e20152600081816103440152818161053e01528181610886015281816109a801528181610a7d0152610d3d01526116316000f3fe6080604052600436106100e95760003560e01c80638cad7fbe116100855780638cad7fbe146102305780638da5cb5b14610270578063a76820de14610290578063aedf4272146102b0578063c7cee532146102d0578063dc2d27b714610304578063de40657714610332578063e30c397814610366578063f46901ed1461038657600080fd5b8063017e7e58146100ee578063078dfbe7146101245780630e7ee227146101465780630feb123d14610188578063226a414b146101a85780633f2617cb146101bb5780634e71e0c8146101db578063515104a8146101f05780635971ac3014610210575b600080fd5b3480156100fa57600080fd5b5060045461010e906001600160a01b031681565b60405161011b9190610f74565b60405180910390f35b34801561013057600080fd5b5061014461013f366004610fb5565b6103a6565b005b34801561015257600080fd5b5061017a7f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161011b565b34801561019457600080fd5b5060055461010e906001600160a01b031681565b6101446101b6366004610ffa565b6104be565b3480156101c757600080fd5b506101446101d636600461108f565b6105d3565b3480156101e757600080fd5b50610144610628565b3480156101fc57600080fd5b5061014461020b3660046110c4565b6106e5565b34801561021c57600080fd5b5061017a61022b366004611101565b61086c565b34801561023c57600080fd5b5061026061024b366004611142565b60066020526000908152604090205460ff1681565b604051901515815260200161011b565b34801561027c57600080fd5b5060005461010e906001600160a01b031681565b34801561029c57600080fd5b506101446102ab3660046111b1565b61091c565b3480156102bc57600080fd5b506101446102cb366004611142565b610c1e565b3480156102dc57600080fd5b5061010e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561031057600080fd5b5061032461031f366004611238565b610c6a565b60405161011b9291906113a7565b34801561033e57600080fd5b5061010e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561037257600080fd5b5060015461010e906001600160a01b031681565b34801561039257600080fd5b506101446103a1366004611142565b610f28565b6000546001600160a01b031633146103d95760405162461bcd60e51b81526004016103d090611459565b60405180910390fd5b811561049c576001600160a01b0383161515806103f35750805b6104375760405162461bcd60e51b81526020600482015260156024820152744f776e61626c653a207a65726f206164647265737360581b60448201526064016103d0565b600080546040516001600160a01b03808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0385166001600160a01b031991821617909155600180549091169055505050565b600180546001600160a01b0385166001600160a01b0319909116179055505050565b6000546001600160a01b031633146104e85760405162461bcd60e51b81526004016103d090611459565b6001600160a01b038416600090815260036020526040902054849060ff1615156001146105275760405162461bcd60e51b81526004016103d09061148e565b604051631f54245b60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631f54245b906105799088908890889088906004016114c5565b602060405180830381600087803b15801561059357600080fd5b505af11580156105a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cb919061150f565b505050505050565b6000546001600160a01b031633146105fd5760405162461bcd60e51b81526004016103d090611459565b6001600160a01b03919091166000908152600660205260409020805460ff1916911515919091179055565b6001546001600160a01b03163381146106835760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e657260448201526064016103d0565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316179055600180549091169055565b6000546001600160a01b0316331461070f5760405162461bcd60e51b81526004016103d090611459565b6001600160a01b03821660009081526003602052604090205460ff16156107725760405162461bcd60e51b815260206004820152601760248201527610995858da10985c8e881350c81c9959da5cdd195c9959604a1b60448201526064016103d0565b604080518082019091526000602082019081526001600160a01b03841682528260028111156107a3576107a361152c565b908160028111156107b6576107b661152c565b90525060028054600181018255600082905282517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910180546001600160a01b031981166001600160a01b039093169283178255602085015185949293909284926001600160a81b03191690911790600160a01b90849081111561083d5761083d61152c565b021790555050506001600160a01b039092166000908152600360205260409020805460ff191660011790555050565b604051632c1876e560e21b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063b061db94906108c290600190889088908890600401611542565b602060405180830381600087803b1580156108dc57600080fd5b505af11580156108f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109149190611587565b949350505050565b60008282828161092e5761092e6115a0565b90506020020160208101906109439190611142565b6001600160a01b031614156109935760405162461bcd60e51b815260206004820152601660248201527542656163684261723a207a65726f206164647265737360501b60448201526064016103d0565b600254818114156000805b838110156105cb577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fba96be8600283815481106109e8576109e86115a0565b6000918252602090912001546040516001600160e01b031960e084901b168152610a1e916001600160a01b031690600401610f74565b60206040518083038186803b158015610a3657600080fd5b505afa158015610a4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6e9190611587565b915060005b82811015610c0d577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638fd4365460028481548110610abd57610abd6115a0565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b0390911660048201526024810184905260440160206040518083038186803b158015610b0f57600080fd5b505afa158015610b23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b47919061150f565b6001600160a01b03166350afeb8e85610b8657888885818110610b6c57610b6c6115a0565b9050602002016020810190610b819190611142565b610bae565b88886000818110610b9957610b996115a0565b9050602002016020810190610bae9190611142565b6040518263ffffffff1660e01b8152600401610bca9190610f74565b600060405180830381600087803b158015610be457600080fd5b505af1158015610bf8573d6000803e3d6000fd5b5050505080610c06906115b6565b9050610a73565b50610c17816115b6565b905061099e565b6000546001600160a01b03163314610c485760405162461bcd60e51b81526004016103d090611459565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b60005460609081906001600160a01b03163314610c995760405162461bcd60e51b81526004016103d090611459565b83806001600160401b03811115610cb257610cb26111f2565b604051908082528060200260200182016040528015610cdb578160200160208202803683370190505b509250806001600160401b03811115610cf657610cf66111f2565b604051908082528060200260200182016040528015610d2957816020015b6060815260200190600190039081610d145790505b50915060005b81811015610f1e57600360007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bafe4f148a8a86818110610d7c57610d7c6115a0565b9050602002016020810190610d919190611142565b6040518263ffffffff1660e01b8152600401610dad9190610f74565b60206040518083038186803b158015610dc557600080fd5b505afa158015610dd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfd919061150f565b6001600160a01b0316815260208101919091526040016000205460ff16610e365760405162461bcd60e51b81526004016103d09061148e565b868682818110610e4857610e486115a0565b9050602002016020810190610e5d9190611142565b6001600160a01b0316858281518110610e7857610e786115a0565b6020026020010151604051610e8d91906115df565b6000604051808303816000865af19150503d8060008114610eca576040519150601f19603f3d011682016040523d82523d6000602084013e610ecf565b606091505b50858381518110610ee257610ee26115a0565b60200260200101858481518110610efb57610efb6115a0565b60209081029190910101919091529015159052610f17816115b6565b9050610d2f565b5050935093915050565b6000546001600160a01b03163314610f525760405162461bcd60e51b81526004016103d090611459565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0391909116815260200190565b6001600160a01b0381168114610f9d57600080fd5b50565b80358015158114610fb057600080fd5b919050565b600080600060608486031215610fca57600080fd5b8335610fd581610f88565b9250610fe360208501610fa0565b9150610ff160408501610fa0565b90509250925092565b6000806000806060858703121561101057600080fd5b843561101b81610f88565b935060208501356001600160401b038082111561103757600080fd5b818701915087601f83011261104b57600080fd5b81358181111561105a57600080fd5b88602082850101111561106c57600080fd5b60208301955080945050505061108460408601610fa0565b905092959194509250565b600080604083850312156110a257600080fd5b82356110ad81610f88565b91506110bb60208401610fa0565b90509250929050565b600080604083850312156110d757600080fd5b82356110e281610f88565b91506020830135600381106110f657600080fd5b809150509250929050565b60008060006060848603121561111657600080fd5b833561112181610f88565b9250602084013561113181610f88565b929592945050506040919091013590565b60006020828403121561115457600080fd5b813561115f81610f88565b9392505050565b60008083601f84011261117857600080fd5b5081356001600160401b0381111561118f57600080fd5b6020830191508360208260051b85010111156111aa57600080fd5b9250929050565b600080602083850312156111c457600080fd5b82356001600160401b038111156111da57600080fd5b6111e685828601611166565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611230576112306111f2565b604052919050565b6000806000604080858703121561124e57600080fd5b84356001600160401b038082111561126557600080fd5b61127188838901611166565b909650945060209150868201358181111561128b57600080fd5b8701601f8101891361129c57600080fd5b8035828111156112ae576112ae6111f2565b8060051b6112bd858201611208565b918252828101850191858101908c8411156112d757600080fd5b86850192505b83831015611365578235868111156112f55760008081fd5b8501603f81018e136113075760008081fd5b878101358781111561131b5761131b6111f2565b61132d601f8201601f19168a01611208565b8181528f8b8385010111156113425760008081fd5b818b84018b83013760009181018a019190915283525091860191908601906112dd565b80985050505050505050509250925092565b60005b8381101561139257818101518382015260200161137a565b838111156113a1576000848401525b50505050565b604080825283519082018190526000906020906060840190828701845b828110156113e25781511515845292840192908401906001016113c4565b50505083810382850152845180825282820190600581901b8301840187850160005b8381101561144a57601f19808785030186528251805180865261142c818b88018c8501611377565b96890196601f01909116939093018701925090860190600101611404565b50909998505050505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601b908201527f42656163684261723a204d43206e6f7420726567697374657265640000000000604082015260600190565b6001600160a01b038516815260606020820181905281018390528284608083013760008184016080908101919091529115156040820152601f909201601f19169091010192915050565b60006020828403121561152157600080fd5b815161115f81610f88565b634e487b7160e01b600052602160045260246000fd5b608081016004861061156457634e487b7160e01b600052602160045260246000fd5b9481526001600160a01b0393841660208201529190921660408201526060015290565b60006020828403121561159957600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60006000198214156115d857634e487b7160e01b600052601160045260246000fd5b5060010190565b600082516115f1818460208701611377565b919091019291505056fea264697066735822122016cd5772153d3fea81fd657cfb1acd9d9afdc3adb482f0818a6078224d6159a264736f6c63430008090033";

export class BeachBar__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _yieldBox: string,
    tapToken_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BeachBar> {
    return super.deploy(
      _yieldBox,
      tapToken_,
      overrides || {}
    ) as Promise<BeachBar>;
  }
  getDeployTransaction(
    _yieldBox: string,
    tapToken_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_yieldBox, tapToken_, overrides || {});
  }
  attach(address: string): BeachBar {
    return super.attach(address) as BeachBar;
  }
  connect(signer: Signer): BeachBar__factory {
    return super.connect(signer) as BeachBar__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BeachBarInterface {
    return new utils.Interface(_abi) as BeachBarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BeachBar {
    return new Contract(address, _abi, signerOrProvider) as BeachBar;
  }
}
