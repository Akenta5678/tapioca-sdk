/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TapiocaWrapper,
  TapiocaWrapperInterface,
} from "../TapiocaWrapper";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
    ],
    name: "createTOFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toft",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
    ],
    name: "executeTOFT",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTOFT",
    outputs: [
      {
        internalType: "contract TapiocaOFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tapiocaOFTLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tapiocaOFTs",
    outputs: [
      {
        internalType: "contract TapiocaOFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350610754806100616000396000f3fe6080604052600436106100605760003560e01c806313af4035146100655780632f3e1b91146100875780638616e3d4146100aa5780638da5cb5b146100ca578063c5181c7014610102578063c99e12b214610117578063fe898fe714610137575b600080fd5b34801561007157600080fd5b506100856100803660046105ce565b61015a565b005b34801561009357600080fd5b506001546040519081526020015b60405180910390f35b3480156100b657600080fd5b506100856100c53660046105f2565b6101d8565b3480156100d657600080fd5b506000546100ea906001600160a01b031681565b6040516001600160a01b0390911681526020016100a1565b34801561010e57600080fd5b506100ea6103b3565b34801561012357600080fd5b506100ea610132366004610677565b6103f0565b61014a6101453660046105f2565b61041a565b60405190151581526020016100a1565b6000546001600160a01b0316331461018d5760405162461bcd60e51b815260040161018490610690565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6000546001600160a01b031633146102025760405162461bcd60e51b815260040161018490610690565b60006102a960007fdb62290e278048916c2988ec8a75a745c627ea5199b22c43d68aad24ce37baf78660405160200161025792919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b6040516020818303038152906040528051906020012085858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506104ad92505050565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0383811691821790925560408051633c2f4f4360e11b8152905193945091871692909163785e9e869160048083019260209291908290030181865afa15801561033a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035e91906106b6565b6001600160a01b0316146103ad5760405162461bcd60e51b815260206004820152601660248201527508aa486646040c2c8c8e4cae6e640dad2e6dac2e8c6d60531b6044820152606401610184565b50505050565b60018054600091906103c69082906106d3565b815481106103d6576103d66106f8565b6000918252602090912001546001600160a01b0316919050565b6001818154811061040057600080fd5b6000918252602090912001546001600160a01b0316905081565b600080546001600160a01b031633146104455760405162461bcd60e51b815260040161018490610690565b836001600160a01b031634848460405161046092919061070e565b60006040518083038185875af1925050503d806000811461049d576040519150601f19603f3d011682016040523d82523d6000602084013e6104a2565b606091505b509095945050505050565b600080844710156105005760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152606401610184565b82516000036105515760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606401610184565b8383516020850187f590506001600160a01b0381166105ae5760405162461bcd60e51b8152602060048201526019602482015278437265617465323a204661696c6564206f6e206465706c6f7960381b6044820152606401610184565b949350505050565b6001600160a01b03811681146105cb57600080fd5b50565b6000602082840312156105e057600080fd5b81356105eb816105b6565b9392505050565b60008060006040848603121561060757600080fd5b8335610612816105b6565b9250602084013567ffffffffffffffff8082111561062f57600080fd5b818601915086601f83011261064357600080fd5b81358181111561065257600080fd5b87602082850101111561066457600080fd5b6020830194508093505050509250925092565b60006020828403121561068957600080fd5b5035919050565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b6000602082840312156106c857600080fd5b81516105eb816105b6565b6000828210156106f357634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fd5b818382376000910190815291905056fea2646970667358221220f678a22522207a4d341aca946011543a8a6890c4d525aabf25d852f63baf72fe64736f6c634300080f0033";

export class TapiocaWrapper__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TapiocaWrapper> {
    return super.deploy(overrides || {}) as Promise<TapiocaWrapper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TapiocaWrapper {
    return super.attach(address) as TapiocaWrapper;
  }
  connect(signer: Signer): TapiocaWrapper__factory {
    return super.connect(signer) as TapiocaWrapper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TapiocaWrapperInterface {
    return new utils.Interface(_abi) as TapiocaWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TapiocaWrapper {
    return new Contract(address, _abi, signerOrProvider) as TapiocaWrapper;
  }
}
