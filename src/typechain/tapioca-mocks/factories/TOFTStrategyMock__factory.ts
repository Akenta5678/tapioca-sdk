/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TOFTStrategyMock,
  TOFTStrategyMockInterface,
} from "../TOFTStrategyMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "_toft",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "cheapWithdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "compound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "compoundAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposited",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "description_",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20Mock",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenType",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c03461016c57601f610ea238819003918201601f19168301926001600160401b039290918385118386101761017157816060928492604097885283398101031261016c578051916001600160a01b0391828416840361016c576100708561006960208401610187565b9201610187565b9360805260a05260018060a01b0319600092338285541617845585519433857f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a360016002551680916003541617600355803b156101685783600481858094631d0dc26760e01b83525af1801561015e57610139575b8351610d06908161019c823960805181818161019c015281816103be0152610522015260a051818181610148015281816101ce0152818161043401528181610674015281816107630152610abd0152f35b821161014a575081523880806100e8565b634e487b7160e01b81526041600452602490fd5b84513d84823e3d90fd5b8280fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361016c5756fe6040608081526004908136101561001557600080fd5b600091823560e01c90816306fdde0314610968578163078dfbe71461085257816317d70f7c1461083757816320f07d931461081957816322a58c5d146106e857816330fa738c146106cc57816348dcb0511461064f5781634e71e0c81461059257816350188301146103715781637284e4161461058d5781638da5cb5b14610567578163afa91cc614610502578163ce845d1d14610371578163db2e21bc146103e2578163de4065771461039e578163e30c397814610376578163e3575f0514610371578163f3fef3a31461016c57508063f6b4dfb4146101295763f7c618c1146100ff57600080fd5b346101255781600319360112610125576020906001600160a01b03600354169051908152f35b5080fd5b5034610125578160031936011261012557602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b9190503461036d578060031936011261036d57610187610a00565b906024918235906001600160a01b036101c3817f0000000000000000000000000000000000000000000000000000000000000000163314610c30565b6101cb610c7c565b807f0000000000000000000000000000000000000000000000000000000000000000169261020360ff6101fd86610baa565b16610b6c565b6001600160ff1b038116810361035b57610222829160011b8954610c23565b1061031957845191602083019363a9059cbb60e01b855216868301526044820152604481526080810181811067ffffffffffffffff82111761030557845251869283929083905af1610272610b7a565b816102c9575b50156102875783600160025580f35b606492916020601c92519362461bcd60e51b85528401528201527f426f72696e6745524332303a205472616e73666572206661696c6564000000006044820152fd5b80518015925082156102de575b505038610278565b8192509060209181010312610301576020015180151581036103015738806102d6565b8480fd5b85604188634e487b7160e01b600052526000fd5b845162461bcd60e51b81526020818901526010818801527f616d6f756e74206e6f742076616c6964000000000000000000000000000000006044820152606490fd5b634e487b7160e01b8952601188528689fd5b8280fd5b610a9a565b5050346101255781600319360112610125576020906001600160a01b03600154169051908152f35b505034610125578160031936011261012557602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b9190503461036d578260031936011261036d576001600160a01b039261040c848254163314610b21565b81516020810181811067ffffffffffffffff8211176104ed57835281905261045a60ff6101fd7f00000000000000000000000000000000000000000000000000000000000000008716610baa565b938460011b946001600160ff1b038116036104da5760035416803b15610125578180916024855180948193637c928fe960e01b83528a8a8401525af180156104d0576104b9575b50506104b06020938354610c23565b80925551908152f35b6104c38291610a16565b6104cd57806104a1565b80fd5b83513d84823e3d90fd5b634e487b7160e01b825260118452602482fd5b604185634e487b7160e01b6000525260246000fd5b839034610125576020366003190112610125576105496001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163314610c30565b610551610c7c565b61055d81358254610c23565b9055600160025580f35b5050346101255781600319360112610125576001600160a01b0360209254169051908152f35b610968565b9190503461036d578260031936011261036d57600154906001600160a01b03928383169182330361060c5750508084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a373ffffffffffffffffffffffffffffffffffffffff199283161783551660015580f35b906020606492519162461bcd60e51b8352820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b8284346104cd57806003193601126104cd575061069960ff6101fd6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610baa565b906001600160ff1b03821682036106b75760209250519060011b8152f35b601183634e487b7160e01b6000525260246000fd5b5050346101255781600319360112610125576020905160018152f35b9190503461036d57602036600319011261036d5782823567ffffffffffffffff81116101255736602382011215610125578084013561072681610a7e565b61073285519182610a5c565b81815236602483850101116108155781602460209401848301370101526001600160a01b039061078860ff6101fd847f000000000000000000000000000000000000000000000000000000000000000016610baa565b918260011b926001600160ff1b038116036108025790849160035416803b1561036d5782906024835180958193637c928fe960e01b8352888a8401525af19081156107f957506107e4575b506107df908254610c23565b905580f35b926107f26107df9294610a16565b92906107d3565b513d86823e3d90fd5b634e487b7160e01b855260118452602485fd5b8380fd5b90503461036d578260031936011261036d5760209250549051908152f35b50503461012557816003193601126101255751908152602090f35b9190503461036d57606036600319011261036d5761086e610a00565b9160243591821515830361030157604435928315158403610964576001600160a01b039485916108a2838954163314610b21565b1561094a571692831590811591610942575b50156108ff5750508083549283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a36001600160a01b03198092161782556001541660015580f35b906020606492519162461bcd60e51b8352820152601560248201527f4f776e61626c653a207a65726f206164647265737300000000000000000000006044820152fd5b9050386108b4565b9350505050166001600160a01b0319600154161760015580f35b8580fd5b346109fb5760003660031901126109fb57604080519061098782610a40565b6010825260207f544f465453747261746567794d6f636b00000000000000000000000000000000818401528151928184928352815191828285015260005b8381106109e5575050600083830185015250601f01601f19168101030190f35b81810183015187820187015286945082016109c5565b600080fd5b600435906001600160a01b03821682036109fb57565b67ffffffffffffffff8111610a2a57604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610a2a57604052565b90601f8019910116810190811067ffffffffffffffff821117610a2a57604052565b67ffffffffffffffff8111610a2a57601f01601f191660200190565b346109fb5760003660031901126109fb57610ae260ff6101fd6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610baa565b6001600160ff1b0381168103610b0b57610b0360209160011b600454610c23565b604051908152f35b634e487b7160e01b600052601160045260246000fd5b15610b2857565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b604d8111610b0b57600a0a90565b3d15610ba5573d90610b8b82610a7e565b91610b996040519384610a5c565b82523d6000602084013e565b606090565b6001600160a01b03604051602081019263313ce56760e01b845260048252610bd182610a40565b600093849384935192165afa610be5610b7a565b9080610c18575b15610c115760208180518101031261012557602001519060ff821682036104cd575090565b5050601290565b506020815114610bec565b91908201809211610b0b57565b15610c3757565b60405162461bcd60e51b815260206004820152600c60248201527f4e6f74205969656c64426f7800000000000000000000000000000000000000006044820152606490fd5b6002805414610c8b5760028055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fdfea2646970667358221220b84c51fb5dab81418543978e475251abae71578d1a1d6a551da78d0f5eea2c6764736f6c63430008120033";

type TOFTStrategyMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TOFTStrategyMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TOFTStrategyMock__factory extends ContractFactory {
  constructor(...args: TOFTStrategyMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TOFTStrategyMock";
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    _toft: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TOFTStrategyMock> {
    return super.deploy(
      _yieldBox,
      _toft,
      _rewardToken,
      overrides || {}
    ) as Promise<TOFTStrategyMock>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    _toft: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yieldBox,
      _toft,
      _rewardToken,
      overrides || {}
    );
  }
  override attach(address: string): TOFTStrategyMock {
    return super.attach(address) as TOFTStrategyMock;
  }
  override connect(signer: Signer): TOFTStrategyMock__factory {
    return super.connect(signer) as TOFTStrategyMock__factory;
  }
  static readonly contractName: "TOFTStrategyMock";

  public readonly contractName: "TOFTStrategyMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TOFTStrategyMockInterface {
    return new utils.Interface(_abi) as TOFTStrategyMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TOFTStrategyMock {
    return new Contract(address, _abi, signerOrProvider) as TOFTStrategyMock;
  }
}
