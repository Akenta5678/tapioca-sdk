/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TOFTStrategyMock,
  TOFTStrategyMockInterface,
} from "../TOFTStrategyMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "_toft",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "cheapWithdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "compound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "compoundAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposited",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "description_",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20Mock",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenType",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c03461010e57601f610e4538819003918201601f19168301916001600160401b038311848410176101135780849260609460405283398101031261010e578051906001600160a01b0390818316830361010e5761006b604061006460208401610129565b9201610129565b9260805260a05260018060a01b03199033826000541617600055604051923360007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a3600160025516906003541617600355610d07908161013e823960805181818161019c015281816103a0015261050a015260a0518181816101480152818161021d015281816104160152818161065c0152818161074b0152610be50152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361010e5756fe6040608081526004908136101561001557600080fd5b600091823560e01c90816306fdde0314610950578163078dfbe71461083a57816317d70f7c1461081f57816320f07d931461080157816322a58c5d146106d057816330fa738c146106b457816348dcb051146106375781634e71e0c81461057a57816350188301146103535781637284e416146105755781638da5cb5b1461054f578163afa91cc6146104ea578163ce845d1d14610353578163db2e21bc146103c4578163de40657714610380578163e30c397814610358578163e3575f0514610353578163f3fef3a31461016c57508063f6b4dfb4146101295763f7c618c1146100ff57600080fd5b346101255781600319360112610125576020906001600160a01b03600354169051908152f35b5080fd5b5034610125578160031936011261012557602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b90503461034f578160031936011261034f576101866109e8565b916024908135936001600160a01b03906101c3827f0000000000000000000000000000000000000000000000000000000000000000163314610c31565b6101cb610c7d565b856101d4610bca565b1061030d57825182602082019263a9059cbb60e01b84521685820152866044820152604481526080810181811067ffffffffffffffff8211176102f957845251879283929083907f0000000000000000000000000000000000000000000000000000000000000000165af1610247610b14565b816102bd575b501561027b5750815492830392831161026a575055600160025580f35b634e487b7160e01b84526011825283fd5b606492916020601c92519362461bcd60e51b85528401528201527f426f72696e6745524332303a205472616e73666572206661696c6564000000006044820152fd5b80518015925082156102d2575b50503861024d565b81925090602091810103126102f5576020015180151581036102f55738806102ca565b8580fd5b85604188634e487b7160e01b600052526000fd5b825162461bcd60e51b81526020818701526010818601527f616d6f756e74206e6f742076616c6964000000000000000000000000000000006044820152606490fd5b8280fd5b610a82565b5050346101255781600319360112610125576020906001600160a01b03600154169051908152f35b505034610125578160031936011261012557602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b9190503461034f578260031936011261034f576001600160a01b03926103ee848254163314610aa5565b81516020810181811067ffffffffffffffff8211176104d557835281905261044260ff61043c7f00000000000000000000000000000000000000000000000000000000000000008716610b44565b16610af0565b938460011b946001600160ff1b038116036104c25760035416803b15610125578180916024855180948193637c928fe960e01b83528a8a8401525af180156104b8576104a1575b50506104986020938354610bbd565b80925551908152f35b6104ab82916109fe565b6104b55780610489565b80fd5b83513d84823e3d90fd5b634e487b7160e01b825260118452602482fd5b604185634e487b7160e01b6000525260246000fd5b839034610125576020366003190112610125576105316001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163314610c31565b610539610c7d565b61054581358254610bbd565b9055600160025580f35b5050346101255781600319360112610125576001600160a01b0360209254169051908152f35b610950565b9190503461034f578260031936011261034f57600154906001600160a01b0392838316918233036105f45750508084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a373ffffffffffffffffffffffffffffffffffffffff199283161783551660015580f35b906020606492519162461bcd60e51b8352820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b8284346104b557806003193601126104b5575061068160ff61043c6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610b44565b906001600160ff1b038216820361069f5760209250519060011b8152f35b601183634e487b7160e01b6000525260246000fd5b5050346101255781600319360112610125576020905160018152f35b9190503461034f57602036600319011261034f5782823567ffffffffffffffff81116101255736602382011215610125578084013561070e81610a66565b61071a85519182610a44565b81815236602483850101116107fd5781602460209401848301370101526001600160a01b039061077060ff61043c847f000000000000000000000000000000000000000000000000000000000000000016610b44565b918260011b926001600160ff1b038116036107ea5790849160035416803b1561034f5782906024835180958193637c928fe960e01b8352888a8401525af19081156107e157506107cc575b506107c7908254610bbd565b905580f35b926107da6107c792946109fe565b92906107bb565b513d86823e3d90fd5b634e487b7160e01b855260118452602485fd5b8380fd5b90503461034f578260031936011261034f5760209250549051908152f35b50503461012557816003193601126101255751908152602090f35b9190503461034f57606036600319011261034f576108566109e8565b9160243591821515830361094c576044359283151584036102f5576001600160a01b0394859161088a838954163314610aa5565b1561093257169283159081159161092a575b50156108e75750508083549283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a36001600160a01b03198092161782556001541660015580f35b906020606492519162461bcd60e51b8352820152601560248201527f4f776e61626c653a207a65726f206164647265737300000000000000000000006044820152fd5b90503861089c565b9350505050166001600160a01b0319600154161760015580f35b8480fd5b346109e35760003660031901126109e357604080519061096f82610a28565b6010825260207f544f465453747261746567794d6f636b00000000000000000000000000000000818401528151928184928352815191828285015260005b8381106109cd575050600083830185015250601f01601f19168101030190f35b81810183015187820187015286945082016109ad565b600080fd5b600435906001600160a01b03821682036109e357565b67ffffffffffffffff8111610a1257604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610a1257604052565b90601f8019910116810190811067ffffffffffffffff821117610a1257604052565b67ffffffffffffffff8111610a1257601f01601f191660200190565b346109e35760003660031901126109e3576020610a9d610bca565b604051908152f35b15610aac57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b604d8111610afe57600a0a90565b634e487b7160e01b600052601160045260246000fd5b3d15610b3f573d90610b2582610a66565b91610b336040519384610a44565b82523d6000602084013e565b606090565b6001600160a01b03604051602081019263313ce56760e01b845260048252610b6b82610a28565b600093849384935192165afa610b7f610b14565b9080610bb2575b15610bab5760208180518101031261012557602001519060ff821682036104b5575090565b5050601290565b506020815114610b86565b91908201809211610afe57565b6004548015610c2b57610c0a60ff61043c6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610b44565b906001600160ff1b0382168203610afe57610c289160011b90610bbd565b90565b50600090565b15610c3857565b60405162461bcd60e51b815260206004820152600c60248201527f4e6f74205969656c64426f7800000000000000000000000000000000000000006044820152606490fd5b6002805414610c8c5760028055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fdfea2646970667358221220eaf4cc33cb6019ceadd60d497f76473ceb3fda796455bcf74f5452da6d7a641564736f6c63430008120033";

type TOFTStrategyMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TOFTStrategyMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TOFTStrategyMock__factory extends ContractFactory {
  constructor(...args: TOFTStrategyMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TOFTStrategyMock";
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    _toft: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TOFTStrategyMock> {
    return super.deploy(
      _yieldBox,
      _toft,
      _rewardToken,
      overrides || {}
    ) as Promise<TOFTStrategyMock>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    _toft: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yieldBox,
      _toft,
      _rewardToken,
      overrides || {}
    );
  }
  override attach(address: string): TOFTStrategyMock {
    return super.attach(address) as TOFTStrategyMock;
  }
  override connect(signer: Signer): TOFTStrategyMock__factory {
    return super.connect(signer) as TOFTStrategyMock__factory;
  }
  static readonly contractName: "TOFTStrategyMock";

  public readonly contractName: "TOFTStrategyMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TOFTStrategyMockInterface {
    return new utils.Interface(_abi) as TOFTStrategyMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TOFTStrategyMock {
    return new Contract(address, _abi, signerOrProvider) as TOFTStrategyMock;
  }
}
