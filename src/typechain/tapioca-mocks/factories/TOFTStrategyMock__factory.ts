/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TOFTStrategyMock,
  TOFTStrategyMockInterface,
} from "../TOFTStrategyMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "_toft",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "cheapWithdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "compound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "compoundAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposited",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "description_",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20Mock",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenType",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c03461010e57601f610e2738819003918201601f19168301916001600160401b038311848410176101135780849260609460405283398101031261010e578051906001600160a01b0390818316830361010e5761006b604061006460208401610129565b9201610129565b9260805260a05260018060a01b03199033826000541617600055604051923360007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a3600160025516906003541617600355610ce9908161013e82396080518181816101990152818161038201526104ec015260a0518181816101480152818161021b015281816103f80152818161063e0152818161072d0152610bc70152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361010e5756fe6040608081526004908136101561001557600080fd5b600091823560e01c90816306fdde0314610932578163078dfbe71461081857816317d70f7c146107fd57816320f07d93146107df57816322a58c5d146106b257816330fa738c1461069657816348dcb051146106195781634e71e0c81461055c57816350188301146103355781637284e416146105575781638da5cb5b14610531578163afa91cc6146104cc578163ce845d1d14610335578163db2e21bc146103a6578163de40657714610362578163e30c39781461033a578163e3575f0514610335578163f3fef3a31461016c57508063f6b4dfb4146101295763f7c618c1146100ff57600080fd5b346101255781600319360112610125576020906001600160a01b03600354169051908152f35b5080fd5b5034610125578160031936011261012557602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b919050346103315780600319360112610331576101876109ca565b6001600160a01b03906024356101c0337f0000000000000000000000000000000000000000000000000000000000000000851614610c13565b6101c8610c5f565b806101d1610bac565b106102ee5783519083602083019363a9059cbb60e01b85521660248301526044820152604481526080810181811067ffffffffffffffff8211176102d957845251859283929083907f0000000000000000000000000000000000000000000000000000000000000000165af1610245610af6565b8161029d575b501561025a5782600160025580f35b906020606492519162461bcd60e51b8352820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c6564000000006044820152fd5b80518015925082156102b2575b50503861024b565b81925090602091810103126102d5576020015180151581036102d55738806102aa565b8380fd5b604186634e487b7160e01b6000525260246000fd5b835162461bcd60e51b8152602081870152601060248201527f616d6f756e74206e6f742076616c6964000000000000000000000000000000006044820152606490fd5b8280fd5b610a64565b5050346101255781600319360112610125576020906001600160a01b03600154169051908152f35b505034610125578160031936011261012557602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b919050346103315782600319360112610331576001600160a01b03926103d0848254163314610a87565b81516020810181811067ffffffffffffffff8211176104b757835281905261042460ff61041e7f00000000000000000000000000000000000000000000000000000000000000008716610b26565b16610ad2565b938460011b946001600160ff1b038116036104a45760035416803b15610125578180916024855180948193637c928fe960e01b83528a8a8401525af1801561049a57610483575b505061047a6020938354610b9f565b80925551908152f35b61048d82916109e0565b610497578061046b565b80fd5b83513d84823e3d90fd5b634e487b7160e01b825260118452602482fd5b604185634e487b7160e01b6000525260246000fd5b839034610125576020366003190112610125576105136001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163314610c13565b61051b610c5f565b61052781358254610b9f565b9055600160025580f35b5050346101255781600319360112610125576001600160a01b0360209254169051908152f35b610932565b91905034610331578260031936011261033157600154906001600160a01b0392838316918233036105d65750508084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a373ffffffffffffffffffffffffffffffffffffffff199283161783551660015580f35b906020606492519162461bcd60e51b8352820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b8284346104975780600319360112610497575061066360ff61041e6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610b26565b906001600160ff1b03821682036106815760209250519060011b8152f35b601183634e487b7160e01b6000525260246000fd5b5050346101255781600319360112610125576020905160018152f35b919050346103315760203660031901126103315782823567ffffffffffffffff8111610125573660238201121561012557808401356106f081610a48565b6106fc85519182610a26565b81815236602483850101116102d55781602460209401848301370101526001600160a01b039061075260ff61041e847f000000000000000000000000000000000000000000000000000000000000000016610b26565b918260011b926001600160ff1b038116036107cc5790849160035416803b156103315782906024835180958193637c928fe960e01b8352888a8401525af19081156107c357506107ae575b506107a9908254610b9f565b905580f35b926107bc6107a992946109e0565b929061079d565b513d86823e3d90fd5b634e487b7160e01b855260118452602485fd5b90503461033157826003193601126103315760209250549051908152f35b50503461012557816003193601126101255751908152602090f35b91905034610331576060366003190112610331576108346109ca565b9160243591821515830361092e5760443592831515840361092a576001600160a01b03948591610868838954163314610a87565b15610910571692831590811591610908575b50156108c55750508083549283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a36001600160a01b03198092161782556001541660015580f35b906020606492519162461bcd60e51b8352820152601560248201527f4f776e61626c653a207a65726f206164647265737300000000000000000000006044820152fd5b90503861087a565b9350505050166001600160a01b0319600154161760015580f35b8580fd5b8480fd5b346109c55760003660031901126109c557604080519061095182610a0a565b6010825260207f544f465453747261746567794d6f636b00000000000000000000000000000000818401528151928184928352815191828285015260005b8381106109af575050600083830185015250601f01601f19168101030190f35b818101830151878201870152869450820161098f565b600080fd5b600435906001600160a01b03821682036109c557565b67ffffffffffffffff81116109f457604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176109f457604052565b90601f8019910116810190811067ffffffffffffffff8211176109f457604052565b67ffffffffffffffff81116109f457601f01601f191660200190565b346109c55760003660031901126109c5576020610a7f610bac565b604051908152f35b15610a8e57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b604d8111610ae057600a0a90565b634e487b7160e01b600052601160045260246000fd5b3d15610b21573d90610b0782610a48565b91610b156040519384610a26565b82523d6000602084013e565b606090565b6001600160a01b03604051602081019263313ce56760e01b845260048252610b4d82610a0a565b600093849384935192165afa610b61610af6565b9080610b94575b15610b8d5760208180518101031261012557602001519060ff82168203610497575090565b5050601290565b506020815114610b68565b91908201809211610ae057565b6004548015610c0d57610bec60ff61041e6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610b26565b906001600160ff1b0382168203610ae057610c0a9160011b90610b9f565b90565b50600090565b15610c1a57565b60405162461bcd60e51b815260206004820152600c60248201527f4e6f74205969656c64426f7800000000000000000000000000000000000000006044820152606490fd5b6002805414610c6e5760028055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fdfea2646970667358221220423c225dad207315fcbef1d22d23942d81e5fa352fb2d63a6df050fe4210f2cc64736f6c63430008120033";

type TOFTStrategyMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TOFTStrategyMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TOFTStrategyMock__factory extends ContractFactory {
  constructor(...args: TOFTStrategyMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TOFTStrategyMock";
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    _toft: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TOFTStrategyMock> {
    return super.deploy(
      _yieldBox,
      _toft,
      _rewardToken,
      overrides || {}
    ) as Promise<TOFTStrategyMock>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    _toft: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yieldBox,
      _toft,
      _rewardToken,
      overrides || {}
    );
  }
  override attach(address: string): TOFTStrategyMock {
    return super.attach(address) as TOFTStrategyMock;
  }
  override connect(signer: Signer): TOFTStrategyMock__factory {
    return super.connect(signer) as TOFTStrategyMock__factory;
  }
  static readonly contractName: "TOFTStrategyMock";

  public readonly contractName: "TOFTStrategyMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TOFTStrategyMockInterface {
    return new utils.Interface(_abi) as TOFTStrategyMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TOFTStrategyMock {
    return new Contract(address, _abi, signerOrProvider) as TOFTStrategyMock;
  }
}
