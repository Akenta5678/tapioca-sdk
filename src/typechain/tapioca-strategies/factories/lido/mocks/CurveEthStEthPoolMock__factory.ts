/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CurveEthStEthPoolMock,
  CurveEthStEthPoolMockInterface,
} from "../../../lido/mocks/CurveEthStEthPoolMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_steth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "dx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "exchange",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "dx",
        type: "uint256",
      },
    ],
    name: "get_dy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "steth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60803461007457601f6103a638819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b03191691909117905560405161031690816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040818152600436101561001f575b5050361561001d57600080fd5b005b600091823560e01c9081633df02124146100a2575080635e0d443f146100735763953d7ee203610010573461006f578160031936011261006f57905490516001600160a01b039091168152602090f35b5080fd5b503461006f57606036600319011261006f5760209061009061025a565b5061009961026f565b50516044358152f35b8383608036600319011261006f576100b861025a565b506100c161026f565b506044359160018060a01b03815416936020948582016323b872dd60e01b81523360248401523060448401528560648401526064835260a083019267ffffffffffffffff938181108582111761024657865251849283929083905af161012561027f565b81610209575b50156101c757825190858201908111828210176101b357835281905280808085335af161015661027f565b50156101625751908152f35b5162461bcd60e51b815260048101839052602560248201527f537461726761746553747261746567793a20455448207472616e736665722066604482015264185a5b195960da1b6064820152608490fd5b634e487b7160e01b83526041600452602483fd5b60648584519062461bcd60e51b825280600483015260248201527f426f72696e6745524332303a205472616e7366657246726f6d206661696c65646044820152fd5b80915051868115918215610222575b505090508661012b565b838092935001031261024257850151801515810361024257808688610218565b8280fd5b634e487b7160e01b86526041600452602486fd5b6004359081600f0b820361026a57565b600080fd5b6024359081600f0b820361026a57565b3d156102db5767ffffffffffffffff903d8281116102c55760405192601f8201601f19908116603f01168401908111848210176102c55760405282523d6000602084013e565b634e487b7160e01b600052604160045260246000fd5b60609056fea26469706673582212208e4e826a08b958d56e13b1084c200293cb60c21f2a087f9914cc0baab5cd007764736f6c63430008120033";

type CurveEthStEthPoolMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurveEthStEthPoolMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CurveEthStEthPoolMock__factory extends ContractFactory {
  constructor(...args: CurveEthStEthPoolMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CurveEthStEthPoolMock";
  }

  override deploy(
    _steth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CurveEthStEthPoolMock> {
    return super.deploy(
      _steth,
      overrides || {}
    ) as Promise<CurveEthStEthPoolMock>;
  }
  override getDeployTransaction(
    _steth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_steth, overrides || {});
  }
  override attach(address: string): CurveEthStEthPoolMock {
    return super.attach(address) as CurveEthStEthPoolMock;
  }
  override connect(signer: Signer): CurveEthStEthPoolMock__factory {
    return super.connect(signer) as CurveEthStEthPoolMock__factory;
  }
  static readonly contractName: "CurveEthStEthPoolMock";

  public readonly contractName: "CurveEthStEthPoolMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveEthStEthPoolMockInterface {
    return new utils.Interface(_abi) as CurveEthStEthPoolMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurveEthStEthPoolMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CurveEthStEthPoolMock;
  }
}
