/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LendingPoolMock,
  LendingPoolMockInterface,
} from "../../../aave/mocks/LendingPoolMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getUserAccountData",
    outputs: [
      {
        internalType: "uint256",
        name: "totalCollateralETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalDebtETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "availableBorrowsETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentLiquidationThreshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ltv",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "healthFactor",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60803461007457601f61056138819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b0319169190911790556040516104d190816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004908136101561001657600080fd5b600092833560e01c90816338d52e0f146103935750806369328dec1461022f578063bf92857c146101775763e8eda9df1461005057600080fd5b34610173576080366003190112610173576100696103b7565b506100726103d2565b5060643561ffff8116036101735760018060a01b03835416815160208101906323b872dd60e01b825233602482015230604482015260243560648201526064815260a0810181811067ffffffffffffffff82111761016057845251859283929083905af16100de610420565b81610131575b50156100ee578280f35b906020606492519162461bcd60e51b8352820152602060248201527f426f72696e6745524332303a205472616e7366657246726f6d206661696c65646044820152fd5b8051801592508215610146575b5050386100e4565b6101599250602080918301019101610460565b388061013e565b634e487b7160e01b875260418652602487fd5b8280fd5b50346101735760208060031936011261021a576101926103b7565b50835482516370a0823160e01b815230948101949094528190849060249082906001600160a01b03165afa9283156102255784936101f1575b5092818160c09581945195865285015283015280606083015280608083015260a0820152f35b9080935081813d831161021e575b61020981836103e8565b8101031261021a57519160c06101cb565b8380fd5b503d6101ff565b82513d86823e3d90fd5b5091903461038f57606036600319011261038f5761024b6103b7565b50602435906102586103d2565b926103e880840290848204148415171561037c578154612710909104946001600160a01b039182169161028b8787610478565b885191602083019363a9059cbb60e01b85521660248301526044820152604481526080810181811067ffffffffffffffff821117610369578493929184918a5251925af16102d7610420565b8161033a575b50156102f7576020846102f08585610478565b9051908152f35b606490602085519162461bcd60e51b8352820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c6564000000006044820152fd5b805180159250821561034f575b5050386102dd565b6103629250602080918301019101610460565b3880610347565b634e487b7160e01b855260418652602485fd5b506011602492634e487b7160e01b835252fd5b5080fd5b84903461038f578160031936011261038f5790546001600160a01b03168152602090f35b600435906001600160a01b03821682036103cd57565b600080fd5b604435906001600160a01b03821682036103cd57565b90601f8019910116810190811067ffffffffffffffff82111761040a57604052565b634e487b7160e01b600052604160045260246000fd5b3d1561045b573d9067ffffffffffffffff821161040a576040519161044f601f8201601f1916602001846103e8565b82523d6000602084013e565b606090565b908160209103126103cd575180151581036103cd5790565b9190820180921161048557565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220921e0841e8543659f81660d8da959bdef8d2ce8d82ff93b87b2ccff58bc41b2f64736f6c63430008120033";

type LendingPoolMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LendingPoolMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LendingPoolMock__factory extends ContractFactory {
  constructor(...args: LendingPoolMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "LendingPoolMock";
  }

  override deploy(
    _asset: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LendingPoolMock> {
    return super.deploy(_asset, overrides || {}) as Promise<LendingPoolMock>;
  }
  override getDeployTransaction(
    _asset: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_asset, overrides || {});
  }
  override attach(address: string): LendingPoolMock {
    return super.attach(address) as LendingPoolMock;
  }
  override connect(signer: Signer): LendingPoolMock__factory {
    return super.connect(signer) as LendingPoolMock__factory;
  }
  static readonly contractName: "LendingPoolMock";

  public readonly contractName: "LendingPoolMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LendingPoolMockInterface {
    return new utils.Interface(_abi) as LendingPoolMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LendingPoolMock {
    return new Contract(address, _abi, signerOrProvider) as LendingPoolMock;
  }
}
