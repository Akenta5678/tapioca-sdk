/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ConvexTricryptoStrategy,
  ConvexTricryptoStrategyInterface,
} from "../../convex/ConvexTricryptoStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewadPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_booster",
        type: "address",
      },
      {
        internalType: "address",
        name: "_zap",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lpGetter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_multiSwapper",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_old",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_new",
        type: "uint256",
      },
    ],
    name: "DepositThreshold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_old",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_new",
        type: "address",
      },
    ],
    name: "LPGetterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_old",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_new",
        type: "address",
      },
    ],
    name: "MultiSwapper",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "booster",
    outputs: [
      {
        internalType: "contract IConvexBooster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cheapWithdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "compound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "compoundAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposited",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "description_",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lpGetter",
    outputs: [
      {
        internalType: "contract ITricryptoLPGetter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lpToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "contract IConvexRewardPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setDepositThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_swapper",
        type: "address",
      },
    ],
    name: "setMultiSwapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lpGetter",
        type: "address",
      },
    ],
    name: "setTricryptoLPGetter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapper",
    outputs: [
      {
        internalType: "contract ISwapper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenType",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wrappedNative",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zap",
    outputs: [
      {
        internalType: "contract IConvexZap",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101a080604052346200053a5760e0816200332a80380380916200002482856200087b565b8339810103126200053a578051906001600160a01b03821682036200053a5762000051602082016200089f565b9062000060604082016200089f565b602062000070606084016200089f565b93600462000081608086016200089f565b916200009e60c06200009660a089016200089f565b97016200089f565b976080528060a0523360018060a01b0319600054161760005560405194859384923360007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a360016002556001600160a01b0390811660c052600380546001600160a01b03199081168d8416179091559181166101205289811660e052845490911688821617845516610100819052633c41a11560e21b82525afa908115620005485760009162000843575b5061014081905260e051604051631526fe2760e01b8152600481019290925260c090829060249082906001600160a01b03165afa90811562000548576000916200076b575b50516001600160a01b03908116610160526101005160405163f7c618c160e01b81529160209183916004918391165afa908115620005485760009162000729575b506001600160a01b039081166101805260c05160405163095ea7b360e01b81528383166004820152600060248201819052909260209284926044928492165af180156200054857620006e8575b5060c05160405163095ea7b360e01b81526001600160a01b03838116600483015260001960248301819052939260209183916044918391600091165af180156200054857620006a7575b506101605160405163095ea7b360e01b81526001600160a01b03838116600483015260006024830181905291926020928492604492849291165af18015620005485762000660575b506101605160405163095ea7b360e01b81526001600160a01b039283166004820152602481018490529160209183916044918391600091165af1801562000548576200061f575b506101605160405163095ea7b360e01b81526001600160a01b03848116600483015260006024830181905291926020928492604492849291165af180156200054857620005d8575b506101605160405163095ea7b360e01b81526001600160a01b039384166004820152602481018390529260209184916044918391600091165af18015620005485762000596575b6101805160405163095ea7b360e01b81526001600160a01b03858116600483015260006024830181905291945060209285926044928492165af18015620005485762000554575b6101805160405163095ea7b360e01b81526001600160a01b039485166004820152602481019290925290926020925083916044918391600091165af18015620005485762000502575b604051612a679081620008c382396080518181816103ba01528181610b480152610e06015260a051816101d4015260c05181818161026f015281816103fa01528181610ad60152818161176201528181611f620152818161226e015281816127bf0152612909015260e051818181610dba01526126170152610100518181816106ef01528181610bce01528181610f68015281816116dd015261274701526101205181818161116c01528181611c360152611ce801526101405181818161096501526125e501526101605181610fac01526101805181818161018d015281816109f501526117380152f35b6020813d6020116200053f575b816200051e602093836200087b565b810103126200053a576200053290620008b4565b503862000417565b600080fd5b3d91506200050f565b6040513d6000823e3d90fd5b6020823d6020116200058d575b8162000570602093836200087b565b810103126200053a5762000586602092620008b4565b50620003ce565b3d915062000561565b6020823d602011620005cf575b81620005b2602093836200087b565b810103126200053a57620005c8600092620008b4565b5062000387565b3d9150620005a3565b6020813d60201162000616575b81620005f4602093836200087b565b810103126200053a576000926200060d602092620008b4565b50925062000340565b3d9150620005e5565b6020813d60201162000657575b816200063b602093836200087b565b810103126200053a576200064f90620008b4565b5038620002f8565b3d91506200062c565b6020813d6020116200069e575b816200067c602093836200087b565b810103126200053a5760009162000695602092620008b4565b509150620002b1565b3d91506200066d565b6020813d602011620006df575b81620006c3602093836200087b565b810103126200053a57620006d790620008b4565b503862000269565b3d9150620006b4565b6020813d60201162000720575b8162000704602093836200087b565b810103126200053a576200071890620008b4565b50386200021f565b3d9150620006f5565b90506020813d60201162000762575b8162000747602093836200087b565b810103126200053a576200075b906200089f565b38620001d2565b3d915062000738565b905060c0813d60c0116200083a575b816200078960c093836200087b565b810103126200053a576040519060c082016001600160401b038111838210176200082457620008189160a091604052620007c3816200089f565b8452620007d3602082016200089f565b6020850152620007e6604082016200089f565b6040850152620007f9606082016200089f565b60608501526200080c608082016200089f565b608085015201620008b4565b60a08201523862000191565b634e487b7160e01b600052604160045260246000fd5b3d91506200077a565b90506020813d60201162000872575b8162000861602093836200087b565b810103126200053a5751386200014c565b3d915062000852565b601f909101601f19168101906001600160401b038211908210176200082457604052565b51906001600160a01b03821682036200053a57565b519081151582036200053a5756fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461133b57508163078dfbe71461122a57816317d70f7c1461120f57816322a58c5d1461119b578163262d6152146111575781632b3297f91461112e57816330fa738c1461111257816348dcb051146110ee5781634cce992d1461108e5781634e71e0c814610fdb5781635018830114610b055781635fcbd28514610f9757816366666aa914610f53578163726c64f214610f2b5781637284e41614610e91578163734daaa114610e725781638da5cb5b14610e4a578163afa91cc614610de9578163c6def07614610da5578163ce845d1d14610b05578163db2e21bc14610b77578163de40657714610b33578163e30c397814610b0a578163e3575f0514610b05578163eb6d3a1114610ac1578163ec32e1b914610988578163f10684541461094d578163f3fef3a31461038a578163f64920b81461020357508063f6b4dfb4146101c05763f7c618c11461017a57600080fd5b346101bc57816003193601126101bc57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b50346101bc57816003193601126101bc57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b919050346103865760209081600319360112610382576102216113e1565b845490936001600160a01b039161023b90831633146114a7565b81808254169516948684519387837fec75cca752304221051372b35f3488d6d59ae4be7bbbb04869f1e887318e12998480a37f0000000000000000000000000000000000000000000000000000000000000000169363095ea7b360e01b9283825284820152816024820152868160448185895af180156103785790879493929161033a575b506044929394886001600160601b0360a01b86541617855586519889958694855284015260001960248401525af190811561033157506102fe578280f35b81813d831161032a575b6103128183611448565b810103126101bc5761032390611506565b5038808280f35b503d610308565b513d85823e3d90fd5b929383813d8311610371575b6103508183611448565b8101031261036e578694610365604494611506565b509493926102c0565b80fd5b503d610346565b86513d84823e3d90fd5b8380fd5b8280fd5b9050346103865781600319360112610386576103a46113e1565b602480359390916001600160a01b03916103e1337f00000000000000000000000000000000000000000000000000000000000000008516146128b1565b6103e96129dd565b856103f261271e565b106108fa57827f000000000000000000000000000000000000000000000000000000000000000016948151946370a0823160e01b8087523083880152602096878184818c5afa9081156106c2578b916108cd575b5089116106cc575b83518181523084820152878184818c5afa9081156106c257908a918c91610691575b501061064457835163a9059cbb60e01b8882019081526001600160a01b038716848301908152602081018c90528c928392916104ba9082906040015b03601f198101835282611448565b5190828c5af16104c86126e1565b81610608575b50156105c7579086929184519889938492835230908301525afa80156105bd57879061056c575b7f058b581e2433b8b02263f5b0e5c2889fcb7b3495112884a3147619038fba46d89550846005548211610534575b5050519485521692a2600160025580f35b8161055f7fde22222b0ac0d69f2a19cd7b1443a29a5f37346640fff3506bdd6a9a9497f9d393612518565b8351908152a13884610523565b508385813d83116105b6575b6105828183611448565b810103126105b2577f058b581e2433b8b02263f5b0e5c2889fcb7b3495112884a3147619038fba46d894516104f5565b8680fd5b503d610578565b81513d89823e3d90fd5b50601c9086606494519362461bcd60e51b85528401528201527f426f72696e6745524332303a205472616e73666572206661696c6564000000006044820152fd5b80915051888115918215610621575b50509050386104ce565b838092935001031261064057876106389101611506565b808838610617565b8a80fd5b5060239086608494519362461bcd60e51b85528401528201527f436f6e76657854726963727970746f53747261746567793a206e6f7420656e6f6044820152620eaced60eb1b6064820152fd5b809250898092503d83116106bb575b6106aa8183611448565b810103126106405789905138610470565b503d6106a0565b85513d8d823e3d90fd5b6106e284516106da8161142d565b8b8152611912565b835181815230848201528a7f0000000000000000000000000000000000000000000000000000000000000000881689838681845afa9283156108c357908a918394610892575b506044885180948193636197390160e11b8352878b840152818a8401525af1801561088857610850575b508684541690855163af30c87360e01b8152818682015289818681865afa908115610846578d91610815575b506032810281810460321482151715610803578a926107a58f936127106044940490611693565b928951958694859363ca26855760e01b85528b850152898401525af180156106c2579088916107d6575b505061044e565b813d83116107fc575b6107e98183611448565b810103126107f85786386107cf565b8980fd5b503d6107df565b634e487b7160e01b8e5260118752858efd5b90508981813d831161083f575b61082c8183611448565b8101031261083b57513861077e565b8c80fd5b503d610822565b87513d8f823e3d90fd5b8881813d8311610881575b6108658183611448565b8101031261087d5761087690611506565b5038610752565b8b80fd5b503d61085b565b86513d8e823e3d90fd5b8281939295503d83116108bc575b6108aa8183611448565b810103126101bc578990519238610728565b503d6108a0565b87513d84823e3d90fd5b90508781813d83116108f3575b6108e48183611448565b81010312610640575138610446565b503d6108da565b5162461bcd60e51b81526020818601526029818501527f436f6e76657854726963727970746f53747261746567793a20616d6f756e74206044820152681b9bdd081d985b1a5960ba1b6064820152608490fd5b5050346101bc57816003193601126101bc57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b919050346103865760209081600319360112610382576109a66113e1565b845490936001600160a01b03916109c090831633146114a7565b8180600354169516948684519387837fe36d79dcda63d47bee388b7dde8bba0b326a1b459889de48dc94dcf3504eda4b8480a37f0000000000000000000000000000000000000000000000000000000000000000169363095ea7b360e01b9283825284820152816024820152868160448185895af1801561037857908794939291610a86575b506044929394886001600160601b0360a01b600354161760035586519889958694855284015260001960248401525af190811561033157506102fe578280f35b929383813d8311610aba575b610a9c8183611448565b8101031261036e578694610ab1604494611506565b50949392610a46565b503d610a92565b5050346101bc57816003193601126101bc57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b611484565b5050346101bc57816003193601126101bc5760015490516001600160a01b039091168152602090f35b5050346101bc57816003193601126101bc57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b8383346101bc57816003193601126101bc5781546001600160a01b039390610ba290851633146114a7565b610bb88251610bb08161142d565b848152611912565b81516370a0823160e01b815230828201526020947f000000000000000000000000000000000000000000000000000000000000000081168683602481845afa928315610d3557869188918395610d73575b506044875180948193636197390160e11b8352888a8401528160248401525af18015610d3557610d3f575b508254845163af30c87360e01b81528085018490529391168684602481845afa938415610d35578694610d02575b50603284029380850460321490151715610cef57869291866044926127108851978896879563ca26855760e01b87528601520460248401525af1928315610ce4578093610cb2575b505051908152f35b909192508382813d8311610cdd575b610ccb8183611448565b8101031261036e575051908380610caa565b503d610cc1565b8251903d90823e3d90fd5b634e487b7160e01b865260118252602486fd5b9093508681813d8311610d2e575b610d1a8183611448565b81010312610d2a57519287610c62565b8580fd5b503d610d10565b85513d88823e3d90fd5b8681813d8311610d6c575b610d548183611448565b81010312610d2a57610d6590611506565b5086610c34565b503d610d4a565b9250935081813d8311610d9e575b610d8b8183611448565b81010312610d2a57868691519389610c09565b503d610d81565b5050346101bc57816003193601126101bc57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b8390346101bc5760203660031901126101bc57610e4290610e34337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316146128b1565b610e3c6129dd565b356128ec565b600160025580f35b5050346101bc57816003193601126101bc57905490516001600160a01b039091168152602090f35b5050346101bc57816003193601126101bc576020906005549051908152f35b8383346101bc57816003193601126101bc5780519160608301908382106001600160401b03831117610f185750610f1493508152603382527f436f6e7665782d54726963727970746f20737472617465677920666f722077726020830152726170706564206e61746976652061737365747360681b8183015251918291826113b5565b0390f35b634e487b7160e01b815260418552602490fd5b9050346103865782600319360112610386575490516001600160a01b03909116815260209150f35b5050346101bc57816003193601126101bc57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346101bc57816003193601126101bc57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b919050346103865782600319360112610386576001546001600160a01b0392909183831691903383900361104b5750508084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a36001600160a01b03199283161783551660015580f35b906020606492519162461bcd60e51b8352820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b905034610386576020366003190112610386577f3b779194d2cc7daf4de546bec10f6f325d421b2e202c11aa24e86e39845860cc9035916110d960018060a01b0385541633146114a7565b6005548151908152836020820152a160055580f35b5050346101bc57816003193601126101bc5760209061110b6116b6565b9051908152f35b5050346101bc57816003193601126101bc576020905160018152f35b5050346101bc57816003193601126101bc5760035490516001600160a01b039091168152602090f35b5050346101bc57816003193601126101bc57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b9190503461038657602036600319011261038657828235926001600160401b0384116101bc57366023850112156101bc57830135926111e56111dc85611469565b93519384611448565b83835236602485830101116101bc578361120c946024602093018386013783010152611912565b80f35b5050346101bc57816003193601126101bc5751908152602090f35b91905034610386576060366003190112610386576112466113e1565b9160243591821515830361133757604435928315158403610d2a5760018060a01b039485916112798389541633146114a7565b1561131b571692831590811591611313575b50156112d85750508083549283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a36001600160601b0360a01b8092161782556001541660015580f35b906020606492519162461bcd60e51b835282015260156024820152744f776e61626c653a207a65726f206164647265737360581b6044820152fd5b90503861128b565b9350505050166001600160601b0360a01b600154161760015580f35b8480fd5b83853461036e578060031936011261036e57818301908382106001600160401b03831117610f185750610f1493508152601082526f436f6e7665782d54726963727970746f60801b602083015251918291826113b5565b60005b8381106113a55750506000910152565b8181015183820152602001611395565b604091602082526113d58151809281602086015260208686019101611392565b601f01601f1916010190565b600435906001600160a01b03821682036113f757565b600080fd5b608081019081106001600160401b0382111761141757604052565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b0382111761141757604052565b90601f801991011681019081106001600160401b0382111761141757604052565b6001600160401b03811161141757601f01601f191660200190565b346113f75760003660031901126113f757602061149f61271e565b604051908152f35b156114ae57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b51906001600160a01b03821682036113f757565b519081151582036113f757565b80910361014081126113f75760408051926001600160401b0392606085018481118682101761141757808452608082126113f757611550816113fc565b611559836114f2565b8152602083015160808701526115708484016114f2565b60a0870152606083015160c087015285526080607f198201126113f7578290815161159a816113fc565b6080840151815260a0840151602082015260c08401518382015260e08401516060820152602087015260ff1901126113f75781519283830190811184821017611417576115fc916101209184526115f46101008201611506565b855201611506565b602083015282015290565b60206040610120926060815160018060a01b03808251168852858201518689015284820151168488015201516060860152606083820151805160808801528481015160a08801528381015160c0880152015160e086015201518051151561010085015201511515910152565b6116808161018093611607565b6000610160806101408401528201520190565b919082039182116116a057565b634e487b7160e01b600052601160045260246000fd5b60408051630700037d60e01b81523060048201526001600160a01b039291602080836024817f000000000000000000000000000000000000000000000000000000000000000089165afa9283156118ce5760009361189f575b506000948361171f575b50505050565b6003548351631fd177af60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008416811660048301527f0000000000000000000000000000000000000000000000000000000000000000841616602482015260448101959095526000606486018190526084860181905260a48601526101409650929391921690858160c481855afa95861561189457916117ed9596918493600093611865575b505084518080978194630b7ecdc960e31b835260048301611673565b03915afa91821561185b575060009161182f575b5090506032810290808204603214811517156116a057612710611825920490611693565b9038808080611719565b82813d8311611854575b6118438183611448565b8101031261036e5750518038611801565b503d611839565b513d6000823e3d90fd5b611885929350803d1061188d575b61187d8183611448565b810190611513565b9038806117d1565b503d611873565b84513d6000823e3d90fd5b90928382813d83116118c7575b6118b68183611448565b8101031261036e575051913861170f565b503d6118ac565b82513d6000823e3d90fd5b60001981146116a05760010190565b80518210156118fc5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b9081519160009215612427576040519060c082018281106001600160401b0382111761240f5760405260608252606060208301526060604083015260608083015260606080830152606060a08301528051810160c0828203126113375760208201516001600160401b038111610d2a5761199490602080840191850101612443565b9160408101516001600160401b0381116105b2576119ba90602080850191840101612443565b9160608201516001600160401b038111612423576119e090602080840191850101612443565b9160808101516001600160401b03811161235557611a0690602080850191840101612443565b9160a08201516001600160401b0381116107f857611a2c90602080840191850101612443565b9160c0810151906001600160401b0382116106405760208301603f8383010112156106405760208282010151906020611a6483611469565b94611a726040519687611448565b8386520160408385840101011161087d576040611a959360208601920101611392565b60a08701526080860152606085015260408401526020830152815260405160a081018181106001600160401b0382111761240f5760405283815283602082015283604082015283606082015283608082015260a082015160a0818051810103126113375760208101519060408101519060608101519060a0608082015191015160808601526060850152604084015260208301528152815151606083015151036123b4578151511561235957611b4f6060830151516124a9565b91845b60608201518051821015611bfc57602491906020906001600160a01b0390611b7b9084906118e8565b5116604051938480926370a0823160e01b82523060048301525afa8015611bf1578790611bbd575b611bb89250611bb282876118e8565b526118d9565b611b52565b506020823d602011611be9575b81611bd760209383611448565b810103126105b257611bb89151611ba3565b3d9150611bca565b6040513d89823e3d90fd5b5050929084845160208601516040870151936080880151948151916020810151604082015190608060608401519301519360018060a01b037f0000000000000000000000000000000000000000000000000000000000000000163b1561235557611c9099611cb4611cc692611ca26101249a6040519e8f9d8e9d8e632d3dc3f960e11b8152610120600482015201906124db565b8c81036003190160248e0152906124db565b8a81036003190160448c0152906124db565b8881036003190160648a0152906124db565b608487019590955260a486015260c485015260e48401526101048301520381837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1801561234a5761231b575b50611d2c6060840151516124a9565b91845b60608501518051821015611dc857602491906020906001600160a01b0390611d589084906118e8565b5116604051938480926370a0823160e01b82523060048301525afa8015611bf1578790611d94575b611d8f9250611bb282876118e8565b611d2f565b506020823d602011611dc0575b81611dae60209383611448565b810103126113f757611d8f9151611d80565b3d9150611da1565b505093919091611ddc6060850151516124a9565b92815b606086015151811015611e1e5780611e0f611dfd611e1993876118e8565b51611e08838b6118e8565b5190611693565b611bb282886118e8565b611ddf565b509390945060609150015190835b825181101561224c57611e3f81836118e8565b51611e53575b611e4e906118d9565b611e2c565b6001600160a01b03611e6582856118e8565b516003546001600160a01b03169116611e7e83856118e8565b5190803b156121fb578780604051602081019063095ea7b360e01b825286602482015282604482015260448152611eb4816113fc565b519082855af1611ec26126e1565b501561219c5760405163095ea7b360e01b602082019081526001600160a01b0390941660248201526044810192909252879283928390611f0581606481016104ac565b51925af1611f116126e1565b81612165575b501561210d576003546001600160a01b0390811690611f3683866118e8565b5116611f4283856118e8565b51604051631fd177af60e11b81526001600160a01b0392831660048201527f0000000000000000000000000000000000000000000000000000000000000000909216602483015260448201526000606482018190526084820181905260a482015261014090818160c481865afa9182156120e55788926120f0575b5050604051630b7ecdc960e31b815260208180611fdd8560048301611673565b0381865afa9081156120e55788916120b3575b506032818181020481148215171561209f576040928961201d846127106101c49561203997020490611693565b958551968795869463efa84c6d60e01b86526004860190611607565b610144840152306101648401526101a0610184840152816101a48401525af1801561209457612069575b50611e45565b604090813d831161208d575b61207f8183611448565b810103126113375738612063565b503d612075565b6040513d88823e3d90fd5b634e487b7160e01b89526011600452602489fd5b90506020813d6020116120dd575b816120ce60209383611448565b810103126113f7575138611ff0565b3d91506120c1565b6040513d8a823e3d90fd5b6121069250803d1061188d5761187d8183611448565b3880611fbd565b60405162461bcd60e51b815260206004820152602a60248201527f4f7065726174696f6e734c69623a3a73616665417070726f76653a20617070726044820152691bdd994819985a5b195960b21b6064820152608490fd5b805180159250821561217a575b505038611f17565b8192509060209181010312610d2a5760206121959101611506565b3880612172565b60405162461bcd60e51b815260206004820152603160248201527f4f7065726174696f6e734c69623a3a73616665417070726f76653a20617070726044820152701bdd985b081c995cd95d0819985a5b1959607a1b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f436f6e76657854726963727970746f53747261746567793a206e6f20636f6e746044820152631c9858dd60e21b6064820152608490fd5b50506040516370a0823160e01b815230600482015291929190506020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa91821561230f57916122dc575b506020816122d37fde22222b0ac0d69f2a19cd7b1443a29a5f37346640fff3506bdd6a9a9497f9d393612518565b604051908152a1565b90506020813d602011612307575b816122f760209383611448565b810103126113f7575160206122a5565b3d91506122ea565b604051903d90823e3d90fd5b6001600160401b038195929511612336576040529238611d1d565b634e487b7160e01b82526041600452602482fd5b6040513d87823e3d90fd5b8880fd5b60405162461bcd60e51b815260206004820152602d60248201527f436f6e76657854726963727970746f53747261746567793a206e6f7468696e6760448201526c103a379031b630b4b6903337b960991b6064820152608490fd5b60405162461bcd60e51b815260206004820152602d60248201527f436f6e76657854726963727970746f53747261746567793a20636c61696d206460448201526c185d18481b9bdd081d985b1a59609a1b6064820152608490fd5b634e487b7160e01b85526041600452602485fd5b8780fd5b509050565b6001600160401b0381116114175760051b60200190565b81601f820112156113f75780519161245a8361242c565b926124686040519485611448565b808452602092838086019260051b8201019283116113f7578301905b828210612492575050505090565b83809161249e846114f2565b815201910190612484565b906124b38261242c565b6124c06040519182611448565b82815280926124d1601f199161242c565b0190602036910137565b90815180825260208080930193019160005b8281106124fb575050505090565b83516001600160a01b0316855293810193928101926001016124ed565b60048054604080516305c43acd60e01b81529283018490526001600160a01b0394936020939192861691908482602481865afa918215611894576000926126b2575b50670de0b6b3a7640000821015612575575b50505050509050565b6032820291808304603214811517156116a05761259a60449161271088950490611693565b9160008651958694859363b529fe1d60e01b8552600485015260248401525af19081156118ce57600091612684575b506000939460648492845196879384926321d0683360e11b84527f000000000000000000000000000000000000000000000000000000000000000060048501526024840152600160448401527f0000000000000000000000000000000000000000000000000000000000000000165af190811561185b5750612650575b808080859461256c565b81813d831161267d575b6126648183611448565b810103126113f75761267590611506565b503880612646565b503d61265a565b908382813d83116126ab575b61269a8183611448565b8101031261036e57505160006125c9565b503d612690565b90918582813d83116126da575b6126c98183611448565b8101031261036e575051903861255a565b503d6126bf565b3d1561270c573d906126f282611469565b916127006040519384611448565b82523d6000602084013e565b606090565b919082018092116116a057565b604080516370a0823160e01b808252306004830152602092906001600160a01b039084846024817f000000000000000000000000000000000000000000000000000000000000000086165afa93841561287757600094612882575b5084826004541694602485518097819363af30c87360e01b835260048301525afa93841561287757908591600095612845575b50602484518094819382523060048301527f0000000000000000000000000000000000000000000000000000000000000000165afa91821561185b5750600091612811575b5061280e9250612809906128036116b6565b92612711565b612711565b90565b919282813d831161283e575b6128278183611448565b8101031261036e57505161280e91906128096127f1565b503d61281d565b9182819692963d8311612870575b61285d8183611448565b8101031261036e575084905193386127ac565b503d612853565b83513d6000823e3d90fd5b90938582813d83116128aa575b6128998183611448565b8101031261036e5750519238612779565b503d61288f565b156128b857565b60405162461bcd60e51b815260206004820152600c60248201526b09cdee840b2d2cad8c884def60a31b6044820152606490fd5b6040516370a0823160e01b815230600482015260209081816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156129d1576000916129a4575b50600554811161297857507f9447d5abbf0af693ca2937bf8b1ec6a8c9dc4fbac672911c633fb31c78e5e3ca91604051908152a1565b7fde22222b0ac0d69f2a19cd7b1443a29a5f37346640fff3506bdd6a9a9497f9d392506122d381612518565b908282813d83116129ca575b6129ba8183611448565b8101031261036e57505138612942565b503d6129b0565b6040513d6000823e3d90fd5b60028054146129ec5760028055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fdfea264697066735822122020c5b4f87d8246797f2e0b8d382c3c4831d185e6d81aed8fc34f6ddce0c0b80764736f6c63430008120033";

type ConvexTricryptoStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConvexTricryptoStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConvexTricryptoStrategy__factory extends ContractFactory {
  constructor(...args: ConvexTricryptoStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ConvexTricryptoStrategy";
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _rewadPool: PromiseOrValue<string>,
    _booster: PromiseOrValue<string>,
    _zap: PromiseOrValue<string>,
    _lpGetter: PromiseOrValue<string>,
    _multiSwapper: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ConvexTricryptoStrategy> {
    return super.deploy(
      _yieldBox,
      _token,
      _rewadPool,
      _booster,
      _zap,
      _lpGetter,
      _multiSwapper,
      overrides || {}
    ) as Promise<ConvexTricryptoStrategy>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _rewadPool: PromiseOrValue<string>,
    _booster: PromiseOrValue<string>,
    _zap: PromiseOrValue<string>,
    _lpGetter: PromiseOrValue<string>,
    _multiSwapper: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yieldBox,
      _token,
      _rewadPool,
      _booster,
      _zap,
      _lpGetter,
      _multiSwapper,
      overrides || {}
    );
  }
  override attach(address: string): ConvexTricryptoStrategy {
    return super.attach(address) as ConvexTricryptoStrategy;
  }
  override connect(signer: Signer): ConvexTricryptoStrategy__factory {
    return super.connect(signer) as ConvexTricryptoStrategy__factory;
  }
  static readonly contractName: "ConvexTricryptoStrategy";

  public readonly contractName: "ConvexTricryptoStrategy";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConvexTricryptoStrategyInterface {
    return new utils.Interface(_abi) as ConvexTricryptoStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConvexTricryptoStrategy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConvexTricryptoStrategy;
  }
}
