/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { GlpStrategy, GlpStrategyInterface } from "../../glp/GlpStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "contract IGmxRewardRouterV2",
        name: "_gmxRewardRouter",
        type: "address",
      },
      {
        internalType: "contract IGmxRewardRouterV2",
        name: "_glpRewardRouter",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_sGlp",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "cheapWithdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposited",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feesPending",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "priceNum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceDenom",
        type: "uint256",
      },
    ],
    name: "harvestGmx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "setFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenType",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6102206040908082523462000677576080816200236880380380916200002682856200067c565b833981010312620006775780516001600160a01b0390818116808203620006775760209362000057858201620006b6565b90606062000067888301620006b6565b9101518581168091036200067757869460805260a05260018060a01b031996600093338986541617855581519788809233887f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a363eb6d3a1160e01b825260049a8b915afa9081156200066d5790879186916200064b575b50166101008181528251633fc8cef360e01b81528589169a919891929088818c818f5afa908115620005ec57908391899162000629575b501603620005f65782516331e67c7160e01b8082529088818c818987165afa908115620005ec579083918991620005ca575b50166200058757610160948552835190815287818b818e5afa908115620004c857908291889162000565575b50168015620005225761018095865260c0528251630d43254f60e31b81529987908b908b9082905afa998a15620004f657899a8291889b9a9b9162000500575b501660e052868185511684519b8c809262af394d60e81b82525afa968715620004f65788999a8798620004d2575b50816101e098168852808287511685519a8b809263067200c560e11b82525afa988915620004c857908a969594939291889a620004a4575b50816102009a168a52808287511685519c8d8092631470f8ed60e21b82525afa9a8b156200049a57889b6200046e575b509086939291816101209c168c528082875116855196878092633e9b6c6f60e21b82525afa94851562000464579088918a9662000440575b508261014096168652808389511686519a8b8092633671df2560e01b82525afa98891562000436578a9962000412575b50826101a0991689528083895116865193848092631074c56d60e21b82525afa998a15620004075799620003d1575b50506101c097168752339060025416176002555197611c7b998a620006ed8b396080518a818161036e015281816105b501526105fc015260a0518a818161030d015281816104080152610bcc015260c0518a81816101c70152611a30015260e0518a818161114d0152818161171a01526118820152518981816107e901528181610ed70152611a710152518861176001525187610f610152518661101d015251858181610dd80152818161130d015261193b01525184818161048601526111f40152518381816112c401526117990152518281816103be01526112260152518181816111b701526118e60152f35b620003f6929950803d10620003ff575b620003ed81836200067c565b810190620006cb565b963880620002e3565b503d620003e1565b8551903d90823e3d90fd5b816200042e929a503d8b11620003ff57620003ed81836200067c565b9738620002b4565b85513d8c823e3d90fd5b816200045c9297503d8811620003ff57620003ed81836200067c565b943862000284565b84513d8b823e3d90fd5b819b506200048f9088959493928d3d10620003ff57620003ed81836200067c565b9a909192936200024c565b84513d8a823e3d90fd5b81620004c0929b503d8c11620003ff57620003ed81836200067c565b98386200021c565b84513d89823e3d90fd5b81620004ee9299503d8a11620003ff57620003ed81836200067c565b9638620001e4565b83513d88823e3d90fd5b6200051b9150893d8b11620003ff57620003ed81836200067c565b38620001b6565b835162461bcd60e51b8152808b01899052601560248201527f42616420474d582072657761726420726f7574657200000000000000000000006044820152606490fd5b620005809150893d8b11620003ff57620003ed81836200067c565b3862000176565b835162461bcd60e51b8152808b01899052601560248201527f42616420474c502072657761726420726f7574657200000000000000000000006044820152606490fd5b620005e591508a3d8c11620003ff57620003ed81836200067c565b386200014a565b85513d8a823e3d90fd5b825162461bcd60e51b8152808a01889052600d60248201526c0ae8aa89040dad2e6dac2e8c6d609b1b6044820152606490fd5b6200064491508a3d8c11620003ff57620003ed81836200067c565b3862000118565b620006669150873d8911620003ff57620003ed81836200067c565b38620000e1565b82513d87823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b03821190821017620006a057604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200067757565b908160209103126200067757516001600160a01b038116810362000677579056fe608060408181526004908136101561001657600080fd5b600092833560e01c90816306fdde0314610a7f57508063078dfbe71461097457806317d70f7c1461095957806330fa738c1461093d578063320113cd1461091e5780633c49e523146108e45780634641257d146108cb57806346904840146108a2578063476343ee146107b55780634e71e0c81461070457806350188301146105725780637284e416146106625780638da5cb5b1461063a578063afa91cc6146105e4578063ce845d1d14610572578063de406577146105a0578063e30c397814610577578063e3575f0514610572578063e74b981b14610525578063f3fef3a314610340578063f6b4dfb4146102f85763fa461e331461011657600080fd5b346102f45760603660031901126102f45760443567ffffffffffffffff918282116102f057366023830112156102f057818401358381116102ec57820160249336858301116102e8577380a9ae39310abf666a87c743d6ebbd0e8c42158e918233036102b757908491602095869103126102b257858451928684019463a9059cbb60e01b865282850152013560448301526044825260808201908282109082111761029e57835251600091829190827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af13d15610297573d61020181610b2d565b9061020e84519283610b0b565b81523d60008583013e5b81610267575b5015610228578480f35b5162461bcd60e51b815292830152601c908201527f426f72696e6745524332303a205472616e73666572206661696c6564000000006044820152606490fd5b8051801592508490831561027f575b5050503861021e565b61028f9350820181019101610c9a565b388381610276565b6060610218565b85604188634e487b7160e01b600052526000fd5b600080fd5b835162461bcd60e51b8152602081890152600c818801526b139bdd081d1a19481c1bdbdb60a21b6044820152606490fd5b8680fd5b8580fd5b8480fd5b8280fd5b83823461033c578160031936011261033c57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b5091903461033c578260031936011261033c5761035b610b89565b602435916001600160a01b0390610395337f0000000000000000000000000000000000000000000000000000000000000000841614611c0a565b61039d610dd6565b6103a5610eb5565b85516370a0823160e01b815230828201526020816024817f000000000000000000000000000000000000000000000000000000000000000087165afa9081156104e75790859187916104f1575b5010610483575b8315610448575061042d9394507f000000000000000000000000000000000000000000000000000000000000000016610cb2565b610435611120565b61043d611861565b6104456116f0565b80f35b606490602087519162461bcd60e51b83528201526015602482015274053747261746567793a20616d6f756e74206973203605c1b6044820152fd5b817f000000000000000000000000000000000000000000000000000000000000000016803b156102ec5785809183895180948193633ccfd60b60e01b83525af180156104e7576104d4575b506103f9565b6104e090959195610ac5565b93386104ce565b87513d88823e3d90fd5b9150506020813d821161051d575b8161050c60209383610b0b565b810103126102ec57849051386103f2565b3d91506104ff565b833461056f57602036600319011261056f5761053f610b89565b81546001600160a01b0391906105589083163314610c4f565b166001600160601b0360a01b600254161760025580f35b80fd5b610b9f565b83823461033c578160031936011261033c5760015490516001600160a01b039091168152602090f35b83823461033c578160031936011261033c57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b833461056f57602036600319011261056f5761062a337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614611c0a565b610632610dd6565b61042d610eb5565b83823461033c578160031936011261033c57905490516001600160a01b039091168152602090f35b5082903461033c578160031936011261033c57805191606083019083821067ffffffffffffffff8311176106f157506106ed93508152603182527f486f6c6473207374616b656420474c5020746f6b656e7320616e6420636f6d706020830152706f756e647320746865207265776172647360781b8183015251918291602083526020830190610b49565b0390f35b634e487b7160e01b815260418552602490fd5b50346102f457826003193601126102f4576001546001600160a01b039290918383169190338390036107725750508084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a36001600160a01b03199283161783551660015580f35b906020606492519162461bcd60e51b8352820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b50346102f457826003193601126102f45760035490816107d3578380f35b80516370a0823160e01b815230938101939093527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b03906020856024818587165afa90811561089957508590610866575b610852945083811061085c575b5061084a9183916002541690610cb2565b600354610db3565b6003553880808380f35b925061084a610839565b506020843d8211610891575b8161087f60209383610b0b565b810103126102f057610852935161082c565b3d9150610872565b513d87823e3d90fd5b83823461033c578160031936011261033c5760025490516001600160a01b039091168152602090f35b833461056f578060031936011261056f57610632610dd6565b50346102f45736600319011261033c576106329061090c60018060a01b038454163314610c4f565b610914610dd6565b6024359035611a0a565b83823461033c578160031936011261033c576020906003549051908152f35b83823461033c578160031936011261033c576020905160018152f35b83823461033c578160031936011261033c5751908152602090f35b50346102f45760603660031901126102f45761098e610b89565b916024359182151583036102f0576044359283151584036102ec5760018060a01b039485916109c1838954163314610c4f565b15610a63571692831590811591610a5b575b5015610a205750508083549283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a36001600160601b0360a01b8092161782556001541660015580f35b906020606492519162461bcd60e51b835282015260156024820152744f776e61626c653a207a65726f206164647265737360581b6044820152fd5b9050386109d3565b9350505050166001600160601b0360a01b600154161760015580f35b92905034610ac15783600319360112610ac1576106ed9350610aa083610aef565b825263073474c560e41b602083015251918291602083526020830190610b49565b8380fd5b67ffffffffffffffff8111610ad957604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610ad957604052565b90601f8019910116810190811067ffffffffffffffff821117610ad957604052565b67ffffffffffffffff8111610ad957601f01601f191660200190565b919082519283825260005b848110610b75575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610b54565b600435906001600160a01b03821682036102b257565b346102b25760008060031936011261056f576040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115610c44578291610c0f575b602082604051908152f35b90506020813d8211610c3c575b81610c2960209383610b0b565b8101031261033c57602091505138610c04565b3d9150610c1c565b6040513d84823e3d90fd5b15610c5657565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b908160209103126102b2575180151581036102b25790565b60405163a9059cbb60e01b602082019081526001600160a01b039390931660248201526044808201949094529283526000928392908390610cf4606482610b0b565b51926001600160a01b03165af13d15610dac573d610d1181610b2d565b90610d1f6040519283610b0b565b81523d6000602083013e5b81610d7d575b5015610d3857565b60405162461bcd60e51b815260206004820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c6564000000006044820152606490fd5b8051801592508215610d92575b505038610d30565b610da59250602080918301019101610c9a565b3880610d8a565b6060610d2a565b91908203918211610dc057565b634e487b7160e01b600052601160045260246000fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156102b257604051809163185b800160e11b8252600160048301528160e46000938480948160248401526001604484015281606484015260016084840152600160a48401528160c48401525af1908115610e695750610e5e5750565b610e6790610ac5565b565b604051903d90823e3d90fd5b81810292918115918404141715610dc057565b8115610e92570490565b634e487b7160e01b600052601260045260246000fd5b91908201809211610dc057565b604080516370a0823160e01b81523060048201526020916001600160a01b03917f00000000000000000000000000000000000000000000000000000000000000008316908481602481855afa908115611115576000916110e8575b5060035490818111610f25575b505050505050565b81610f2f91610db3565b90606482029180830460641481151715610dc057610f55612710610f5d94048093610ea8565b600355610db3565b90837f000000000000000000000000000000000000000000000000000000000000000016835163095ea7b360e01b908181528260048201526000602482015287816044816000885af180156110dd579185939189936110c0575b5086519081526001600160a01b039190911660048201526024810192909252816044816000865af180156110b55791608491879493611088575b5060008551968794859363364e231160e01b8552600485015260248401528160448401528160648401527f0000000000000000000000000000000000000000000000000000000000000000165af190811561107e5750611055575b80808080610f1d565b813d8311611077575b6110688183610b0b565b810103126102b257388061104c565b503d61105e565b513d6000823e3d90fd5b6110a790853d87116110ae575b61109f8183610b0b565b810190610c9a565b5038610ff1565b503d611095565b84513d6000823e3d90fd5b6110d690843d86116110ae5761109f8183610b0b565b5038610fb7565b86513d6000823e3d90fd5b908582813d831161110e575b6110fe8183610b0b565b8101031261056f57505138610f10565b503d6110f4565b83513d6000823e3d90fd5b604080516370a0823160e01b80825230600480840191909152600093909290916001600160a01b039060207f000000000000000000000000000000000000000000000000000000000000000083168185602481845afa94851561141357889561141d575b508551637aeceb1f60e11b8152308882019081526001600160a01b039092166020830152908290829081906040010381877f0000000000000000000000000000000000000000000000000000000000000000165afa80156114135788906113e4575b6111f1915085610ea8565b907f000000000000000000000000000000000000000000000000000000000000000092865190815230888201528181602481887f0000000000000000000000000000000000000000000000000000000000000000165afa9182156113da5789926113aa575b5050611262918361144c565b9283156113a1578084116112c1575b501692833b156102f0579060248592838551968794859363b6b55f2560e01b85528401525af19081156112b857506112a7575050565b6112b18291610ac5565b61056f5750565b513d84823e3d90fd5b827f000000000000000000000000000000000000000000000000000000000000000016803b1561138a5787809188885180948193633ccfd60b60e01b83525af161138e575b50611334837f0000000000000000000000000000000000000000000000000000000000000000169185610db3565b813b1561138a57879160248392885194859384926364f6446760e01b84528c8401525af180156113805790879161136c575b50611271565b61137590610ac5565b6102ec578538611366565b85513d89823e3d90fd5b8780fd5b61139a90979197610ac5565b9538611306565b50505050505050565b90809250813d83116113d3575b6113c18183610b0b565b8101031261138a575161126238611256565b503d6113b7565b87513d8b823e3d90fd5b508181813d831161140c575b6113fa8183610b0b565b8101031261138a576111f190516111e6565b503d6113f0565b86513d8a823e3d90fd5b9094508181813d8311611445575b6114358183610b0b565b8101031261138a57519381611184565b503d61142b565b91909182156116e85760408051630479363b60e11b815230600482015290926020926001600160a01b031691908382602481865afa9182156116dd576000926116ae575b5084516327e235e360e01b8152306004820152948486602481875afa9586156116a357600096611674575b50805163b5ff136d60e01b81523060048201528581602481885afa801561162557600090611645575b6114f891506114f38886610db3565b610db3565b96871561163857878110611630575b5080516322f80f7360e11b8152306004820152948086602481885afa958615611625578789916000986115e6575b5091611556866115518a61154c8596602498610ea8565b610e75565b610e88565b96845193848092635d50e72960e01b82523060048301525afa92831561107e57506000926115b5575b505061158a91610ea8565b918210611599575b5050505090565b6115ac94506114f3929161155191610e75565b38808080611592565b81819392933d83116115df575b6115cc8183610b0b565b8101031261056f57505161158a3861157f565b503d6115c2565b838095969798999350819492503d831161161e575b6116058183610b0b565b8101031261056f57505194939291908787611556611535565b503d6115fb565b82513d6000823e3d90fd5b965038611507565b5050505050505050600090565b8682813d831161166d575b61165a8183610b0b565b8101031261056f57506114f890516114e4565b503d611650565b90958582813d831161169c575b61168b8183610b0b565b8101031261056f57505194386114bb565b503d611681565b50513d6000823e3d90fd5b90918482813d83116116d6575b6116c58183610b0b565b8101031261056f5750519038611490565b503d6116bb565b85513d6000823e3d90fd5b505050600090565b604080516370a0823160e01b8082523060048301529091906001600160a01b0390602080856024817f000000000000000000000000000000000000000000000000000000000000000087165afa9485156110b557600095611832575b5083519182523060048301528082602481867f0000000000000000000000000000000000000000000000000000000000000000165afa9081156110b557600091611803575b506117bf91507f0000000000000000000000000000000000000000000000000000000000000000948561144c565b9283156117fd571691823b156102b257600092602484928451958693849263b6b55f2560e01b845260048401525af190811561107e5750610e5e5750565b50505050565b82813d831161182b575b6118178183610b0b565b8101031261056f57506117bf905138611791565b503d61180d565b90948582813d831161185a575b6118498183610b0b565b8101031261056f575051933861174c565b503d61183f565b604080516370a0823160e01b8152306004820152906001600160a01b0360207f000000000000000000000000000000000000000000000000000000000000000082168185602481845afa9485156110b5576000956119db575b508351637aeceb1f60e11b81523060048201526001600160a01b039190911660248201529080826044817f000000000000000000000000000000000000000000000000000000000000000087165afa9081156110b5576000916119ab575b50601491506119279085610ea8565b048084116119355750505050565b611961917f00000000000000000000000000000000000000000000000000000000000000001693610db3565b823b156102b2576000926024849284519586938492633be3166560e21b845260048401525af190811561107e575061199c575b8080806117fd565b6119a590610ac5565b38611994565b82813d83116119d4575b6119bf8183610b0b565b8101031261056f575051601490611927611918565b503d6119b5565b90948282813d8311611a03575b6119f28183610b0b565b8101031261056f57505193816118ba565b503d6119e8565b604080516370a0823160e01b815230600482015260209391929091906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081168685602481845afa9485156110dd57600095611bdb575b5084156113a1577f0000000000000000000000000000000000000000000000000000000000000000821611908115611bbf57856401000276a4915b815192878a850152898452611ab784610aef565b611af483519485938493630251596160e31b85523060048601528860248601528b604486015216606484015260a0608484015260a4830190610b49565b038160007380a9ae39310abf666a87c743d6ebbd0e8c42158e5af19182156110dd576000918293611b89575b5015611b8257505b600160ff1b8114610dc057611b4992611b4391600003610e75565b92610e75565b11611b52575050565b60649250519062461bcd60e51b82526004820152600a60248201526909cdee840cadcdeeaced60b31b6044820152fd5b9050611b28565b919092508682813d8311611bb8575b611ba28183610b0b565b8101031261056f57508681519101519138611b20565b503d611b98565b8573fffd8963efd1fc6a506488495d951d5263988d2591611aa3565b90948782813d8311611c03575b611bf28183610b0b565b8101031261056f5750519338611a68565b503d611be8565b15611c1157565b60405162461bcd60e51b815260206004820152600c60248201526b09cdee840b2d2cad8c884def60a31b6044820152606490fdfea2646970667358221220e247c968c015eafa582d26feddb8556783f55f02f8c6d4ec076a9192bdcf62e464736f6c63430008120033";

type GlpStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GlpStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GlpStrategy__factory extends ContractFactory {
  constructor(...args: GlpStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GlpStrategy";
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    _gmxRewardRouter: PromiseOrValue<string>,
    _glpRewardRouter: PromiseOrValue<string>,
    _sGlp: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GlpStrategy> {
    return super.deploy(
      _yieldBox,
      _gmxRewardRouter,
      _glpRewardRouter,
      _sGlp,
      overrides || {}
    ) as Promise<GlpStrategy>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    _gmxRewardRouter: PromiseOrValue<string>,
    _glpRewardRouter: PromiseOrValue<string>,
    _sGlp: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yieldBox,
      _gmxRewardRouter,
      _glpRewardRouter,
      _sGlp,
      overrides || {}
    );
  }
  override attach(address: string): GlpStrategy {
    return super.attach(address) as GlpStrategy;
  }
  override connect(signer: Signer): GlpStrategy__factory {
    return super.connect(signer) as GlpStrategy__factory;
  }
  static readonly contractName: "GlpStrategy";

  public readonly contractName: "GlpStrategy";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GlpStrategyInterface {
    return new utils.Interface(_abi) as GlpStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GlpStrategy {
    return new Contract(address, _abi, signerOrProvider) as GlpStrategy;
  }
}
