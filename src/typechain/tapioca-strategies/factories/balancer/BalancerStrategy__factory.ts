/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BalancerStrategy,
  BalancerStrategyInterface,
} from "../../balancer/BalancerStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_bal",
        type: "address",
      },
      {
        internalType: "address",
        name: "_helpers",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_old",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_new",
        type: "uint256",
      },
    ],
    name: "DepositThreshold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
    ],
    name: "RewardTokens",
    type: "event",
  },
  {
    inputs: [],
    name: "bal",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cheapWithdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "compound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "compoundAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposited",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "description_",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "helpers",
    outputs: [
      {
        internalType: "contract IBalancerHelpers",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "contract IBalancerPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "rescueEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setDepositThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenType",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateCache",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract IBalancerVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wrappedNative",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x610160604081815234620003d75760c082620025028038038091620000258285620003dc565b833981010312620003d75781516001600160a01b03918282168203620003d75760206200005481860162000416565b936200006283870162000416565b95816060820151976200008660a06200007e6080860162000416565b940162000416565b966080528760a052816000933360018060a01b03198654161785558188519a33877f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a360016002551660c0521660e05216610100978189528060035563f6c0092760e01b885260048801528487602481845afa968715620003cd5782976200037d575b50826101209716875282610140961686528260c05116855185816044818763095ea7b360e01b968783528860048401528160248401525af18015620003735762000351575b508360c051169386518281528360048201528681604481886000199a8b60248401525af1801562000325576200032f575b508386828b511660448a51809481938883528960048401528160248401525af18015620003255760449288959492879262000303575b508b5116895197889586948552600485015260248401525af1908115620002f85750620002c3575b505051916120bc938462000446853960805184818161022c01528181610705015261085e015260a051846101cb015260c05184818161026c01528181610693015281816108a201528181611717015281816117ce01528181611ac001528181611db90152611f73015260e051846110500152518381816101840152818161097101528181611770015281816119ff01528181611a6c0152611d740152518281816104750152818161092b0152818161110601528181611868015281816119960152611d21015251818181610aae01528181610dab0152818161191e0152611e810152f35b81620002e792903d10620002f0575b620002de8183620003dc565b8101906200042b565b503880620001df565b503d620002d2565b8451903d90823e3d90fd5b6200031d90873d8911620002f057620002de8183620003dc565b5038620001b7565b88513d87823e3d90fd5b6200034990873d8911620002f057620002de8183620003dc565b503862000181565b6200036b90863d8811620002f057620002de8183620003dc565b503862000150565b87513d86823e3d90fd5b9096508481813d8311620003c5575b620003988183620003dc565b81010312620003c157600384620003af8362000416565b9201511015620003c15795386200010b565b5080fd5b503d6200038c565b85513d84823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200040057604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620003d757565b90816020910312620003d757518015158103620003d7579056fe6080604081815260049182361015610022575b505050361561002057600080fd5b005b600092833560e01c91826306fdde031461125457508163078dfbe71461113557816316f0115b146110f157816317d70f7c1461100157816322a58c5d1461109b57816330fa738c1461107f5781633d79d1c81461103b5781633e0dc34e1461101c57816348dcb051146110015781634cce992d14610fa15781634e71e0c814610eee57816350188301146106c25781637284e41614610e53578163734daaa114610e345781637bb7bed114610dda5781638c78892914610d965781638da5cb5b14610d6e578163afa91cc614610839578163b25ea8fb146107a5578163ce845d1d146106c2578163db2e21bc14610734578163de406577146106f0578163e30c3978146106c7578163e3575f05146106c2578163eb6d3a111461067e578163f01fbcc71461065a578163f3fef3a3146101fa57508063f6b4dfb4146101b75763fbfa77cf146101715780610012565b346101b357816003193601126101b357517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b50346101b357816003193601126101b357517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b9050346106565781600319360112610656576102146112e8565b6001600160a01b0392909160248035929190610253337f0000000000000000000000000000000000000000000000000000000000000000881614611ff7565b61025b612032565b83610264611f58565b1061060a57857f0000000000000000000000000000000000000000000000000000000000000000168351956370a0823160e01b808852308589015260209788818681875afa908115610600578b916105d3575b50808811610466575b508551908152308582015287818581865afa90811561045c578a9161042a575b5086116103e857889182918287519a8a8c019263a9059cbb60e01b8452169a8b878201528960448201526044815261031781611328565b51925af16103236113f0565b816103ab575b501561036b575050907f058b581e2433b8b02263f5b0e5c2889fcb7b3495112884a3147619038fba46d8929161035d611cf9565b5051908152a2600160025580f35b601c9085606494519362461bcd60e51b85528401528201527f426f72696e6745524332303a205472616e73666572206661696c6564000000006044820152fd5b809150518681159182156103c4575b5050905038610329565b83809293500103126103e45785015180151581036103e4578086386103ba565b8780fd5b845162461bcd60e51b8152808501889052601c818501527f42616c616e63657253747261746567793a206e6f7420656e6f756768000000006044820152606490fd5b90508781813d8311610455575b6104418183611344565b810103126104505751386102e0565b600080fd5b503d610437565b86513d8c823e3d90fd5b86516333cd77e760e11b8152907f00000000000000000000000000000000000000000000000000000000000000008b168a838981845afa928d84156105c857918c918a9395610596575b508a5163313ce56760e01b815292839182905afa90811561058c578d91610550575b5060ff6104e19116918a611420565b90604d811161053e57600a0a9081810291818304149015171561052a578115610516579061050f91046116f7565b50386102c0565b85601288634e487b7160e01b600052526000fd5b85601188634e487b7160e01b600052526000fd5b634e487b7160e01b8d5260118852868dfd5b90508a81813d8311610585575b6105678183611344565b81010312610581575160ff811681036105815760ff6104d2565b8c80fd5b503d61055d565b89513d8f823e3d90fd5b9250935081813d83116105c1575b6105ae8183611344565b81010312610450578a88915193386104b0565b503d6105a4565b8a51903d90823e3d90fd5b90508881813d83116105f9575b6105ea8183611344565b810103126104505751386102b7565b503d6105e0565b87513d8d823e3d90fd5b6022906020608494519362461bcd60e51b85528401528201527f42616c616e63657253747261746567793a20616d6f756e74206e6f742076616c6044820152611a5960f21b6064820152fd5b8280fd5b5050346101b357816003193601126101b357602090610677611cf9565b9051908152f35b5050346101b357816003193601126101b357517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b611382565b5050346101b357816003193601126101b35760015490516001600160a01b039091168152602090f35b5050346101b357816003193601126101b357517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b8284346107a257806003193601126107a25761075a60018060a01b0382541633146113a5565b610762611cf9565b9060328202908282046032148315171561078f5760208461067761078a612710860487611420565b6116f7565b634e487b7160e01b815260118552602490fd5b80fd5b919050346106565780600319360112610656576024356001600160a01b03808216820361045057848080936107df829483541633146113a5565b8635905af16107ec6113f0565b50156107f6578280f35b906020606492519162461bcd60e51b8352820152601a60248201527f42616c616e6365723a207472616e73666572206661696c65642e0000000000006044820152fd5b839150346101b35760209081600319360112610656576001600160a01b0393610885337f0000000000000000000000000000000000000000000000000000000000000000871614611ff7565b61088d612032565b80516370a0823160e01b8082523084830152957f00000000000000000000000000000000000000000000000000000000000000008116908583602481855afa928315610d64578793610d31575b506005548311610921575b867f9447d5abbf0af693ca2937bf8b1ec6a8c9dc4fbac672911c633fb31c78e5e3ca8787875190358152a1610918611cf9565b50600160025580f35b91939695949092827f00000000000000000000000000000000000000000000000000000000000000001691815198888a5230818b0152818a602481875afa998a15610d2757889a610cf8575b50847f000000000000000000000000000000000000000000000000000000000000000016998a946003549a8a8c60248851809a8193631f29a8cd60e31b8352898301525afa968715610cee578b97610cc8575b506000199c6109cf8851611566565b9d8c905b8951821015610a28578f8d918f8e8e6109ed8f88906115a7565b511603610a1057505082610a00916115a7565b52610a0a81611598565b906109d3565b909391610a0a935082610a22916115a7565b52611598565b9499889f979d9e8f8f899f9e506001979c945098610aaa969b610a8783979b610a79610a526115d1565b9e8f998a5280838b01528660608b015284519c8d9384015284808401526060830190611607565b03601f1981018b528a611344565b85810198895251639ebbf05d60e01b815296879586948593309182918601611cca565b03927f0000000000000000000000000000000000000000000000000000000000000000165af1908115610cbe578c91610c9b575b506032810281810460321482151715610c885790612710610b00920490611420565b918c519260028c8501528d840152606083015260608252610b2082611328565b52600354813b15610c8457918991610b5293838a8e519687958694859363172b958560e31b8552309130918601611cca565b03925af18015610c7a57610c67575b5085906024895180948193825230898301525afa908115610c5d578691610c30575b501115610bdf57937fde22222b0ac0d69f2a19cd7b1443a29a5f37346640fff3506bdd6a9a9497f9d3837f9447d5abbf0af693ca2937bf8b1ec6a8c9dc4fbac672911c633fb31c78e5e3ca95968351908152a1849386806108e5565b5060849184519162461bcd60e51b8352820152602660248201527f42616c616e63657253747261746567793a207661756c74206465706f7369742060448201526519985a5b195960d21b6064820152fd5b90508481813d8311610c56575b610c478183611344565b81010312610450575187610b83565b503d610c3d565b87513d88823e3d90fd5b96610c738792986112fe565b9690610b61565b89513d8a823e3d90fd5b8980fd5b634e487b7160e01b8d5260118b5260248dfd5b610cb791503d808e833e610caf8183611344565b81019061163b565b508d610ade565b8d513d8e823e3d90fd5b610ce59197503d808d833e610cdd8183611344565b8101906114b9565b5050958d6109c0565b86513d8d823e3d90fd5b9099508181813d8311610d20575b610d108183611344565b810103126103e45751988a61096d565b503d610d06565b83513d8a823e3d90fd5b9092508581813d8311610d5d575b610d498183611344565b81010312610d59575191886108da565b8680fd5b503d610d3f565b84513d89823e3d90fd5b5050346101b357816003193601126101b357905490516001600160a01b039091168152602090f35b5050346101b357816003193601126101b357517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b905034610656576020366003190112610656578035908054821015610e30576020935260018060a01b03907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0154169051908152f35b8380fd5b5050346101b357816003193601126101b3576020906005549051908152f35b8383346101b357816003193601126101b357805191606083019083821067ffffffffffffffff831117610edb5750610ed793508152602b82527f42616c616e63657220737472617465677920666f722077726170706564206e6160208301526a746976652061737365747360a81b81830152519182916020835260208301906112a8565b0390f35b634e487b7160e01b815260418552602490fd5b919050346106565782600319360112610656576001546001600160a01b03929091838316919033839003610f5e5750508084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a36001600160a01b03199283161783551660015580f35b906020606492519162461bcd60e51b8352820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b905034610656576020366003190112610656577f3b779194d2cc7daf4de546bec10f6f325d421b2e202c11aa24e86e39845860cc903591610fec60018060a01b0385541633146113a5565b6005548151908152836020820152a160055580f35b5050346101b357816003193601126101b35751908152602090f35b5050346101b357816003193601126101b3576020906003549051908152f35b5050346101b357816003193601126101b357517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346101b357816003193601126101b3576020905160018152f35b9050346106565760203660031901126106565780359167ffffffffffffffff8311610e305736602384011215610e30576110e5836024930135916110de83611366565b9051611344565b36920101116107a25780f35b5050346101b357816003193601126101b357517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b91905034610656576060366003190112610656576111516112e8565b916024359182151583036112505760443592831515840361124c5760018060a01b039485916111848389541633146113a5565b1561122b571692831590811591611223575b50156111e85750508083549283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a36bffffffffffffffffffffffff60a01b8092161782556001541660015580f35b906020606492519162461bcd60e51b835282015260156024820152744f776e61626c653a207a65726f206164647265737360581b6044820152fd5b905038611196565b9350505050166bffffffffffffffffffffffff60a01b600154161760015580f35b8580fd5b8480fd5b8385346107a257806003193601126107a2578183019083821067ffffffffffffffff831117610edb5750610ed79350815260088252672130b630b731b2b960c11b6020830152519182916020835260208301905b919082519283825260005b8481106112d4575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016112b3565b600435906001600160a01b038216820361045057565b67ffffffffffffffff811161131257604052565b634e487b7160e01b600052604160045260246000fd5b6080810190811067ffffffffffffffff82111761131257604052565b90601f8019910116810190811067ffffffffffffffff82111761131257604052565b67ffffffffffffffff811161131257601f01601f191660200190565b3461045057600036600319011261045057602061139d611f58565b604051908152f35b156113ac57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b3d1561141b573d9061140182611366565b9161140f6040519384611344565b82523d6000602084013e565b606090565b9190820391821161142d57565b634e487b7160e01b600052601160045260246000fd5b67ffffffffffffffff81116113125760051b60200190565b81601f820112156104505780519161147283611443565b926114806040519485611344565b808452602092838086019260051b820101928311610450578301905b8282106114aa575050505090565b8151815290830190830161149c565b90916060828403126104505781519267ffffffffffffffff938481116104505783019381601f86011215610450578451946114f386611443565b906115016040519283611344565b868252602096878084019160051b83010191858311610450578801905b82821061154757505050948401519081116104505760409161154191850161145b565b92015190565b81516001600160a01b038116810361045057815290880190880161151e565b9061157082611443565b61157d6040519182611344565b828152809261158e601f1991611443565b0190602036910137565b600019811461142d5760010190565b80518210156115bb5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b604051906080820182811067ffffffffffffffff8211176113125760405260006060838181528160208201528160408201520152565b90815180825260208080930193019160005b828110611627575050505090565b835185529381019392810192600101611619565b91909160408184031261045057805192602082015167ffffffffffffffff811161045057611669920161145b565b90565b9060808101825160808352805180925260a083019160208092019060005b8181106116cd575050506116c26116b06060938385948801519087830390880152611607565b604086015185820360408701526112a8565b930151151591015290565b82516001600160a01b03168552938301939183019160010161168a565b9190820180921161142d57565b6040516370a0823160e01b815230600482015291906000906020846024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa938415611baf578294611c96575b50600354604051631f29a8cd60e31b815260048101829052909383826024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa918215611c8b578492611c6d575b50600019956117b78351611566565b9685905b845182101561182d576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116906117fa84886115a7565b51160361181d57508461180d828a6115a7565b5261181781611598565b906117bb565b908087610a22611817938c6115a7565b9394505094909561183c6115d1565b9384526020808501829052606085018690526040516370a0823160e01b815230600482015290816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115611bf4578691611c39575b506118c892916118dc9160405194859260026020850152606060408501526080840190611607565b90606083015203601f198101845283611344565b60408401918252604051906331ecb14b60e21b8252600482015230602482015230604482015260806064820152848180611919608482018861166c565b0381837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115611c2e578591611c13575b5060fa810281810460fa1482151715611bff57906127106119789204906116ea565b6040516370a0823160e01b81523060048201529092906020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115611bf4578691611bc2575b50808411611bba575b506040519285602085015260408401526060830152606082526119f982611328565b526003547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163b1561065657611a679183916040519384928392638bdb391360e01b8452600484015230602484015230604484015260806064840152608483019061166c565b0381837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af18015611baf57611ba0575b506040516370a0823160e01b81523060048201529091906020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa928315611b945792611b60575b5080821115611b095761166991611420565b60405162461bcd60e51b815260206004820152602960248201527f42616c616e63657253747261746567793a207661756c74207769746864726177604482015268185b0819985a5b195960ba1b6064820152608490fd5b9091506020813d602011611b8c575b81611b7c60209383611344565b8101031261045057519038611af7565b3d9150611b6f565b604051903d90823e3d90fd5b611ba9906112fe565b38611aa1565b6040513d84823e3d90fd5b9250386119d7565b90506020813d602011611bec575b81611bdd60209383611344565b8101031261124c5751386119ce565b3d9150611bd0565b6040513d88823e3d90fd5b634e487b7160e01b86526011600452602486fd5b611c2791503d8087833e610caf8183611344565b5038611956565b6040513d87823e3d90fd5b90506020813d602011611c65575b81611c5460209383611344565b8101031261124c57516118c86118a0565b3d9150611c47565b611c829192503d8086833e610cdd8183611344565b505090386117a8565b6040513d86823e3d90fd5b9093506020813d602011611cc2575b81611cb260209383611344565b810103126101b35751923861174f565b3d9150611ca5565b9081526001600160a01b039182166020820152911660408201526080606082018190526116699291019061166c565b604080516370a0823160e01b815230600482015290916020916001600160a01b0383826024817f000000000000000000000000000000000000000000000000000000000000000085165afa918215611f4d57600092611f1e575b506003548551631f29a8cd60e31b81526004810182905290936000826024817f000000000000000000000000000000000000000000000000000000000000000087165afa918215611f1357600092611ef6575b506000959395611db68351611566565b957f0000000000000000000000000000000000000000000000000000000000000000851695825b8551811015611e17578787611df283896115a7565b511614611e0f575b806000610a22611e0a938c6115a7565b611ddd565b925082611dfa565b50909196611e7d9650976000959398611e2e6115d1565b95865282860152856060860152858a51928301528982015286606082015260608152611e5981611328565b888401528388518096819582946331ecb14b60e21b84523090309060048601611cca565b03927f0000000000000000000000000000000000000000000000000000000000000000165af1908115611eeb57611ecc939450600091611ed0575b50611ec382826115a7565b516006556115a7565b5190565b611ee3913d8091833e610caf8183611344565b905038611eb8565b84513d6000823e3d90fd5b611f0a91923d8091833e610cdd8183611344565b50509038611da6565b87513d6000823e3d90fd5b90918482813d8311611f46575b611f358183611344565b810103126107a25750519038611d53565b503d611f2b565b85513d6000823e3d90fd5b6040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa8015611feb57600090611fb8575b61166991506006546116ea565b6020823d8211611fe3575b81611fd060209383611344565b810103126107a257506116699051611fab565b3d9150611fc3565b6040513d6000823e3d90fd5b15611ffe57565b60405162461bcd60e51b815260206004820152600c60248201526b09cdee840b2d2cad8c884def60a31b6044820152606490fd5b60028054146120415760028055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fdfea264697066735822122015ec69aa0f994b56e60274010f5de8e21d0ff56b023a130ea79b698d00ded71f64736f6c63430008120033";

type BalancerStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalancerStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BalancerStrategy__factory extends ContractFactory {
  constructor(...args: BalancerStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BalancerStrategy";
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _vault: PromiseOrValue<string>,
    _poolId: PromiseOrValue<BytesLike>,
    _bal: PromiseOrValue<string>,
    _helpers: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BalancerStrategy> {
    return super.deploy(
      _yieldBox,
      _token,
      _vault,
      _poolId,
      _bal,
      _helpers,
      overrides || {}
    ) as Promise<BalancerStrategy>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _vault: PromiseOrValue<string>,
    _poolId: PromiseOrValue<BytesLike>,
    _bal: PromiseOrValue<string>,
    _helpers: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yieldBox,
      _token,
      _vault,
      _poolId,
      _bal,
      _helpers,
      overrides || {}
    );
  }
  override attach(address: string): BalancerStrategy {
    return super.attach(address) as BalancerStrategy;
  }
  override connect(signer: Signer): BalancerStrategy__factory {
    return super.connect(signer) as BalancerStrategy__factory;
  }
  static readonly contractName: "BalancerStrategy";

  public readonly contractName: "BalancerStrategy";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalancerStrategyInterface {
    return new utils.Interface(_abi) as BalancerStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BalancerStrategy {
    return new Contract(address, _abi, signerOrProvider) as BalancerStrategy;
  }
}
