/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BalancerStrategy,
  BalancerStrategyInterface,
} from "../../balancer/BalancerStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_bal",
        type: "address",
      },
      {
        internalType: "address",
        name: "_helpers",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_old",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_new",
        type: "uint256",
      },
    ],
    name: "DepositThreshold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
    ],
    name: "RewardTokens",
    type: "event",
  },
  {
    inputs: [],
    name: "bal",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cheapWithdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "compound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "compoundAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposited",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "description_",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "helpers",
    outputs: [
      {
        internalType: "contract IBalancerHelpers",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "contract IBalancerPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setDepositThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenType",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateCache",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract IBalancerVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wrappedNative",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x610160604081815234620003315760c082620023b2803803809162000025828562000336565b833981010312620003315781516001600160a01b03918282168203620003315760206200005481860162000370565b936200006283870162000370565b95816060820151976200008660a06200007e6080860162000370565b940162000370565b966080528760a052816000933360018060a01b03198654161785558188519a33877f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a360016002551660c0521660e05216610100978189528060035563f6c0092760e01b885260048801528487602481845afa96871562000327578297620002d7575b50826101209716875282610140961686528260c051169285519063095ea7b360e01b918281528360048201528681604481886000199a8b60248401525af18015620002cd57604492889594928792620002ab575b508b5116895197889586948552600485015260248401525af1908115620002a057506200026b575b505051916120129384620003a085396080518481816102210152818161071f01526107e4015260a051846101c0015260c051848181610261015281816106ad015281816108280152818161166d0152818161172401528181611a1601528181611d0f0152611ec9015260e05184610fd6015251838181610179015281816108f7015281816116c601528181611955015281816119c20152611cca01525182818161048f015281816108b10152818161108c015281816117be015281816118ec0152611c77015251818181610a3401528181610d31015281816118740152611dd70152f35b816200028f92903d1062000298575b62000286818362000336565b81019062000385565b50388062000187565b503d6200027a565b8451903d90823e3d90fd5b620002c590873d8911620002985762000286818362000336565b50386200015f565b88513d87823e3d90fd5b9096508481813d83116200031f575b620002f2818362000336565b810103126200031b57600384620003098362000370565b92015110156200031b5795386200010b565b5080fd5b503d620002e6565b85513d84823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200035a57604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200033157565b90816020910312620003315751801515810362000331579056fe6080604081815260049182361015610022575b505050361561002057600080fd5b005b600092833560e01c91826306fdde03146111da57508163078dfbe7146110bb57816316f0115b1461107757816317d70f7c14610f8757816322a58c5d1461102157816330fa738c146110055781633d79d1c814610fc15781633e0dc34e14610fa257816348dcb05114610f875781634cce992d14610f275781634e71e0c814610e7457816350188301146106dc5781637284e41614610dd9578163734daaa114610dba5781637bb7bed114610d605781638c78892914610d1c5781638da5cb5b14610cf4578163afa91cc6146107bf578163ce845d1d146106dc578163db2e21bc1461074e578163de4065771461070a578163e30c3978146106e1578163e3575f05146106dc578163eb6d3a1114610698578163f01fbcc714610674578163f3fef3a3146101ef57508063f6b4dfb4146101ac5763fbfa77cf146101665780610012565b346101a857816003193601126101a857517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b50346101a857816003193601126101a857517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b90503461067057816003193601126106705761020961126e565b6001600160a01b0392909160248035929190610248337f0000000000000000000000000000000000000000000000000000000000000000881614611f4d565b610250611f88565b83610259611eae565b1061062457857f0000000000000000000000000000000000000000000000000000000000000000168351956370a0823160e01b808852308589015260209788818681875afa90811561061a578b916105ed575b50808811610480575b508551908152308582015287818581865afa908115610476578a91610444575b50861161040257889182918287519a8a8c019263a9059cbb60e01b8452169a8b878201528960448201526044815261030c816112ae565b51925af13d156103fb573d610320816112ec565b9061032d865192836112ca565b81523d898883013e5b816103be575b501561037e575050907f058b581e2433b8b02263f5b0e5c2889fcb7b3495112884a3147619038fba46d89291610370611c4f565b5051908152a2600160025580f35b601c9085606494519362461bcd60e51b85528401528201527f426f72696e6745524332303a205472616e73666572206661696c6564000000006044820152fd5b809150518681159182156103d7575b505090503861033c565b83809293500103126103f75785015180151581036103f7578086386103cd565b8780fd5b6060610336565b845162461bcd60e51b8152808501889052601c818501527f42616c616e63657253747261746567793a206e6f7420656e6f756768000000006044820152606490fd5b90508781813d831161046f575b61045b81836112ca565b8101031261046a5751386102d5565b600080fd5b503d610451565b86513d8c823e3d90fd5b86516333cd77e760e11b8152907f00000000000000000000000000000000000000000000000000000000000000008b168a838981845afa928d84156105e257918c918a93956105b0575b508a5163313ce56760e01b815292839182905afa9081156105a6578d9161056a575b5060ff6104fb9116918a611376565b90604d811161055857600a0a908181029181830414901517156105445781156105305790610529910461164d565b50386102b5565b85601288634e487b7160e01b600052526000fd5b85601188634e487b7160e01b600052526000fd5b634e487b7160e01b8d5260118852868dfd5b90508a81813d831161059f575b61058181836112ca565b8101031261059b575160ff8116810361059b5760ff6104ec565b8c80fd5b503d610577565b89513d8f823e3d90fd5b9250935081813d83116105db575b6105c881836112ca565b8101031261046a578a88915193386104ca565b503d6105be565b8a51903d90823e3d90fd5b90508881813d8311610613575b61060481836112ca565b8101031261046a5751386102ac565b503d6105fa565b87513d8d823e3d90fd5b6022906020608494519362461bcd60e51b85528401528201527f42616c616e63657253747261746567793a20616d6f756e74206e6f742076616c6044820152611a5960f21b6064820152fd5b8280fd5b5050346101a857816003193601126101a857602090610691611c4f565b9051908152f35b5050346101a857816003193601126101a857517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b611308565b5050346101a857816003193601126101a85760015490516001600160a01b039091168152602090f35b5050346101a857816003193601126101a857517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b8284346107bc57806003193601126107bc5761077460018060a01b03825416331461132b565b61077c611c4f565b906032820290828204603214831517156107a9576020846106916107a4612710860487611376565b61164d565b634e487b7160e01b815260118552602490fd5b80fd5b839150346101a85760209081600319360112610670576001600160a01b039361080b337f0000000000000000000000000000000000000000000000000000000000000000871614611f4d565b610813611f88565b80516370a0823160e01b8082523084830152957f00000000000000000000000000000000000000000000000000000000000000008116908583602481855afa928315610cea578793610cb7575b5060055483116108a7575b867f9447d5abbf0af693ca2937bf8b1ec6a8c9dc4fbac672911c633fb31c78e5e3ca8787875190358152a161089e611c4f565b50600160025580f35b91939695949092827f00000000000000000000000000000000000000000000000000000000000000001691815198888a5230818b0152818a602481875afa998a15610cad57889a610c7e575b50847f000000000000000000000000000000000000000000000000000000000000000016998a946003549a8a8c60248851809a8193631f29a8cd60e31b8352898301525afa968715610c74578b97610c4e575b506000199c61095588516114bc565b9d8c905b89518210156109ae578f8d918f8e8e6109738f88906114fd565b51160361099657505082610986916114fd565b52610990816114ee565b90610959565b9093916109909350826109a8916114fd565b526114ee565b9499889f979d9e8f8f899f9e506001979c945098610a30969b610a0d83979b6109ff6109d8611527565b9e8f998a5280838b01528660608b015284519c8d938401528480840152606083019061155d565b03601f1981018b528a6112ca565b85810198895251639ebbf05d60e01b815296879586948593309182918601611c20565b03927f0000000000000000000000000000000000000000000000000000000000000000165af1908115610c44578c91610c21575b506032810281810460321482151715610c0e5790612710610a86920490611376565b918c519260028c8501528d840152606083015260608252610aa6826112ae565b52600354813b15610c0a57918991610ad893838a8e519687958694859363172b958560e31b8552309130918601611c20565b03925af18015610c0057610bed575b5085906024895180948193825230898301525afa908115610be3578691610bb6575b501115610b6557937fde22222b0ac0d69f2a19cd7b1443a29a5f37346640fff3506bdd6a9a9497f9d3837f9447d5abbf0af693ca2937bf8b1ec6a8c9dc4fbac672911c633fb31c78e5e3ca95968351908152a18493868061086b565b5060849184519162461bcd60e51b8352820152602660248201527f42616c616e63657253747261746567793a207661756c74206465706f7369742060448201526519985a5b195960d21b6064820152fd5b90508481813d8311610bdc575b610bcd81836112ca565b8101031261046a575187610b09565b503d610bc3565b87513d88823e3d90fd5b96610bf9879298611284565b9690610ae7565b89513d8a823e3d90fd5b8980fd5b634e487b7160e01b8d5260118b5260248dfd5b610c3d91503d808e833e610c3581836112ca565b810190611591565b508d610a64565b8d513d8e823e3d90fd5b610c6b9197503d808d833e610c6381836112ca565b81019061140f565b5050958d610946565b86513d8d823e3d90fd5b9099508181813d8311610ca6575b610c9681836112ca565b810103126103f75751988a6108f3565b503d610c8c565b83513d8a823e3d90fd5b9092508581813d8311610ce3575b610ccf81836112ca565b81010312610cdf57519188610860565b8680fd5b503d610cc5565b84513d89823e3d90fd5b5050346101a857816003193601126101a857905490516001600160a01b039091168152602090f35b5050346101a857816003193601126101a857517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b905034610670576020366003190112610670578035908054821015610db6576020935260018060a01b03907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0154169051908152f35b8380fd5b5050346101a857816003193601126101a8576020906005549051908152f35b8383346101a857816003193601126101a857805191606083019083821067ffffffffffffffff831117610e615750610e5d93508152602b82527f42616c616e63657220737472617465677920666f722077726170706564206e6160208301526a746976652061737365747360a81b818301525191829160208352602083019061122e565b0390f35b634e487b7160e01b815260418552602490fd5b919050346106705782600319360112610670576001546001600160a01b03929091838316919033839003610ee45750508084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a36001600160a01b03199283161783551660015580f35b906020606492519162461bcd60e51b8352820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b905034610670576020366003190112610670577f3b779194d2cc7daf4de546bec10f6f325d421b2e202c11aa24e86e39845860cc903591610f7260018060a01b03855416331461132b565b6005548151908152836020820152a160055580f35b5050346101a857816003193601126101a85751908152602090f35b5050346101a857816003193601126101a8576020906003549051908152f35b5050346101a857816003193601126101a857517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346101a857816003193601126101a8576020905160018152f35b9050346106705760203660031901126106705780359167ffffffffffffffff8311610db65736602384011215610db65761106b83602493013591611064836112ec565b90516112ca565b36920101116107bc5780f35b5050346101a857816003193601126101a857517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b91905034610670576060366003190112610670576110d761126e565b916024359182151583036111d6576044359283151584036111d25760018060a01b0394859161110a83895416331461132b565b156111b15716928315908115916111a9575b501561116e5750508083549283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a36bffffffffffffffffffffffff60a01b8092161782556001541660015580f35b906020606492519162461bcd60e51b835282015260156024820152744f776e61626c653a207a65726f206164647265737360581b6044820152fd5b90503861111c565b9350505050166bffffffffffffffffffffffff60a01b600154161760015580f35b8580fd5b8480fd5b8385346107bc57806003193601126107bc578183019083821067ffffffffffffffff831117610e615750610e5d9350815260088252672130b630b731b2b960c11b6020830152519182916020835260208301905b919082519283825260005b84811061125a575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611239565b600435906001600160a01b038216820361046a57565b67ffffffffffffffff811161129857604052565b634e487b7160e01b600052604160045260246000fd5b6080810190811067ffffffffffffffff82111761129857604052565b90601f8019910116810190811067ffffffffffffffff82111761129857604052565b67ffffffffffffffff811161129857601f01601f191660200190565b3461046a57600036600319011261046a576020611323611eae565b604051908152f35b1561133257565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b9190820391821161138357565b634e487b7160e01b600052601160045260246000fd5b67ffffffffffffffff81116112985760051b60200190565b81601f8201121561046a578051916113c883611399565b926113d660405194856112ca565b808452602092838086019260051b82010192831161046a578301905b828210611400575050505090565b815181529083019083016113f2565b909160608284031261046a5781519267ffffffffffffffff9384811161046a5783019381601f8601121561046a5784519461144986611399565b9061145760405192836112ca565b868252602096878084019160051b8301019185831161046a578801905b82821061149d575050509484015190811161046a576040916114979185016113b1565b92015190565b81516001600160a01b038116810361046a578152908801908801611474565b906114c682611399565b6114d360405191826112ca565b82815280926114e4601f1991611399565b0190602036910137565b60001981146113835760010190565b80518210156115115760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b604051906080820182811067ffffffffffffffff8211176112985760405260006060838181528160208201528160408201520152565b90815180825260208080930193019160005b82811061157d575050505090565b83518552938101939281019260010161156f565b91909160408184031261046a57805192602082015167ffffffffffffffff811161046a576115bf92016113b1565b90565b9060808101825160808352805180925260a083019160208092019060005b81811061162357505050611618611606606093838594880151908783039088015261155d565b6040860151858203604087015261122e565b930151151591015290565b82516001600160a01b0316855293830193918301916001016115e0565b9190820180921161138357565b6040516370a0823160e01b815230600482015291906000906020846024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa938415611b05578294611bec575b50600354604051631f29a8cd60e31b815260048101829052909383826024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa918215611be1578492611bc3575b506000199561170d83516114bc565b9685905b8451821015611783576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169061175084886114fd565b511603611773575084611763828a6114fd565b5261176d816114ee565b90611711565b9080876109a861176d938c6114fd565b93945050949095611792611527565b9384526020808501829052606085018690526040516370a0823160e01b815230600482015290816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115611b4a578691611b8f575b5061181e9291611832916040519485926002602085015260606040850152608084019061155d565b90606083015203601f1981018452836112ca565b60408401918252604051906331ecb14b60e21b825260048201523060248201523060448201526080606482015284818061186f60848201886115c2565b0381837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115611b84578591611b69575b5060fa810281810460fa1482151715611b5557906127106118ce920490611640565b6040516370a0823160e01b81523060048201529092906020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115611b4a578691611b18575b50808411611b10575b5060405192856020850152604084015260608301526060825261194f826112ae565b526003547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163b15610670576119bd9183916040519384928392638bdb391360e01b845260048401523060248401523060448401526080606484015260848301906115c2565b0381837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af18015611b0557611af6575b506040516370a0823160e01b81523060048201529091906020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa928315611aea5792611ab6575b5080821115611a5f576115bf91611376565b60405162461bcd60e51b815260206004820152602960248201527f42616c616e63657253747261746567793a207661756c74207769746864726177604482015268185b0819985a5b195960ba1b6064820152608490fd5b9091506020813d602011611ae2575b81611ad2602093836112ca565b8101031261046a57519038611a4d565b3d9150611ac5565b604051903d90823e3d90fd5b611aff90611284565b386119f7565b6040513d84823e3d90fd5b92503861192d565b90506020813d602011611b42575b81611b33602093836112ca565b810103126111d2575138611924565b3d9150611b26565b6040513d88823e3d90fd5b634e487b7160e01b86526011600452602486fd5b611b7d91503d8087833e610c3581836112ca565b50386118ac565b6040513d87823e3d90fd5b90506020813d602011611bbb575b81611baa602093836112ca565b810103126111d2575161181e6117f6565b3d9150611b9d565b611bd89192503d8086833e610c6381836112ca565b505090386116fe565b6040513d86823e3d90fd5b9093506020813d602011611c18575b81611c08602093836112ca565b810103126101a8575192386116a5565b3d9150611bfb565b9081526001600160a01b039182166020820152911660408201526080606082018190526115bf929101906115c2565b604080516370a0823160e01b815230600482015290916020916001600160a01b0383826024817f000000000000000000000000000000000000000000000000000000000000000085165afa918215611ea357600092611e74575b506003548551631f29a8cd60e31b81526004810182905290936000826024817f000000000000000000000000000000000000000000000000000000000000000087165afa918215611e6957600092611e4c575b506000959395611d0c83516114bc565b957f0000000000000000000000000000000000000000000000000000000000000000851695825b8551811015611d6d578787611d4883896114fd565b511614611d65575b8060006109a8611d60938c6114fd565b611d33565b925082611d50565b50909196611dd39650976000959398611d84611527565b95865282860152856060860152858a51928301528982015286606082015260608152611daf816112ae565b888401528388518096819582946331ecb14b60e21b84523090309060048601611c20565b03927f0000000000000000000000000000000000000000000000000000000000000000165af1908115611e4157611e22939450600091611e26575b50611e1982826114fd565b516006556114fd565b5190565b611e39913d8091833e610c3581836112ca565b905038611e0e565b84513d6000823e3d90fd5b611e6091923d8091833e610c6381836112ca565b50509038611cfc565b87513d6000823e3d90fd5b90918482813d8311611e9c575b611e8b81836112ca565b810103126107bc5750519038611ca9565b503d611e81565b85513d6000823e3d90fd5b6040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa8015611f4157600090611f0e575b6115bf9150600654611640565b6020823d8211611f39575b81611f26602093836112ca565b810103126107bc57506115bf9051611f01565b3d9150611f19565b6040513d6000823e3d90fd5b15611f5457565b60405162461bcd60e51b815260206004820152600c60248201526b09cdee840b2d2cad8c884def60a31b6044820152606490fd5b6002805414611f975760028055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fdfea264697066735822122083f93b7a86042669a33a9efe6aa2d9e1ee209b3bdbb9a142531fe8ef23a0c73864736f6c63430008120033";

type BalancerStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalancerStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BalancerStrategy__factory extends ContractFactory {
  constructor(...args: BalancerStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BalancerStrategy";
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _vault: PromiseOrValue<string>,
    _poolId: PromiseOrValue<BytesLike>,
    _bal: PromiseOrValue<string>,
    _helpers: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BalancerStrategy> {
    return super.deploy(
      _yieldBox,
      _token,
      _vault,
      _poolId,
      _bal,
      _helpers,
      overrides || {}
    ) as Promise<BalancerStrategy>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _vault: PromiseOrValue<string>,
    _poolId: PromiseOrValue<BytesLike>,
    _bal: PromiseOrValue<string>,
    _helpers: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yieldBox,
      _token,
      _vault,
      _poolId,
      _bal,
      _helpers,
      overrides || {}
    );
  }
  override attach(address: string): BalancerStrategy {
    return super.attach(address) as BalancerStrategy;
  }
  override connect(signer: Signer): BalancerStrategy__factory {
    return super.connect(signer) as BalancerStrategy__factory;
  }
  static readonly contractName: "BalancerStrategy";

  public readonly contractName: "BalancerStrategy";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalancerStrategyInterface {
    return new utils.Interface(_abi) as BalancerStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BalancerStrategy {
    return new Contract(address, _abi, signerOrProvider) as BalancerStrategy;
  }
}
