{"id":"ace0afedcdf9c966d487223636492171","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/enums/YieldBoxTokenType.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\n/// @title TokenType\n/// @author BoringCrypto (@Boring_Crypto)\n/// @notice The YieldBox can hold different types of tokens:\n/// Native: These are ERC1155 tokens native to YieldBox. Protocols using YieldBox should use these is possible when simple token creation is needed.\n/// ERC20: ERC20 tokens (including rebasing tokens) can be added to the YieldBox.\n/// ERC1155: ERC1155 tokens are also supported. This can also be used to add YieldBox Native tokens to strategies since they are ERC1155 tokens.\nenum TokenType {\n    Native,\n    ERC20,\n    ERC721,\n    ERC1155,\n    None\n}\n"},"contracts/ERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\r\n\r\ncontract ERC721Receiver is IERC721Receiver {\r\n    function onERC721Received(\r\n        address, //operator\r\n        address, //from\r\n        uint256, //tokenId\r\n        bytes calldata //data\r\n    ) external pure returns (bytes4) {\r\n        return 0x150b7a02; //bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))\r\n    }\r\n}\r\n"},"contracts/interfaces/IStrategy.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.9;\npragma experimental ABIEncoderV2;\n\nimport \"../enums/YieldBoxTokenType.sol\";\nimport \"./IYieldBox.sol\";\n\ninterface IStrategy {\n    /// Each strategy only works with a single asset. This should help make implementations simpler and more readable.\n    /// To safe gas a proxy pattern (YieldBox factory) could be used to deploy the same strategy for multiple tokens.\n\n    /// It is recommended that strategies keep a small amount of funds uninvested (like 5%) to handle small withdrawals\n    /// and deposits without triggering costly investing/divesting logic.\n\n    /// #########################\n    /// ### Basic Information ###\n    /// #########################\n\n    /// Returns the address of the yieldBox that this strategy is for\n    function yieldBox() external view returns (IYieldBox yieldBox_);\n\n    /// Returns a name for this strategy\n    function name() external view returns (string memory name_);\n\n    /// Returns a description for this strategy\n    function description() external view returns (string memory description_);\n\n    /// #######################\n    /// ### Supported Token ###\n    /// #######################\n\n    /// Returns the standard that this strategy works with\n    function tokenType() external view returns (TokenType tokenType_);\n\n    /// Returns the contract address that this strategy works with\n    function contractAddress() external view returns (address contractAddress_);\n\n    /// Returns the tokenId that this strategy works with (for EIP1155)\n    /// This is always 0 for EIP20 tokens\n    function tokenId() external view returns (uint256 tokenId_);\n\n    /// ###########################\n    /// ### Balance Information ###\n    /// ###########################\n\n    /// Returns the total value the strategy holds (principle + gain) expressed in asset token amount.\n    /// This should be cheap in gas to retrieve. Can return a bit less than the actual, but MUST NOT return more.\n    /// The gas cost of this function will be paid on any deposit or withdrawal onto and out of the YieldBox\n    /// that uses this strategy. Also, anytime a protocol converts between shares and amount, this gets called.\n    function currentBalance() external view returns (uint256 amount);\n\n    /// Returns the maximum amount that can be withdrawn\n    function withdrawable() external view returns (uint256 amount);\n\n    /// Returns the maximum amount that can be withdrawn for a low gas fee\n    /// When more than this amount is withdrawn it will trigger divesting from the actual strategy\n    /// which will incur higher gas costs\n    function cheapWithdrawable() external view returns (uint256 amount);\n\n    /// ##########################\n    /// ### YieldBox Functions ###\n    /// ##########################\n\n    /// Is called by YieldBox to signal funds have been added, the strategy may choose to act on this\n    /// When a large enough deposit is made, this should trigger the strategy to invest into the actual\n    /// strategy. This function should normally NOT be used to invest on each call as that would be costly\n    /// for small deposits.\n    /// If the strategy handles native tokens (ETH) it will receive it directly (not wrapped). It will be\n    /// up to the strategy to wrap it if needed.\n    /// Only accept this call from the YieldBox\n    function deposited(uint256 amount) external;\n\n    /// Is called by the YieldBox to ask the strategy to withdraw to the user\n    /// When a strategy keeps a little reserve for cheap withdrawals and the requested withdrawal goes over this amount,\n    /// the strategy should divest enough from the strategy to complete the withdrawal and rebalance the reserve.\n    /// If the strategy handles native tokens (ETH) it should send this, not a wrapped version.\n    /// With some strategies it might be hard to withdraw exactly the correct amount.\n    /// Only accept this call from the YieldBox\n    function withdraw(address to, uint256 amount) external;\n}\n\nIStrategy constant NO_STRATEGY = IStrategy(address(0));\n"},"contracts/interfaces/IYieldBox.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.9;\npragma experimental ABIEncoderV2;\n\nimport \"../enums/YieldBoxTokenType.sol\";\n\ninterface IYieldBox {\n    function wrappedNative() external view returns (address wrappedNative);\n\n    function assets(uint256 assetId)\n        external\n        view\n        returns (\n            TokenType tokenType,\n            address contractAddress,\n            address strategy,\n            uint256 tokenId\n        );\n\n    function nativeTokens(uint256 assetId)\n        external\n        view\n        returns (\n            string memory name,\n            string memory symbol,\n            uint8 decimals\n        );\n\n    function owner(uint256 assetId) external view returns (address owner);\n\n    function totalSupply(uint256 assetId) external view returns (uint256 totalSupply);\n\n    function depositAsset(\n        uint256 assetId,\n        address from,\n        address to,\n        uint256 amount,\n        uint256 share\n    ) external returns (uint256 amountOut, uint256 shareOut);\n\n    function withdraw(\n        uint256 assetId,\n        address from,\n        address to,\n        uint256 amount,\n        uint256 share\n    ) external returns (uint256 amountOut, uint256 shareOut);\n\n    function transfer(\n        address from,\n        address to,\n        uint256 assetId,\n        uint256 share\n    ) external;\n\n    function batchTransfer(\n        address from,\n        address to,\n        uint256[] calldata assetIds_,\n        uint256[] calldata shares_\n    ) external;\n\n    function transferMultiple(\n        address from,\n        address[] calldata tos,\n        uint256 assetId,\n        uint256[] calldata shares\n    ) external;\n\n    function toShare(\n        uint256 assetId,\n        uint256 amount,\n        bool roundUp\n    ) external view returns (uint256 share);\n\n    function toAmount(\n        uint256 assetId,\n        uint256 share,\n        bool roundUp\n    ) external view returns (uint256 amount);\n}\n"},"contracts/mocks/ERC721StrategyMock.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.9;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"../enums/YieldBoxTokenType.sol\";\r\nimport \"../interfaces/IStrategy.sol\";\r\nimport \"../interfaces/IYieldBox.sol\";\r\nimport \"../ERC721Receiver.sol\";\r\n\r\n\r\n// solhint-disable const-name-snakecase\r\n// solhint-disable no-empty-blocks\r\n\r\ncontract ERC721StrategyMock is IStrategy, ERC721Receiver {\r\n    string public constant override name = \"ERC721StrategyMock\";\r\n    string public constant override description = \"Mock Strategy for testing\";\r\n\r\n    TokenType public constant override tokenType = TokenType.ERC721;\r\n    address public immutable override contractAddress;\r\n    uint256 public immutable override tokenId;\r\n\r\n    IYieldBox public immutable override yieldBox;\r\n\r\n    constructor(IYieldBox yieldBox_, address token, uint256 tokenId_) {\r\n        yieldBox = yieldBox_;\r\n        contractAddress = token;\r\n        tokenId = tokenId_;\r\n    }\r\n\r\n    /// Returns the total value the strategy holds (principle + gain) expressed in asset token amount.\r\n    /// This should be cheap in gas to retrieve. Can return a bit less than the actual, but shouldn't return more.\r\n    /// The gas cost of this function will be paid on any deposit or withdrawal onto and out of the YieldBox\r\n    /// that uses this strategy. Also, anytime a protocol converts between shares and amount, this gets called.\r\n    function currentBalance() public view override returns (uint256 amount) {\r\n        return IERC721(contractAddress).balanceOf(address(this));\r\n    }\r\n\r\n    /// Returns the maximum amount that can be withdrawn\r\n    function withdrawable() external view override returns (uint256 amount) {\r\n        return IERC721(contractAddress).balanceOf(address(this));\r\n    }\r\n\r\n    /// Returns the maximum amount that can be withdrawn for a low gas fee\r\n    /// When more than this amount is withdrawn it will trigger divesting from the actual strategy\r\n    /// which will incur higher gas costs\r\n    function cheapWithdrawable() external view override returns (uint256 amount) {\r\n        return IERC721(contractAddress).balanceOf(address(this));\r\n    }\r\n\r\n    /// Is called by YieldBox to signal funds have been added, the strategy may choose to act on this\r\n    /// When a large enough deposit is made, this should trigger the strategy to invest into the actual\r\n    /// strategy. This function should normally NOT be used to invest on each call as that would be costly\r\n    /// for small deposits.\r\n    /// Only accept this call from the YieldBox\r\n    function deposited(uint256 amount) external override {}\r\n\r\n    /// Is called by the YieldBox to ask the strategy to withdraw to the user\r\n    /// When a strategy keeps a little reserve for cheap withdrawals and the requested withdrawal goes over this amount,\r\n    /// the strategy should divest enough from the strategy to complete the withdrawal and rebalance the reserve.\r\n    /// Only accept this call from the YieldBox\r\n    function withdraw(address to, uint256) external override {\r\n        IERC721(contractAddress).safeTransferFrom(address(this), to, tokenId);\r\n\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":50000},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[145],"IERC721":[115]},"id":116,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":116,"sourceUnit":146,"src":"133:47:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":145,"src":"271:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"271:7:0"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"182:67:0","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":115,"linearizedBaseContracts":[115,145],"name":"IERC721","nameLocation":"260:7:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"285:88:0","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":14,"name":"Transfer","nameLocation":"384:8:0","nodeType":"EventDefinition","parameters":{"id":13,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:0","nodeType":"VariableDeclaration","scope":14,"src":"393:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:0","nodeType":"VariableDeclaration","scope":14,"src":"415:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:0","nodeType":"VariableDeclaration","scope":14,"src":"435:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:0"},"src":"378:82:0"},{"anonymous":false,"documentation":{"id":15,"nodeType":"StructuredDocumentation","src":"466:94:0","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":23,"name":"Approval","nameLocation":"571:8:0","nodeType":"EventDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:0","nodeType":"VariableDeclaration","scope":23,"src":"580:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:0","nodeType":"VariableDeclaration","scope":23,"src":"603:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":21,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:0","nodeType":"VariableDeclaration","scope":23,"src":"629:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:0"},"src":"565:89:0"},{"anonymous":false,"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"660:117:0","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":32,"name":"ApprovalForAll","nameLocation":"788:14:0","nodeType":"EventDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:0","nodeType":"VariableDeclaration","scope":32,"src":"803:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":28,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:0","nodeType":"VariableDeclaration","scope":32,"src":"826:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":30,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:0","nodeType":"VariableDeclaration","scope":32,"src":"852:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":29,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:0"},"src":"782:85:0"},{"documentation":{"id":33,"nodeType":"StructuredDocumentation","src":"873:76:0","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":40,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:0","nodeType":"FunctionDefinition","parameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"owner","nameLocation":"981:5:0","nodeType":"VariableDeclaration","scope":40,"src":"973:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:0"},"returnParameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"balance","nameLocation":"1019:7:0","nodeType":"VariableDeclaration","scope":40,"src":"1011:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:0"},"scope":115,"src":"954:74:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1034:131:0","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":48,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:0","nodeType":"FunctionDefinition","parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:0","nodeType":"VariableDeclaration","scope":48,"src":"1187:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:0"},"returnParameters":{"id":47,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46,"mutability":"mutable","name":"owner","nameLocation":"1235:5:0","nodeType":"VariableDeclaration","scope":48,"src":"1227:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:0"},"scope":115,"src":"1170:72:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"1248:556:0","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":60,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:0","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"mutability":"mutable","name":"from","nameLocation":"1852:4:0","nodeType":"VariableDeclaration","scope":60,"src":"1844:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"to","nameLocation":"1874:2:0","nodeType":"VariableDeclaration","scope":60,"src":"1866:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":52,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":55,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:0","nodeType":"VariableDeclaration","scope":60,"src":"1886:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":54,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"data","nameLocation":"1926:4:0","nodeType":"VariableDeclaration","scope":60,"src":"1911:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":56,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1945:0:0"},"scope":115,"src":"1809:137:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"1952:687:0","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":70,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"from","nameLocation":"2687:4:0","nodeType":"VariableDeclaration","scope":70,"src":"2679:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"to","nameLocation":"2709:2:0","nodeType":"VariableDeclaration","scope":70,"src":"2701:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:0","nodeType":"VariableDeclaration","scope":70,"src":"2721:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":66,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:0"},"returnParameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"2751:0:0"},"scope":115,"src":"2644:108:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":71,"nodeType":"StructuredDocumentation","src":"2758:732:0","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":80,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3504:12:0","nodeType":"FunctionDefinition","parameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"from","nameLocation":"3534:4:0","nodeType":"VariableDeclaration","scope":80,"src":"3526:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":72,"name":"address","nodeType":"ElementaryTypeName","src":"3526:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":75,"mutability":"mutable","name":"to","nameLocation":"3556:2:0","nodeType":"VariableDeclaration","scope":80,"src":"3548:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":74,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"tokenId","nameLocation":"3576:7:0","nodeType":"VariableDeclaration","scope":80,"src":"3568:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76,"name":"uint256","nodeType":"ElementaryTypeName","src":"3568:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:73:0"},"returnParameters":{"id":79,"nodeType":"ParameterList","parameters":[],"src":"3598:0:0"},"scope":115,"src":"3495:104:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"3605:452:0","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":88,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4071:7:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"to","nameLocation":"4087:2:0","nodeType":"VariableDeclaration","scope":88,"src":"4079:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"4079:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":85,"mutability":"mutable","name":"tokenId","nameLocation":"4099:7:0","nodeType":"VariableDeclaration","scope":88,"src":"4091:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4078:29:0"},"returnParameters":{"id":87,"nodeType":"ParameterList","parameters":[],"src":"4116:0:0"},"scope":115,"src":"4062:55:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":89,"nodeType":"StructuredDocumentation","src":"4123:309:0","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":96,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4446:17:0","nodeType":"FunctionDefinition","parameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"operator","nameLocation":"4472:8:0","nodeType":"VariableDeclaration","scope":96,"src":"4464:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":90,"name":"address","nodeType":"ElementaryTypeName","src":"4464:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"_approved","nameLocation":"4487:9:0","nodeType":"VariableDeclaration","scope":96,"src":"4482:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":92,"name":"bool","nodeType":"ElementaryTypeName","src":"4482:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4463:34:0"},"returnParameters":{"id":95,"nodeType":"ParameterList","parameters":[],"src":"4506:0:0"},"scope":115,"src":"4437:70:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":97,"nodeType":"StructuredDocumentation","src":"4513:139:0","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":104,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4666:11:0","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"tokenId","nameLocation":"4686:7:0","nodeType":"VariableDeclaration","scope":104,"src":"4678:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"4678:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4677:17:0"},"returnParameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"mutability":"mutable","name":"operator","nameLocation":"4726:8:0","nodeType":"VariableDeclaration","scope":104,"src":"4718:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"4718:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4717:18:0"},"scope":115,"src":"4657:79:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":105,"nodeType":"StructuredDocumentation","src":"4742:138:0","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":114,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4894:16:0","nodeType":"FunctionDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"owner","nameLocation":"4919:5:0","nodeType":"VariableDeclaration","scope":114,"src":"4911:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":106,"name":"address","nodeType":"ElementaryTypeName","src":"4911:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":109,"mutability":"mutable","name":"operator","nameLocation":"4934:8:0","nodeType":"VariableDeclaration","scope":114,"src":"4926:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"4926:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4910:33:0"},"returnParameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":114,"src":"4967:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":111,"name":"bool","nodeType":"ElementaryTypeName","src":"4967:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4966:6:0"},"scope":115,"src":"4885:88:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":116,"src":"250:4725:0","usedErrors":[]}],"src":"108:4868:0"},"id":0},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[133]},"id":134,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":117,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":118,"nodeType":"StructuredDocumentation","src":"141:152:1","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":133,"linearizedBaseContracts":[133],"name":"IERC721Receiver","nameLocation":"304:15:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"326:493:1","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":132,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:1","nodeType":"FunctionDefinition","parameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"operator","nameLocation":"867:8:1","nodeType":"VariableDeclaration","scope":132,"src":"859:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":123,"mutability":"mutable","name":"from","nameLocation":"893:4:1","nodeType":"VariableDeclaration","scope":132,"src":"885:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":122,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":125,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:1","nodeType":"VariableDeclaration","scope":132,"src":"907:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":124,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":127,"mutability":"mutable","name":"data","nameLocation":"947:4:1","nodeType":"VariableDeclaration","scope":132,"src":"932:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":126,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:1"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":132,"src":"976:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":129,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:1"},"scope":133,"src":"824:160:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":134,"src":"294:692:1","usedErrors":[]}],"src":"116:871:1"},"id":1},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[145]},"id":146,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":135,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"125:279:2","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":145,"linearizedBaseContracts":[145],"name":"IERC165","nameLocation":"415:7:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"429:340:2","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":144,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:2","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:2","nodeType":"VariableDeclaration","scope":144,"src":"801:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":138,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:2"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":144,"src":"844:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":141,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:2"},"scope":145,"src":"774:76:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":146,"src":"405:447:2","usedErrors":[]}],"src":"100:753:2"},"id":2},"contracts/ERC721Receiver.sol":{"ast":{"absolutePath":"contracts/ERC721Receiver.sol","exportedSymbols":{"ERC721Receiver":[167],"IERC721Receiver":[133]},"id":168,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":147,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"33:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","id":148,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":168,"sourceUnit":134,"src":"60:66:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":149,"name":"IERC721Receiver","nodeType":"IdentifierPath","referencedDeclaration":133,"src":"157:15:3"},"id":150,"nodeType":"InheritanceSpecifier","src":"157:15:3"}],"canonicalName":"ERC721Receiver","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":167,"linearizedBaseContracts":[167,133],"name":"ERC721Receiver","nameLocation":"139:14:3","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[132],"body":{"id":165,"nodeType":"Block","src":"358:107:3","statements":[{"expression":{"hexValue":"30783135306237613032","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"376:10:3","typeDescriptions":{"typeIdentifier":"t_rational_353073666_by_1","typeString":"int_const 353073666"},"value":"0x150b7a02"},"functionReturnParameters":162,"id":164,"nodeType":"Return","src":"369:17:3"}]},"functionSelector":"150b7a02","id":166,"implemented":true,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"189:16:3","nodeType":"FunctionDefinition","parameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":166,"src":"216:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"216:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":166,"src":"245:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":153,"name":"address","nodeType":"ElementaryTypeName","src":"245:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":166,"src":"270:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":155,"name":"uint256","nodeType":"ElementaryTypeName","src":"270:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":166,"src":"298:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":157,"name":"bytes","nodeType":"ElementaryTypeName","src":"298:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"205:121:3"},"returnParameters":{"id":162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":166,"src":"350:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":160,"name":"bytes4","nodeType":"ElementaryTypeName","src":"350:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"349:8:3"},"scope":167,"src":"180:285:3","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":168,"src":"130:338:3","usedErrors":[]}],"src":"33:437:3"},"id":3},"contracts/enums/YieldBoxTokenType.sol":{"ast":{"absolutePath":"contracts/enums/YieldBoxTokenType.sol","exportedSymbols":{"TokenType":[175]},"id":176,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":169,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:4"},{"canonicalName":"TokenType","id":175,"members":[{"id":170,"name":"Native","nameLocation":"578:6:4","nodeType":"EnumValue","src":"578:6:4"},{"id":171,"name":"ERC20","nameLocation":"590:5:4","nodeType":"EnumValue","src":"590:5:4"},{"id":172,"name":"ERC721","nameLocation":"601:6:4","nodeType":"EnumValue","src":"601:6:4"},{"id":173,"name":"ERC1155","nameLocation":"613:7:4","nodeType":"EnumValue","src":"613:7:4"},{"id":174,"name":"None","nameLocation":"626:4:4","nodeType":"EnumValue","src":"626:4:4"}],"name":"TokenType","nameLocation":"562:9:4","nodeType":"EnumDefinition","src":"557:75:4"}],"src":"32:601:4"},"id":4},"contracts/interfaces/IStrategy.sol":{"ast":{"absolutePath":"contracts/interfaces/IStrategy.sol","exportedSymbols":{"IStrategy":[251],"IYieldBox":[402],"NO_STRATEGY":[260],"TokenType":[175]},"id":261,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":177,"literals":["solidity","0.8",".9"],"nodeType":"PragmaDirective","src":"32:22:5"},{"id":178,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"55:33:5"},{"absolutePath":"contracts/enums/YieldBoxTokenType.sol","file":"../enums/YieldBoxTokenType.sol","id":179,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":261,"sourceUnit":176,"src":"90:40:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IYieldBox.sol","file":"./IYieldBox.sol","id":180,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":261,"sourceUnit":403,"src":"131:25:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IStrategy","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":251,"linearizedBaseContracts":[251],"name":"IStrategy","nameLocation":"168:9:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"720:65:5","text":"Returns the address of the yieldBox that this strategy is for"},"functionSelector":"de406577","id":187,"implemented":false,"kind":"function","modifiers":[],"name":"yieldBox","nameLocation":"799:8:5","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[],"src":"807:2:5"},"returnParameters":{"id":186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"yieldBox_","nameLocation":"843:9:5","nodeType":"VariableDeclaration","scope":187,"src":"833:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IYieldBox_$402","typeString":"contract IYieldBox"},"typeName":{"id":184,"nodeType":"UserDefinedTypeName","pathNode":{"id":183,"name":"IYieldBox","nodeType":"IdentifierPath","referencedDeclaration":402,"src":"833:9:5"},"referencedDeclaration":402,"src":"833:9:5","typeDescriptions":{"typeIdentifier":"t_contract$_IYieldBox_$402","typeString":"contract IYieldBox"}},"visibility":"internal"}],"src":"832:21:5"},"scope":251,"src":"790:64:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"860:36:5","text":"Returns a name for this strategy"},"functionSelector":"06fdde03","id":193,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"910:4:5","nodeType":"FunctionDefinition","parameters":{"id":189,"nodeType":"ParameterList","parameters":[],"src":"914:2:5"},"returnParameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":191,"mutability":"mutable","name":"name_","nameLocation":"954:5:5","nodeType":"VariableDeclaration","scope":193,"src":"940:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":190,"name":"string","nodeType":"ElementaryTypeName","src":"940:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"939:21:5"},"scope":251,"src":"901:60:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":194,"nodeType":"StructuredDocumentation","src":"967:43:5","text":"Returns a description for this strategy"},"functionSelector":"7284e416","id":199,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"1024:11:5","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[],"src":"1035:2:5"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"description_","nameLocation":"1075:12:5","nodeType":"VariableDeclaration","scope":199,"src":"1061:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":196,"name":"string","nodeType":"ElementaryTypeName","src":"1061:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1060:28:5"},"scope":251,"src":"1015:74:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"1192:54:5","text":"Returns the standard that this strategy works with"},"functionSelector":"30fa738c","id":206,"implemented":false,"kind":"function","modifiers":[],"name":"tokenType","nameLocation":"1260:9:5","nodeType":"FunctionDefinition","parameters":{"id":201,"nodeType":"ParameterList","parameters":[],"src":"1269:2:5"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"tokenType_","nameLocation":"1305:10:5","nodeType":"VariableDeclaration","scope":206,"src":"1295:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$175","typeString":"enum TokenType"},"typeName":{"id":203,"nodeType":"UserDefinedTypeName","pathNode":{"id":202,"name":"TokenType","nodeType":"IdentifierPath","referencedDeclaration":175,"src":"1295:9:5"},"referencedDeclaration":175,"src":"1295:9:5","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$175","typeString":"enum TokenType"}},"visibility":"internal"}],"src":"1294:22:5"},"scope":251,"src":"1251:66:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"1323:62:5","text":"Returns the contract address that this strategy works with"},"functionSelector":"f6b4dfb4","id":212,"implemented":false,"kind":"function","modifiers":[],"name":"contractAddress","nameLocation":"1399:15:5","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"1414:2:5"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"contractAddress_","nameLocation":"1448:16:5","nodeType":"VariableDeclaration","scope":212,"src":"1440:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"1440:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1439:26:5"},"scope":251,"src":"1390:76:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":213,"nodeType":"StructuredDocumentation","src":"1472:109:5","text":"Returns the tokenId that this strategy works with (for EIP1155)\n This is always 0 for EIP20 tokens"},"functionSelector":"17d70f7c","id":218,"implemented":false,"kind":"function","modifiers":[],"name":"tokenId","nameLocation":"1595:7:5","nodeType":"FunctionDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[],"src":"1602:2:5"},"returnParameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"tokenId_","nameLocation":"1636:8:5","nodeType":"VariableDeclaration","scope":218,"src":"1628:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"1628:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1627:18:5"},"scope":251,"src":"1586:60:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"1761:433:5","text":"Returns the total value the strategy holds (principle + gain) expressed in asset token amount.\n This should be cheap in gas to retrieve. Can return a bit less than the actual, but MUST NOT return more.\n The gas cost of this function will be paid on any deposit or withdrawal onto and out of the YieldBox\n that uses this strategy. Also, anytime a protocol converts between shares and amount, this gets called."},"functionSelector":"ce845d1d","id":224,"implemented":false,"kind":"function","modifiers":[],"name":"currentBalance","nameLocation":"2208:14:5","nodeType":"FunctionDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[],"src":"2222:2:5"},"returnParameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"amount","nameLocation":"2256:6:5","nodeType":"VariableDeclaration","scope":224,"src":"2248:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":221,"name":"uint256","nodeType":"ElementaryTypeName","src":"2248:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2247:16:5"},"scope":251,"src":"2199:65:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"2270:52:5","text":"Returns the maximum amount that can be withdrawn"},"functionSelector":"50188301","id":230,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawable","nameLocation":"2336:12:5","nodeType":"FunctionDefinition","parameters":{"id":226,"nodeType":"ParameterList","parameters":[],"src":"2348:2:5"},"returnParameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"amount","nameLocation":"2382:6:5","nodeType":"VariableDeclaration","scope":230,"src":"2374:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"2374:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2373:16:5"},"scope":251,"src":"2327:63:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":231,"nodeType":"StructuredDocumentation","src":"2396:211:5","text":"Returns the maximum amount that can be withdrawn for a low gas fee\n When more than this amount is withdrawn it will trigger divesting from the actual strategy\n which will incur higher gas costs"},"functionSelector":"e3575f05","id":236,"implemented":false,"kind":"function","modifiers":[],"name":"cheapWithdrawable","nameLocation":"2621:17:5","nodeType":"FunctionDefinition","parameters":{"id":232,"nodeType":"ParameterList","parameters":[],"src":"2638:2:5"},"returnParameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"amount","nameLocation":"2672:6:5","nodeType":"VariableDeclaration","scope":236,"src":"2664:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":233,"name":"uint256","nodeType":"ElementaryTypeName","src":"2664:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2663:16:5"},"scope":251,"src":"2612:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":237,"nodeType":"StructuredDocumentation","src":"2792:539:5","text":"Is called by YieldBox to signal funds have been added, the strategy may choose to act on this\n When a large enough deposit is made, this should trigger the strategy to invest into the actual\n strategy. This function should normally NOT be used to invest on each call as that would be costly\n for small deposits.\n If the strategy handles native tokens (ETH) it will receive it directly (not wrapped). It will be\n up to the strategy to wrap it if needed.\n Only accept this call from the YieldBox"},"functionSelector":"afa91cc6","id":242,"implemented":false,"kind":"function","modifiers":[],"name":"deposited","nameLocation":"3345:9:5","nodeType":"FunctionDefinition","parameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"amount","nameLocation":"3363:6:5","nodeType":"VariableDeclaration","scope":242,"src":"3355:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":238,"name":"uint256","nodeType":"ElementaryTypeName","src":"3355:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3354:16:5"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[],"src":"3379:0:5"},"scope":251,"src":"3336:44:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"3386:538:5","text":"Is called by the YieldBox to ask the strategy to withdraw to the user\n When a strategy keeps a little reserve for cheap withdrawals and the requested withdrawal goes over this amount,\n the strategy should divest enough from the strategy to complete the withdrawal and rebalance the reserve.\n If the strategy handles native tokens (ETH) it should send this, not a wrapped version.\n With some strategies it might be hard to withdraw exactly the correct amount.\n Only accept this call from the YieldBox"},"functionSelector":"f3fef3a3","id":250,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"3938:8:5","nodeType":"FunctionDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"to","nameLocation":"3955:2:5","nodeType":"VariableDeclaration","scope":250,"src":"3947:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":244,"name":"address","nodeType":"ElementaryTypeName","src":"3947:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"amount","nameLocation":"3967:6:5","nodeType":"VariableDeclaration","scope":250,"src":"3959:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"3959:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3946:28:5"},"returnParameters":{"id":249,"nodeType":"ParameterList","parameters":[],"src":"3983:0:5"},"scope":251,"src":"3929:55:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":261,"src":"158:3828:5","usedErrors":[]},{"constant":true,"id":260,"mutability":"constant","name":"NO_STRATEGY","nameLocation":"4007:11:5","nodeType":"VariableDeclaration","scope":261,"src":"3988:54:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$251","typeString":"contract IStrategy"},"typeName":{"id":253,"nodeType":"UserDefinedTypeName","pathNode":{"id":252,"name":"IStrategy","nodeType":"IdentifierPath","referencedDeclaration":251,"src":"3988:9:5"},"referencedDeclaration":251,"src":"3988:9:5","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$251","typeString":"contract IStrategy"}},"value":{"arguments":[{"arguments":[{"hexValue":"30","id":257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4039:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4031:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"4031:7:5","typeDescriptions":{}}},"id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4031:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":254,"name":"IStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"4021:9:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStrategy_$251_$","typeString":"type(contract IStrategy)"}},"id":259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4021:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$251","typeString":"contract IStrategy"}},"visibility":"internal"}],"src":"32:4012:5"},"id":5},"contracts/interfaces/IYieldBox.sol":{"ast":{"absolutePath":"contracts/interfaces/IYieldBox.sol","exportedSymbols":{"IYieldBox":[402],"TokenType":[175]},"id":403,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":262,"literals":["solidity","0.8",".9"],"nodeType":"PragmaDirective","src":"32:22:6"},{"id":263,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"55:33:6"},{"absolutePath":"contracts/enums/YieldBoxTokenType.sol","file":"../enums/YieldBoxTokenType.sol","id":264,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":403,"sourceUnit":176,"src":"90:40:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IYieldBox","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":402,"linearizedBaseContracts":[402],"name":"IYieldBox","nameLocation":"142:9:6","nodeType":"ContractDefinition","nodes":[{"functionSelector":"eb6d3a11","id":269,"implemented":false,"kind":"function","modifiers":[],"name":"wrappedNative","nameLocation":"167:13:6","nodeType":"FunctionDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[],"src":"180:2:6"},"returnParameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":267,"mutability":"mutable","name":"wrappedNative","nameLocation":"214:13:6","nodeType":"VariableDeclaration","scope":269,"src":"206:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":266,"name":"address","nodeType":"ElementaryTypeName","src":"206:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"205:23:6"},"scope":402,"src":"158:71:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cf35bdd0","id":283,"implemented":false,"kind":"function","modifiers":[],"name":"assets","nameLocation":"244:6:6","nodeType":"FunctionDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"assetId","nameLocation":"259:7:6","nodeType":"VariableDeclaration","scope":283,"src":"251:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":270,"name":"uint256","nodeType":"ElementaryTypeName","src":"251:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"250:17:6"},"returnParameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":275,"mutability":"mutable","name":"tokenType","nameLocation":"338:9:6","nodeType":"VariableDeclaration","scope":283,"src":"328:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$175","typeString":"enum TokenType"},"typeName":{"id":274,"nodeType":"UserDefinedTypeName","pathNode":{"id":273,"name":"TokenType","nodeType":"IdentifierPath","referencedDeclaration":175,"src":"328:9:6"},"referencedDeclaration":175,"src":"328:9:6","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$175","typeString":"enum TokenType"}},"visibility":"internal"},{"constant":false,"id":277,"mutability":"mutable","name":"contractAddress","nameLocation":"369:15:6","nodeType":"VariableDeclaration","scope":283,"src":"361:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":279,"mutability":"mutable","name":"strategy","nameLocation":"406:8:6","nodeType":"VariableDeclaration","scope":283,"src":"398:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"398:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"tokenId","nameLocation":"436:7:6","nodeType":"VariableDeclaration","scope":283,"src":"428:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"428:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"314:139:6"},"scope":402,"src":"235:219:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1f0ee4c3","id":294,"implemented":false,"kind":"function","modifiers":[],"name":"nativeTokens","nameLocation":"469:12:6","nodeType":"FunctionDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"assetId","nameLocation":"490:7:6","nodeType":"VariableDeclaration","scope":294,"src":"482:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"482:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"481:17:6"},"returnParameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"name","nameLocation":"573:4:6","nodeType":"VariableDeclaration","scope":294,"src":"559:18:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":287,"name":"string","nodeType":"ElementaryTypeName","src":"559:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":290,"mutability":"mutable","name":"symbol","nameLocation":"605:6:6","nodeType":"VariableDeclaration","scope":294,"src":"591:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":289,"name":"string","nodeType":"ElementaryTypeName","src":"591:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"decimals","nameLocation":"631:8:6","nodeType":"VariableDeclaration","scope":294,"src":"625:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":291,"name":"uint8","nodeType":"ElementaryTypeName","src":"625:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"545:104:6"},"scope":402,"src":"460:190:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a123c33e","id":301,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"665:5:6","nodeType":"FunctionDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":296,"mutability":"mutable","name":"assetId","nameLocation":"679:7:6","nodeType":"VariableDeclaration","scope":301,"src":"671:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":295,"name":"uint256","nodeType":"ElementaryTypeName","src":"671:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"670:17:6"},"returnParameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"owner","nameLocation":"719:5:6","nodeType":"VariableDeclaration","scope":301,"src":"711:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"711:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"710:15:6"},"scope":402,"src":"656:70:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"bd85b039","id":308,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"741:11:6","nodeType":"FunctionDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":303,"mutability":"mutable","name":"assetId","nameLocation":"761:7:6","nodeType":"VariableDeclaration","scope":308,"src":"753:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":302,"name":"uint256","nodeType":"ElementaryTypeName","src":"753:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"752:17:6"},"returnParameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"totalSupply","nameLocation":"801:11:6","nodeType":"VariableDeclaration","scope":308,"src":"793:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"793:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"792:21:6"},"scope":402,"src":"732:82:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a9af97a","id":325,"implemented":false,"kind":"function","modifiers":[],"name":"depositAsset","nameLocation":"829:12:6","nodeType":"FunctionDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"mutability":"mutable","name":"assetId","nameLocation":"859:7:6","nodeType":"VariableDeclaration","scope":325,"src":"851:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"851:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":312,"mutability":"mutable","name":"from","nameLocation":"884:4:6","nodeType":"VariableDeclaration","scope":325,"src":"876:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"876:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"to","nameLocation":"906:2:6","nodeType":"VariableDeclaration","scope":325,"src":"898:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"898:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":316,"mutability":"mutable","name":"amount","nameLocation":"926:6:6","nodeType":"VariableDeclaration","scope":325,"src":"918:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":315,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":318,"mutability":"mutable","name":"share","nameLocation":"950:5:6","nodeType":"VariableDeclaration","scope":325,"src":"942:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":317,"name":"uint256","nodeType":"ElementaryTypeName","src":"942:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"841:120:6"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"amountOut","nameLocation":"988:9:6","nodeType":"VariableDeclaration","scope":325,"src":"980:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":320,"name":"uint256","nodeType":"ElementaryTypeName","src":"980:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":323,"mutability":"mutable","name":"shareOut","nameLocation":"1007:8:6","nodeType":"VariableDeclaration","scope":325,"src":"999:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint256","nodeType":"ElementaryTypeName","src":"999:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"979:37:6"},"scope":402,"src":"820:197:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8d2e63b8","id":342,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"1032:8:6","nodeType":"FunctionDefinition","parameters":{"id":336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"assetId","nameLocation":"1058:7:6","nodeType":"VariableDeclaration","scope":342,"src":"1050:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":326,"name":"uint256","nodeType":"ElementaryTypeName","src":"1050:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":329,"mutability":"mutable","name":"from","nameLocation":"1083:4:6","nodeType":"VariableDeclaration","scope":342,"src":"1075:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":328,"name":"address","nodeType":"ElementaryTypeName","src":"1075:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"to","nameLocation":"1105:2:6","nodeType":"VariableDeclaration","scope":342,"src":"1097:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1097:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"mutability":"mutable","name":"amount","nameLocation":"1125:6:6","nodeType":"VariableDeclaration","scope":342,"src":"1117:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":332,"name":"uint256","nodeType":"ElementaryTypeName","src":"1117:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":335,"mutability":"mutable","name":"share","nameLocation":"1149:5:6","nodeType":"VariableDeclaration","scope":342,"src":"1141:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":334,"name":"uint256","nodeType":"ElementaryTypeName","src":"1141:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1040:120:6"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"amountOut","nameLocation":"1187:9:6","nodeType":"VariableDeclaration","scope":342,"src":"1179:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":337,"name":"uint256","nodeType":"ElementaryTypeName","src":"1179:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"shareOut","nameLocation":"1206:8:6","nodeType":"VariableDeclaration","scope":342,"src":"1198:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1198:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1178:37:6"},"scope":402,"src":"1023:193:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0411b252","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1231:8:6","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"from","nameLocation":"1257:4:6","nodeType":"VariableDeclaration","scope":353,"src":"1249:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"1249:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"to","nameLocation":"1279:2:6","nodeType":"VariableDeclaration","scope":353,"src":"1271:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"1271:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":348,"mutability":"mutable","name":"assetId","nameLocation":"1299:7:6","nodeType":"VariableDeclaration","scope":353,"src":"1291:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":347,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"share","nameLocation":"1324:5:6","nodeType":"VariableDeclaration","scope":353,"src":"1316:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":349,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1239:96:6"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[],"src":"1344:0:6"},"scope":402,"src":"1222:123:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"daf210b1","id":366,"implemented":false,"kind":"function","modifiers":[],"name":"batchTransfer","nameLocation":"1360:13:6","nodeType":"FunctionDefinition","parameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":355,"mutability":"mutable","name":"from","nameLocation":"1391:4:6","nodeType":"VariableDeclaration","scope":366,"src":"1383:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":354,"name":"address","nodeType":"ElementaryTypeName","src":"1383:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":357,"mutability":"mutable","name":"to","nameLocation":"1413:2:6","nodeType":"VariableDeclaration","scope":366,"src":"1405:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"1405:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":360,"mutability":"mutable","name":"assetIds_","nameLocation":"1444:9:6","nodeType":"VariableDeclaration","scope":366,"src":"1425:28:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":358,"name":"uint256","nodeType":"ElementaryTypeName","src":"1425:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":359,"nodeType":"ArrayTypeName","src":"1425:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":363,"mutability":"mutable","name":"shares_","nameLocation":"1482:7:6","nodeType":"VariableDeclaration","scope":366,"src":"1463:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":361,"name":"uint256","nodeType":"ElementaryTypeName","src":"1463:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":362,"nodeType":"ArrayTypeName","src":"1463:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1373:122:6"},"returnParameters":{"id":365,"nodeType":"ParameterList","parameters":[],"src":"1504:0:6"},"scope":402,"src":"1351:154:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"215b595a","id":379,"implemented":false,"kind":"function","modifiers":[],"name":"transferMultiple","nameLocation":"1520:16:6","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"from","nameLocation":"1554:4:6","nodeType":"VariableDeclaration","scope":379,"src":"1546:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"1546:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":371,"mutability":"mutable","name":"tos","nameLocation":"1587:3:6","nodeType":"VariableDeclaration","scope":379,"src":"1568:22:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":369,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":370,"nodeType":"ArrayTypeName","src":"1568:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":373,"mutability":"mutable","name":"assetId","nameLocation":"1608:7:6","nodeType":"VariableDeclaration","scope":379,"src":"1600:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":372,"name":"uint256","nodeType":"ElementaryTypeName","src":"1600:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"shares","nameLocation":"1644:6:6","nodeType":"VariableDeclaration","scope":379,"src":"1625:25:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"1625:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":375,"nodeType":"ArrayTypeName","src":"1625:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1536:120:6"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"1665:0:6"},"scope":402,"src":"1511:155:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8eb22cdd","id":390,"implemented":false,"kind":"function","modifiers":[],"name":"toShare","nameLocation":"1681:7:6","nodeType":"FunctionDefinition","parameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"mutability":"mutable","name":"assetId","nameLocation":"1706:7:6","nodeType":"VariableDeclaration","scope":390,"src":"1698:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":380,"name":"uint256","nodeType":"ElementaryTypeName","src":"1698:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":383,"mutability":"mutable","name":"amount","nameLocation":"1731:6:6","nodeType":"VariableDeclaration","scope":390,"src":"1723:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":385,"mutability":"mutable","name":"roundUp","nameLocation":"1752:7:6","nodeType":"VariableDeclaration","scope":390,"src":"1747:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":384,"name":"bool","nodeType":"ElementaryTypeName","src":"1747:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1688:77:6"},"returnParameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"share","nameLocation":"1797:5:6","nodeType":"VariableDeclaration","scope":390,"src":"1789:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"1789:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1788:15:6"},"scope":402,"src":"1672:132:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"442c1599","id":401,"implemented":false,"kind":"function","modifiers":[],"name":"toAmount","nameLocation":"1819:8:6","nodeType":"FunctionDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":392,"mutability":"mutable","name":"assetId","nameLocation":"1845:7:6","nodeType":"VariableDeclaration","scope":401,"src":"1837:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"1837:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":394,"mutability":"mutable","name":"share","nameLocation":"1870:5:6","nodeType":"VariableDeclaration","scope":401,"src":"1862:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"1862:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"roundUp","nameLocation":"1890:7:6","nodeType":"VariableDeclaration","scope":401,"src":"1885:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":395,"name":"bool","nodeType":"ElementaryTypeName","src":"1885:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1827:76:6"},"returnParameters":{"id":400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"amount","nameLocation":"1935:6:6","nodeType":"VariableDeclaration","scope":401,"src":"1927:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"1927:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1926:16:6"},"scope":402,"src":"1810:133:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":403,"src":"132:1813:6","usedErrors":[]}],"src":"32:1914:6"},"id":6},"contracts/mocks/ERC721StrategyMock.sol":{"ast":{"absolutePath":"contracts/mocks/ERC721StrategyMock.sol","exportedSymbols":{"ERC721Receiver":[167],"ERC721StrategyMock":[546],"IERC165":[145],"IERC721":[115],"IERC721Receiver":[133],"IStrategy":[251],"IYieldBox":[402],"NO_STRATEGY":[260],"TokenType":[175]},"id":547,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":404,"literals":["solidity","0.8",".9"],"nodeType":"PragmaDirective","src":"33:22:7"},{"id":405,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"57:33:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":406,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":547,"sourceUnit":116,"src":"94:58:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/enums/YieldBoxTokenType.sol","file":"../enums/YieldBoxTokenType.sol","id":407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":547,"sourceUnit":176,"src":"154:40:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IStrategy.sol","file":"../interfaces/IStrategy.sol","id":408,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":547,"sourceUnit":261,"src":"196:37:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IYieldBox.sol","file":"../interfaces/IYieldBox.sol","id":409,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":547,"sourceUnit":403,"src":"235:37:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ERC721Receiver.sol","file":"../ERC721Receiver.sol","id":410,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":547,"sourceUnit":168,"src":"274:31:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":411,"name":"IStrategy","nodeType":"IdentifierPath","referencedDeclaration":251,"src":"421:9:7"},"id":412,"nodeType":"InheritanceSpecifier","src":"421:9:7"},{"baseName":{"id":413,"name":"ERC721Receiver","nodeType":"IdentifierPath","referencedDeclaration":167,"src":"432:14:7"},"id":414,"nodeType":"InheritanceSpecifier","src":"432:14:7"}],"canonicalName":"ERC721StrategyMock","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":546,"linearizedBaseContracts":[546,167,133,251],"name":"ERC721StrategyMock","nameLocation":"399:18:7","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[193],"constant":true,"functionSelector":"06fdde03","id":418,"mutability":"constant","name":"name","nameLocation":"486:4:7","nodeType":"VariableDeclaration","overrides":{"id":416,"nodeType":"OverrideSpecifier","overrides":[],"src":"477:8:7"},"scope":546,"src":"454:59:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":415,"name":"string","nodeType":"ElementaryTypeName","src":"454:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"45524337323153747261746567794d6f636b","id":417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"493:20:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7e8f76690f7c1c8cedd71a7b13904229ec59a68aceadd3d41a02af830b0a14b","typeString":"literal_string \"ERC721StrategyMock\""},"value":"ERC721StrategyMock"},"visibility":"public"},{"baseFunctions":[199],"constant":true,"functionSelector":"7284e416","id":422,"mutability":"constant","name":"description","nameLocation":"552:11:7","nodeType":"VariableDeclaration","overrides":{"id":420,"nodeType":"OverrideSpecifier","overrides":[],"src":"543:8:7"},"scope":546,"src":"520:73:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":419,"name":"string","nodeType":"ElementaryTypeName","src":"520:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4d6f636b20537472617465677920666f722074657374696e67","id":421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"566:27:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_000b04f9231b34b24546ca7d01672af2fdc89ab2b66b8339f20e1ba0d599c19d","typeString":"literal_string \"Mock Strategy for testing\""},"value":"Mock Strategy for testing"},"visibility":"public"},{"baseFunctions":[206],"constant":true,"functionSelector":"30fa738c","id":428,"mutability":"constant","name":"tokenType","nameLocation":"637:9:7","nodeType":"VariableDeclaration","overrides":{"id":425,"nodeType":"OverrideSpecifier","overrides":[],"src":"628:8:7"},"scope":546,"src":"602:63:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$175","typeString":"enum TokenType"},"typeName":{"id":424,"nodeType":"UserDefinedTypeName","pathNode":{"id":423,"name":"TokenType","nodeType":"IdentifierPath","referencedDeclaration":175,"src":"602:9:7"},"referencedDeclaration":175,"src":"602:9:7","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$175","typeString":"enum TokenType"}},"value":{"expression":{"id":426,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"649:9:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$175_$","typeString":"type(enum TokenType)"}},"id":427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"ERC721","nodeType":"MemberAccess","referencedDeclaration":172,"src":"649:16:7","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$175","typeString":"enum TokenType"}},"visibility":"public"},{"baseFunctions":[212],"constant":false,"functionSelector":"f6b4dfb4","id":431,"mutability":"immutable","name":"contractAddress","nameLocation":"706:15:7","nodeType":"VariableDeclaration","overrides":{"id":430,"nodeType":"OverrideSpecifier","overrides":[],"src":"697:8:7"},"scope":546,"src":"672:49:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"672:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[218],"constant":false,"functionSelector":"17d70f7c","id":434,"mutability":"immutable","name":"tokenId","nameLocation":"762:7:7","nodeType":"VariableDeclaration","overrides":{"id":433,"nodeType":"OverrideSpecifier","overrides":[],"src":"753:8:7"},"scope":546,"src":"728:41:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":432,"name":"uint256","nodeType":"ElementaryTypeName","src":"728:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[187],"constant":false,"functionSelector":"de406577","id":438,"mutability":"immutable","name":"yieldBox","nameLocation":"814:8:7","nodeType":"VariableDeclaration","overrides":{"id":437,"nodeType":"OverrideSpecifier","overrides":[],"src":"805:8:7"},"scope":546,"src":"778:44:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IYieldBox_$402","typeString":"contract IYieldBox"},"typeName":{"id":436,"nodeType":"UserDefinedTypeName","pathNode":{"id":435,"name":"IYieldBox","nodeType":"IdentifierPath","referencedDeclaration":402,"src":"778:9:7"},"referencedDeclaration":402,"src":"778:9:7","typeDescriptions":{"typeIdentifier":"t_contract$_IYieldBox_$402","typeString":"contract IYieldBox"}},"visibility":"public"},{"body":{"id":460,"nodeType":"Block","src":"897:102:7","statements":[{"expression":{"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":448,"name":"yieldBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"908:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IYieldBox_$402","typeString":"contract IYieldBox"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":449,"name":"yieldBox_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"919:9:7","typeDescriptions":{"typeIdentifier":"t_contract$_IYieldBox_$402","typeString":"contract IYieldBox"}},"src":"908:20:7","typeDescriptions":{"typeIdentifier":"t_contract$_IYieldBox_$402","typeString":"contract IYieldBox"}},"id":451,"nodeType":"ExpressionStatement","src":"908:20:7"},{"expression":{"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":452,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"939:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":453,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"957:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"939:23:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":455,"nodeType":"ExpressionStatement","src":"939:23:7"},{"expression":{"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":456,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"973:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":457,"name":"tokenId_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"983:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"973:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":459,"nodeType":"ExpressionStatement","src":"973:18:7"}]},"id":461,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"yieldBox_","nameLocation":"853:9:7","nodeType":"VariableDeclaration","scope":461,"src":"843:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IYieldBox_$402","typeString":"contract IYieldBox"},"typeName":{"id":440,"nodeType":"UserDefinedTypeName","pathNode":{"id":439,"name":"IYieldBox","nodeType":"IdentifierPath","referencedDeclaration":402,"src":"843:9:7"},"referencedDeclaration":402,"src":"843:9:7","typeDescriptions":{"typeIdentifier":"t_contract$_IYieldBox_$402","typeString":"contract IYieldBox"}},"visibility":"internal"},{"constant":false,"id":443,"mutability":"mutable","name":"token","nameLocation":"872:5:7","nodeType":"VariableDeclaration","scope":461,"src":"864:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":442,"name":"address","nodeType":"ElementaryTypeName","src":"864:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":445,"mutability":"mutable","name":"tokenId_","nameLocation":"887:8:7","nodeType":"VariableDeclaration","scope":461,"src":"879:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":444,"name":"uint256","nodeType":"ElementaryTypeName","src":"879:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"842:54:7"},"returnParameters":{"id":447,"nodeType":"ParameterList","parameters":[],"src":"897:0:7"},"scope":546,"src":"831:168:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[224],"body":{"id":478,"nodeType":"Block","src":"1522:75:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":474,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1583:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_ERC721StrategyMock_$546","typeString":"contract ERC721StrategyMock"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC721StrategyMock_$546","typeString":"contract ERC721StrategyMock"}],"id":473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1575:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":472,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:7","typeDescriptions":{}}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1575:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":469,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"1548:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":468,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"1540:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$115_$","typeString":"type(contract IERC721)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1540:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$115","typeString":"contract IERC721"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":40,"src":"1540:34:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1540:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":467,"id":477,"nodeType":"Return","src":"1533:56:7"}]},"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"1007:437:7","text":"Returns the total value the strategy holds (principle + gain) expressed in asset token amount.\n This should be cheap in gas to retrieve. Can return a bit less than the actual, but shouldn't return more.\n The gas cost of this function will be paid on any deposit or withdrawal onto and out of the YieldBox\n that uses this strategy. Also, anytime a protocol converts between shares and amount, this gets called."},"functionSelector":"ce845d1d","id":479,"implemented":true,"kind":"function","modifiers":[],"name":"currentBalance","nameLocation":"1459:14:7","nodeType":"FunctionDefinition","overrides":{"id":464,"nodeType":"OverrideSpecifier","overrides":[],"src":"1488:8:7"},"parameters":{"id":463,"nodeType":"ParameterList","parameters":[],"src":"1473:2:7"},"returnParameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"amount","nameLocation":"1514:6:7","nodeType":"VariableDeclaration","scope":479,"src":"1506:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":465,"name":"uint256","nodeType":"ElementaryTypeName","src":"1506:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1505:16:7"},"scope":546,"src":"1450:147:7","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[230],"body":{"id":496,"nodeType":"Block","src":"1735:75:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":492,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1796:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_ERC721StrategyMock_$546","typeString":"contract ERC721StrategyMock"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC721StrategyMock_$546","typeString":"contract ERC721StrategyMock"}],"id":491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1788:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":490,"name":"address","nodeType":"ElementaryTypeName","src":"1788:7:7","typeDescriptions":{}}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1788:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":487,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"1761:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":486,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"1753:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$115_$","typeString":"type(contract IERC721)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1753:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$115","typeString":"contract IERC721"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":40,"src":"1753:34:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1753:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":485,"id":495,"nodeType":"Return","src":"1746:56:7"}]},"documentation":{"id":480,"nodeType":"StructuredDocumentation","src":"1605:52:7","text":"Returns the maximum amount that can be withdrawn"},"functionSelector":"50188301","id":497,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawable","nameLocation":"1672:12:7","nodeType":"FunctionDefinition","overrides":{"id":482,"nodeType":"OverrideSpecifier","overrides":[],"src":"1701:8:7"},"parameters":{"id":481,"nodeType":"ParameterList","parameters":[],"src":"1684:2:7"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"mutability":"mutable","name":"amount","nameLocation":"1727:6:7","nodeType":"VariableDeclaration","scope":497,"src":"1719:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":483,"name":"uint256","nodeType":"ElementaryTypeName","src":"1719:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1718:16:7"},"scope":546,"src":"1663:147:7","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[236],"body":{"id":514,"nodeType":"Block","src":"2114:75:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":510,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2175:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_ERC721StrategyMock_$546","typeString":"contract ERC721StrategyMock"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC721StrategyMock_$546","typeString":"contract ERC721StrategyMock"}],"id":509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2167:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"2167:7:7","typeDescriptions":{}}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2167:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":505,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"2140:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":504,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"2132:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$115_$","typeString":"type(contract IERC721)"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2132:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$115","typeString":"contract IERC721"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":40,"src":"2132:34:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2132:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":503,"id":513,"nodeType":"Return","src":"2125:56:7"}]},"documentation":{"id":498,"nodeType":"StructuredDocumentation","src":"1818:213:7","text":"Returns the maximum amount that can be withdrawn for a low gas fee\n When more than this amount is withdrawn it will trigger divesting from the actual strategy\n which will incur higher gas costs"},"functionSelector":"e3575f05","id":515,"implemented":true,"kind":"function","modifiers":[],"name":"cheapWithdrawable","nameLocation":"2046:17:7","nodeType":"FunctionDefinition","overrides":{"id":500,"nodeType":"OverrideSpecifier","overrides":[],"src":"2080:8:7"},"parameters":{"id":499,"nodeType":"ParameterList","parameters":[],"src":"2063:2:7"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"amount","nameLocation":"2106:6:7","nodeType":"VariableDeclaration","scope":515,"src":"2098:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":501,"name":"uint256","nodeType":"ElementaryTypeName","src":"2098:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2097:16:7"},"scope":546,"src":"2037:152:7","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[242],"body":{"id":522,"nodeType":"Block","src":"2644:2:7","statements":[]},"documentation":{"id":516,"nodeType":"StructuredDocumentation","src":"2197:388:7","text":"Is called by YieldBox to signal funds have been added, the strategy may choose to act on this\n When a large enough deposit is made, this should trigger the strategy to invest into the actual\n strategy. This function should normally NOT be used to invest on each call as that would be costly\n for small deposits.\n Only accept this call from the YieldBox"},"functionSelector":"afa91cc6","id":523,"implemented":true,"kind":"function","modifiers":[],"name":"deposited","nameLocation":"2600:9:7","nodeType":"FunctionDefinition","overrides":{"id":520,"nodeType":"OverrideSpecifier","overrides":[],"src":"2635:8:7"},"parameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"amount","nameLocation":"2618:6:7","nodeType":"VariableDeclaration","scope":523,"src":"2610:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":517,"name":"uint256","nodeType":"ElementaryTypeName","src":"2610:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2609:16:7"},"returnParameters":{"id":521,"nodeType":"ParameterList","parameters":[],"src":"2644:0:7"},"scope":546,"src":"2591:55:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[250],"body":{"id":544,"nodeType":"Block","src":"3076:90:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":538,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3137:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_ERC721StrategyMock_$546","typeString":"contract ERC721StrategyMock"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC721StrategyMock_$546","typeString":"contract ERC721StrategyMock"}],"id":537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3129:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"3129:7:7","typeDescriptions":{}}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3129:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":540,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"3144:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":541,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"3148:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":533,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"3095:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":532,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"3087:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$115_$","typeString":"type(contract IERC721)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3087:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$115","typeString":"contract IERC721"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":70,"src":"3087:41:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3087:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":543,"nodeType":"ExpressionStatement","src":"3087:69:7"}]},"documentation":{"id":524,"nodeType":"StructuredDocumentation","src":"2654:359:7","text":"Is called by the YieldBox to ask the strategy to withdraw to the user\n When a strategy keeps a little reserve for cheap withdrawals and the requested withdrawal goes over this amount,\n the strategy should divest enough from the strategy to complete the withdrawal and rebalance the reserve.\n Only accept this call from the YieldBox"},"functionSelector":"f3fef3a3","id":545,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"3028:8:7","nodeType":"FunctionDefinition","overrides":{"id":530,"nodeType":"OverrideSpecifier","overrides":[],"src":"3067:8:7"},"parameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"to","nameLocation":"3045:2:7","nodeType":"VariableDeclaration","scope":545,"src":"3037:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":525,"name":"address","nodeType":"ElementaryTypeName","src":"3037:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":545,"src":"3049:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":527,"name":"uint256","nodeType":"ElementaryTypeName","src":"3049:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3036:21:7"},"returnParameters":{"id":531,"nodeType":"ParameterList","parameters":[],"src":"3076:0:7"},"scope":546,"src":"3019:147:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":547,"src":"390:2779:7","usedErrors":[]}],"src":"33:3138:7"},"id":7}},"contracts":{"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":50000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":50000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":50000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ERC721Receiver.sol":{"ERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610197806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61006861003e3660046100c6565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200160405180910390f35b803573ffffffffffffffffffffffffffffffffffffffff811681146100c157600080fd5b919050565b6000806000806000608086880312156100de57600080fd5b6100e78661009d565b94506100f56020870161009d565b935060408601359250606086013567ffffffffffffffff8082111561011957600080fd5b818801915088601f83011261012d57600080fd5b81358181111561013c57600080fd5b89602082850101111561014e57600080fd5b969995985093965060200194939250505056fea26469706673582212201ab649adf42d0f0b8d1eb75b5663966bcae61b477a60566518201ca8ae1155af64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x68 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0xC6 JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 DUP7 PUSH2 0x9D JUMP JUMPDEST SWAP5 POP PUSH2 0xF5 PUSH1 0x20 DUP8 ADD PUSH2 0x9D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xB6 0x49 0xAD DELEGATECALL 0x2D 0xF SIGNEXTEND DUP14 0x1E 0xB7 JUMPDEST JUMP PUSH4 0x966BCAE6 SHL SELFBALANCE PUSH27 0x60566518201CA8AE1155AF64736F6C634300080900330000000000 ","sourceMap":"130:338:3:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@onERC721Received_166":{"entryPoint":null,"id":166,"parameterSlots":5,"returnSlots":1},"abi_decode_address":{"entryPoint":157,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":198,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1278:8","statements":[{"nodeType":"YulBlock","src":"6:3:8","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:147:8","statements":[{"nodeType":"YulAssignment","src":"73:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:8"},"nodeType":"YulFunctionCall","src":"82:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:8"}]},{"body":{"nodeType":"YulBlock","src":"188:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"197:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"200:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"190:6:8"},"nodeType":"YulFunctionCall","src":"190:12:8"},"nodeType":"YulExpressionStatement","src":"190:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"142:42:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:8"},"nodeType":"YulFunctionCall","src":"131:54:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:8"},"nodeType":"YulFunctionCall","src":"121:65:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:8"},"nodeType":"YulFunctionCall","src":"114:73:8"},"nodeType":"YulIf","src":"111:93:8"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:8","type":""}],"src":"14:196:8"},{"body":{"nodeType":"YulBlock","src":"355:668:8","statements":[{"body":{"nodeType":"YulBlock","src":"402:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"411:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"414:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"404:6:8"},"nodeType":"YulFunctionCall","src":"404:12:8"},"nodeType":"YulExpressionStatement","src":"404:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"376:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"385:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"372:3:8"},"nodeType":"YulFunctionCall","src":"372:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"397:3:8","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"368:3:8"},"nodeType":"YulFunctionCall","src":"368:33:8"},"nodeType":"YulIf","src":"365:53:8"},{"nodeType":"YulAssignment","src":"427:39:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"456:9:8"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"437:18:8"},"nodeType":"YulFunctionCall","src":"437:29:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"427:6:8"}]},{"nodeType":"YulAssignment","src":"475:48:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"508:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"519:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"504:3:8"},"nodeType":"YulFunctionCall","src":"504:18:8"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"485:18:8"},"nodeType":"YulFunctionCall","src":"485:38:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"475:6:8"}]},{"nodeType":"YulAssignment","src":"532:42:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"559:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"570:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"555:3:8"},"nodeType":"YulFunctionCall","src":"555:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"542:12:8"},"nodeType":"YulFunctionCall","src":"542:32:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"532:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"583:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"614:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"625:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"610:3:8"},"nodeType":"YulFunctionCall","src":"610:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"597:12:8"},"nodeType":"YulFunctionCall","src":"597:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"587:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"638:28:8","value":{"kind":"number","nodeType":"YulLiteral","src":"648:18:8","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"642:2:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"693:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"702:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"705:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"695:6:8"},"nodeType":"YulFunctionCall","src":"695:12:8"},"nodeType":"YulExpressionStatement","src":"695:12:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"681:6:8"},{"name":"_1","nodeType":"YulIdentifier","src":"689:2:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"678:2:8"},"nodeType":"YulFunctionCall","src":"678:14:8"},"nodeType":"YulIf","src":"675:34:8"},{"nodeType":"YulVariableDeclaration","src":"718:32:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"732:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"743:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"728:3:8"},"nodeType":"YulFunctionCall","src":"728:22:8"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"722:2:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"798:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"807:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"810:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"800:6:8"},"nodeType":"YulFunctionCall","src":"800:12:8"},"nodeType":"YulExpressionStatement","src":"800:12:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"777:2:8"},{"kind":"number","nodeType":"YulLiteral","src":"781:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"773:3:8"},"nodeType":"YulFunctionCall","src":"773:13:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"788:7:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"769:3:8"},"nodeType":"YulFunctionCall","src":"769:27:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"762:6:8"},"nodeType":"YulFunctionCall","src":"762:35:8"},"nodeType":"YulIf","src":"759:55:8"},{"nodeType":"YulVariableDeclaration","src":"823:30:8","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"850:2:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"837:12:8"},"nodeType":"YulFunctionCall","src":"837:16:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"827:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"880:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"889:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"892:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"882:6:8"},"nodeType":"YulFunctionCall","src":"882:12:8"},"nodeType":"YulExpressionStatement","src":"882:12:8"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"868:6:8"},{"name":"_1","nodeType":"YulIdentifier","src":"876:2:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"865:2:8"},"nodeType":"YulFunctionCall","src":"865:14:8"},"nodeType":"YulIf","src":"862:34:8"},{"body":{"nodeType":"YulBlock","src":"946:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"955:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"958:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"948:6:8"},"nodeType":"YulFunctionCall","src":"948:12:8"},"nodeType":"YulExpressionStatement","src":"948:12:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"919:2:8"},{"name":"length","nodeType":"YulIdentifier","src":"923:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"915:3:8"},"nodeType":"YulFunctionCall","src":"915:15:8"},{"kind":"number","nodeType":"YulLiteral","src":"932:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"911:3:8"},"nodeType":"YulFunctionCall","src":"911:24:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"937:7:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"908:2:8"},"nodeType":"YulFunctionCall","src":"908:37:8"},"nodeType":"YulIf","src":"905:57:8"},{"nodeType":"YulAssignment","src":"971:21:8","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"985:2:8"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"981:3:8"},"nodeType":"YulFunctionCall","src":"981:11:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"971:6:8"}]},{"nodeType":"YulAssignment","src":"1001:16:8","value":{"name":"length","nodeType":"YulIdentifier","src":"1011:6:8"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1001:6:8"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"289:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"300:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"312:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"320:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"328:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"336:6:8","type":""},{"name":"value4","nodeType":"YulTypedName","src":"344:6:8","type":""}],"src":"215:808:8"},{"body":{"nodeType":"YulBlock","src":"1127:149:8","statements":[{"nodeType":"YulAssignment","src":"1137:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1149:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1160:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1145:3:8"},"nodeType":"YulFunctionCall","src":"1145:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1137:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1179:9:8"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1194:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"1202:66:8","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1190:3:8"},"nodeType":"YulFunctionCall","src":"1190:79:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1172:6:8"},"nodeType":"YulFunctionCall","src":"1172:98:8"},"nodeType":"YulExpressionStatement","src":"1172:98:8"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1096:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1107:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1118:4:8","type":""}],"src":"1028:248:8"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n}","id":8,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61006861003e3660046100c6565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200160405180910390f35b803573ffffffffffffffffffffffffffffffffffffffff811681146100c157600080fd5b919050565b6000806000806000608086880312156100de57600080fd5b6100e78661009d565b94506100f56020870161009d565b935060408601359250606086013567ffffffffffffffff8082111561011957600080fd5b818801915088601f83011261012d57600080fd5b81358181111561013c57600080fd5b89602082850101111561014e57600080fd5b969995985093965060200194939250505056fea26469706673582212201ab649adf42d0f0b8d1eb75b5663966bcae61b477a60566518201ca8ae1155af64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x68 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0xC6 JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 DUP7 PUSH2 0x9D JUMP JUMPDEST SWAP5 POP PUSH2 0xF5 PUSH1 0x20 DUP8 ADD PUSH2 0x9D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xB6 0x49 0xAD DELEGATECALL 0x2D 0xF SIGNEXTEND DUP14 0x1E 0xB7 JUMPDEST JUMP PUSH4 0x966BCAE6 SHL SELFBALANCE PUSH27 0x60566518201CA8AE1155AF64736F6C634300080900330000000000 ","sourceMap":"130:338:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;180:285;;;;;;:::i;:::-;369:17;180:285;;;;;;;;;;;1202:66:8;1190:79;;;1172:98;;1160:2;1145:18;180:285:3;;;;;;;14:196:8;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:808::-;312:6;320;328;336;344;397:3;385:9;376:7;372:23;368:33;365:53;;;414:1;411;404:12;365:53;437:29;456:9;437:29;:::i;:::-;427:39;;485:38;519:2;508:9;504:18;485:38;:::i;:::-;475:48;;570:2;559:9;555:18;542:32;532:42;;625:2;614:9;610:18;597:32;648:18;689:2;681:6;678:14;675:34;;;705:1;702;695:12;675:34;743:6;732:9;728:22;718:32;;788:7;781:4;777:2;773:13;769:27;759:55;;810:1;807;800:12;759:55;850:2;837:16;876:2;868:6;865:14;862:34;;;892:1;889;882:12;862:34;937:7;932:2;923:6;919:2;915:15;911:24;908:37;905:57;;;958:1;955;948:12;905:57;215:808;;;;-1:-1:-1;215:808:8;;-1:-1:-1;989:2:8;981:11;;1011:6;215:808;-1:-1:-1;;;215:808:8:o"},"gasEstimates":{"creation":{"codeDepositCost":"81400","executionCost":"129","totalCost":"81529"},"external":{"onERC721Received(address,address,uint256,bytes)":"infinite"}},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC721Receiver.sol\":\"ERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":50000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"contracts/ERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\\\";\\r\\n\\r\\ncontract ERC721Receiver is IERC721Receiver {\\r\\n    function onERC721Received(\\r\\n        address, //operator\\r\\n        address, //from\\r\\n        uint256, //tokenId\\r\\n        bytes calldata //data\\r\\n    ) external pure returns (bytes4) {\\r\\n        return 0x150b7a02; //bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe18c1e751f34a44eee18f507f9435fa9671018b633fdc1853de30bcfbe831b9c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IStrategy.sol":{"IStrategy":{"abi":[{"inputs":[],"name":"cheapWithdrawable","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"contractAddress","outputs":[{"internalType":"address","name":"contractAddress_","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentBalance","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposited","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"description_","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"name_","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenId","outputs":[{"internalType":"uint256","name":"tokenId_","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenType","outputs":[{"internalType":"enum TokenType","name":"tokenType_","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawable","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"yieldBox","outputs":[{"internalType":"contract IYieldBox","name":"yieldBox_","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"cheapWithdrawable()":"e3575f05","contractAddress()":"f6b4dfb4","currentBalance()":"ce845d1d","deposited(uint256)":"afa91cc6","description()":"7284e416","name()":"06fdde03","tokenId()":"17d70f7c","tokenType()":"30fa738c","withdraw(address,uint256)":"f3fef3a3","withdrawable()":"50188301","yieldBox()":"de406577"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"cheapWithdrawable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposited\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"description_\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenType\",\"outputs\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType_\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yieldBox\",\"outputs\":[{\"internalType\":\"contract IYieldBox\",\"name\":\"yieldBox_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cheapWithdrawable()\":{\"notice\":\"Returns the maximum amount that can be withdrawn for a low gas fee When more than this amount is withdrawn it will trigger divesting from the actual strategy which will incur higher gas costs\"},\"contractAddress()\":{\"notice\":\"Returns the contract address that this strategy works with\"},\"currentBalance()\":{\"notice\":\"Returns the total value the strategy holds (principle + gain) expressed in asset token amount. This should be cheap in gas to retrieve. Can return a bit less than the actual, but MUST NOT return more. The gas cost of this function will be paid on any deposit or withdrawal onto and out of the YieldBox that uses this strategy. Also, anytime a protocol converts between shares and amount, this gets called.\"},\"deposited(uint256)\":{\"notice\":\"Is called by YieldBox to signal funds have been added, the strategy may choose to act on this When a large enough deposit is made, this should trigger the strategy to invest into the actual strategy. This function should normally NOT be used to invest on each call as that would be costly for small deposits. If the strategy handles native tokens (ETH) it will receive it directly (not wrapped). It will be up to the strategy to wrap it if needed. Only accept this call from the YieldBox\"},\"description()\":{\"notice\":\"Returns a description for this strategy\"},\"name()\":{\"notice\":\"Returns a name for this strategy\"},\"tokenId()\":{\"notice\":\"Returns the tokenId that this strategy works with (for EIP1155) This is always 0 for EIP20 tokens\"},\"tokenType()\":{\"notice\":\"Returns the standard that this strategy works with\"},\"withdraw(address,uint256)\":{\"notice\":\"Is called by the YieldBox to ask the strategy to withdraw to the user When a strategy keeps a little reserve for cheap withdrawals and the requested withdrawal goes over this amount, the strategy should divest enough from the strategy to complete the withdrawal and rebalance the reserve. If the strategy handles native tokens (ETH) it should send this, not a wrapped version. With some strategies it might be hard to withdraw exactly the correct amount. Only accept this call from the YieldBox\"},\"withdrawable()\":{\"notice\":\"Returns the maximum amount that can be withdrawn\"},\"yieldBox()\":{\"notice\":\"Returns the address of the yieldBox that this strategy is for\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IStrategy.sol\":\"IStrategy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":50000},\"remappings\":[]},\"sources\":{\"contracts/enums/YieldBoxTokenType.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\n/// @title TokenType\\n/// @author BoringCrypto (@Boring_Crypto)\\n/// @notice The YieldBox can hold different types of tokens:\\n/// Native: These are ERC1155 tokens native to YieldBox. Protocols using YieldBox should use these is possible when simple token creation is needed.\\n/// ERC20: ERC20 tokens (including rebasing tokens) can be added to the YieldBox.\\n/// ERC1155: ERC1155 tokens are also supported. This can also be used to add YieldBox Native tokens to strategies since they are ERC1155 tokens.\\nenum TokenType {\\n    Native,\\n    ERC20,\\n    ERC721,\\n    ERC1155,\\n    None\\n}\\n\",\"keccak256\":\"0xc6adb740ff68d4162214dfa9d406422a066ae2197b7f0c8df5daa7c84b4a10aa\",\"license\":\"MIT\"},\"contracts/interfaces/IStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"../enums/YieldBoxTokenType.sol\\\";\\nimport \\\"./IYieldBox.sol\\\";\\n\\ninterface IStrategy {\\n    /// Each strategy only works with a single asset. This should help make implementations simpler and more readable.\\n    /// To safe gas a proxy pattern (YieldBox factory) could be used to deploy the same strategy for multiple tokens.\\n\\n    /// It is recommended that strategies keep a small amount of funds uninvested (like 5%) to handle small withdrawals\\n    /// and deposits without triggering costly investing/divesting logic.\\n\\n    /// #########################\\n    /// ### Basic Information ###\\n    /// #########################\\n\\n    /// Returns the address of the yieldBox that this strategy is for\\n    function yieldBox() external view returns (IYieldBox yieldBox_);\\n\\n    /// Returns a name for this strategy\\n    function name() external view returns (string memory name_);\\n\\n    /// Returns a description for this strategy\\n    function description() external view returns (string memory description_);\\n\\n    /// #######################\\n    /// ### Supported Token ###\\n    /// #######################\\n\\n    /// Returns the standard that this strategy works with\\n    function tokenType() external view returns (TokenType tokenType_);\\n\\n    /// Returns the contract address that this strategy works with\\n    function contractAddress() external view returns (address contractAddress_);\\n\\n    /// Returns the tokenId that this strategy works with (for EIP1155)\\n    /// This is always 0 for EIP20 tokens\\n    function tokenId() external view returns (uint256 tokenId_);\\n\\n    /// ###########################\\n    /// ### Balance Information ###\\n    /// ###########################\\n\\n    /// Returns the total value the strategy holds (principle + gain) expressed in asset token amount.\\n    /// This should be cheap in gas to retrieve. Can return a bit less than the actual, but MUST NOT return more.\\n    /// The gas cost of this function will be paid on any deposit or withdrawal onto and out of the YieldBox\\n    /// that uses this strategy. Also, anytime a protocol converts between shares and amount, this gets called.\\n    function currentBalance() external view returns (uint256 amount);\\n\\n    /// Returns the maximum amount that can be withdrawn\\n    function withdrawable() external view returns (uint256 amount);\\n\\n    /// Returns the maximum amount that can be withdrawn for a low gas fee\\n    /// When more than this amount is withdrawn it will trigger divesting from the actual strategy\\n    /// which will incur higher gas costs\\n    function cheapWithdrawable() external view returns (uint256 amount);\\n\\n    /// ##########################\\n    /// ### YieldBox Functions ###\\n    /// ##########################\\n\\n    /// Is called by YieldBox to signal funds have been added, the strategy may choose to act on this\\n    /// When a large enough deposit is made, this should trigger the strategy to invest into the actual\\n    /// strategy. This function should normally NOT be used to invest on each call as that would be costly\\n    /// for small deposits.\\n    /// If the strategy handles native tokens (ETH) it will receive it directly (not wrapped). It will be\\n    /// up to the strategy to wrap it if needed.\\n    /// Only accept this call from the YieldBox\\n    function deposited(uint256 amount) external;\\n\\n    /// Is called by the YieldBox to ask the strategy to withdraw to the user\\n    /// When a strategy keeps a little reserve for cheap withdrawals and the requested withdrawal goes over this amount,\\n    /// the strategy should divest enough from the strategy to complete the withdrawal and rebalance the reserve.\\n    /// If the strategy handles native tokens (ETH) it should send this, not a wrapped version.\\n    /// With some strategies it might be hard to withdraw exactly the correct amount.\\n    /// Only accept this call from the YieldBox\\n    function withdraw(address to, uint256 amount) external;\\n}\\n\\nIStrategy constant NO_STRATEGY = IStrategy(address(0));\\n\",\"keccak256\":\"0xfb1ac346da7d2e866af267af14b76b0813cf2853bea1ab0674a7c202a9536734\",\"license\":\"MIT\"},\"contracts/interfaces/IYieldBox.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"../enums/YieldBoxTokenType.sol\\\";\\n\\ninterface IYieldBox {\\n    function wrappedNative() external view returns (address wrappedNative);\\n\\n    function assets(uint256 assetId)\\n        external\\n        view\\n        returns (\\n            TokenType tokenType,\\n            address contractAddress,\\n            address strategy,\\n            uint256 tokenId\\n        );\\n\\n    function nativeTokens(uint256 assetId)\\n        external\\n        view\\n        returns (\\n            string memory name,\\n            string memory symbol,\\n            uint8 decimals\\n        );\\n\\n    function owner(uint256 assetId) external view returns (address owner);\\n\\n    function totalSupply(uint256 assetId) external view returns (uint256 totalSupply);\\n\\n    function depositAsset(\\n        uint256 assetId,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        uint256 share\\n    ) external returns (uint256 amountOut, uint256 shareOut);\\n\\n    function withdraw(\\n        uint256 assetId,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        uint256 share\\n    ) external returns (uint256 amountOut, uint256 shareOut);\\n\\n    function transfer(\\n        address from,\\n        address to,\\n        uint256 assetId,\\n        uint256 share\\n    ) external;\\n\\n    function batchTransfer(\\n        address from,\\n        address to,\\n        uint256[] calldata assetIds_,\\n        uint256[] calldata shares_\\n    ) external;\\n\\n    function transferMultiple(\\n        address from,\\n        address[] calldata tos,\\n        uint256 assetId,\\n        uint256[] calldata shares\\n    ) external;\\n\\n    function toShare(\\n        uint256 assetId,\\n        uint256 amount,\\n        bool roundUp\\n    ) external view returns (uint256 share);\\n\\n    function toAmount(\\n        uint256 assetId,\\n        uint256 share,\\n        bool roundUp\\n    ) external view returns (uint256 amount);\\n}\\n\",\"keccak256\":\"0x04c6451aab417a3a3eb1e9e0a2e86fc4d62f4d332712cbdea11979e5e516b52f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"cheapWithdrawable()":{"notice":"Returns the maximum amount that can be withdrawn for a low gas fee When more than this amount is withdrawn it will trigger divesting from the actual strategy which will incur higher gas costs"},"contractAddress()":{"notice":"Returns the contract address that this strategy works with"},"currentBalance()":{"notice":"Returns the total value the strategy holds (principle + gain) expressed in asset token amount. This should be cheap in gas to retrieve. Can return a bit less than the actual, but MUST NOT return more. The gas cost of this function will be paid on any deposit or withdrawal onto and out of the YieldBox that uses this strategy. Also, anytime a protocol converts between shares and amount, this gets called."},"deposited(uint256)":{"notice":"Is called by YieldBox to signal funds have been added, the strategy may choose to act on this When a large enough deposit is made, this should trigger the strategy to invest into the actual strategy. This function should normally NOT be used to invest on each call as that would be costly for small deposits. If the strategy handles native tokens (ETH) it will receive it directly (not wrapped). It will be up to the strategy to wrap it if needed. Only accept this call from the YieldBox"},"description()":{"notice":"Returns a description for this strategy"},"name()":{"notice":"Returns a name for this strategy"},"tokenId()":{"notice":"Returns the tokenId that this strategy works with (for EIP1155) This is always 0 for EIP20 tokens"},"tokenType()":{"notice":"Returns the standard that this strategy works with"},"withdraw(address,uint256)":{"notice":"Is called by the YieldBox to ask the strategy to withdraw to the user When a strategy keeps a little reserve for cheap withdrawals and the requested withdrawal goes over this amount, the strategy should divest enough from the strategy to complete the withdrawal and rebalance the reserve. If the strategy handles native tokens (ETH) it should send this, not a wrapped version. With some strategies it might be hard to withdraw exactly the correct amount. Only accept this call from the YieldBox"},"withdrawable()":{"notice":"Returns the maximum amount that can be withdrawn"},"yieldBox()":{"notice":"Returns the address of the yieldBox that this strategy is for"}},"version":1}}},"contracts/interfaces/IYieldBox.sol":{"IYieldBox":{"abi":[{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"}],"name":"assets","outputs":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"address","name":"strategy","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"assetIds_","type":"uint256[]"},{"internalType":"uint256[]","name":"shares_","type":"uint256[]"}],"name":"batchTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"share","type":"uint256"}],"name":"depositAsset","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"shareOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"}],"name":"nativeTokens","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"}],"name":"owner","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"share","type":"uint256"},{"internalType":"bool","name":"roundUp","type":"bool"}],"name":"toAmount","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bool","name":"roundUp","type":"bool"}],"name":"toShare","outputs":[{"internalType":"uint256","name":"share","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"totalSupply","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"share","type":"uint256"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address[]","name":"tos","type":"address[]"},{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256[]","name":"shares","type":"uint256[]"}],"name":"transferMultiple","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"share","type":"uint256"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"shareOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"wrappedNative","outputs":[{"internalType":"address","name":"wrappedNative","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"assets(uint256)":"cf35bdd0","batchTransfer(address,address,uint256[],uint256[])":"daf210b1","depositAsset(uint256,address,address,uint256,uint256)":"9a9af97a","nativeTokens(uint256)":"1f0ee4c3","owner(uint256)":"a123c33e","toAmount(uint256,uint256,bool)":"442c1599","toShare(uint256,uint256,bool)":"8eb22cdd","totalSupply(uint256)":"bd85b039","transfer(address,address,uint256,uint256)":"0411b252","transferMultiple(address,address[],uint256,uint256[])":"215b595a","withdraw(uint256,address,address,uint256,uint256)":"8d2e63b8","wrappedNative()":"eb6d3a11"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds_\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares_\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"depositAsset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shareOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"nativeTokens\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"roundUp\",\"type\":\"bool\"}],\"name\":\"toAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"roundUp\",\"type\":\"bool\"}],\"name\":\"toShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tos\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"name\":\"transferMultiple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shareOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedNative\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"wrappedNative\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IYieldBox.sol\":\"IYieldBox\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":50000},\"remappings\":[]},\"sources\":{\"contracts/enums/YieldBoxTokenType.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\n/// @title TokenType\\n/// @author BoringCrypto (@Boring_Crypto)\\n/// @notice The YieldBox can hold different types of tokens:\\n/// Native: These are ERC1155 tokens native to YieldBox. Protocols using YieldBox should use these is possible when simple token creation is needed.\\n/// ERC20: ERC20 tokens (including rebasing tokens) can be added to the YieldBox.\\n/// ERC1155: ERC1155 tokens are also supported. This can also be used to add YieldBox Native tokens to strategies since they are ERC1155 tokens.\\nenum TokenType {\\n    Native,\\n    ERC20,\\n    ERC721,\\n    ERC1155,\\n    None\\n}\\n\",\"keccak256\":\"0xc6adb740ff68d4162214dfa9d406422a066ae2197b7f0c8df5daa7c84b4a10aa\",\"license\":\"MIT\"},\"contracts/interfaces/IYieldBox.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"../enums/YieldBoxTokenType.sol\\\";\\n\\ninterface IYieldBox {\\n    function wrappedNative() external view returns (address wrappedNative);\\n\\n    function assets(uint256 assetId)\\n        external\\n        view\\n        returns (\\n            TokenType tokenType,\\n            address contractAddress,\\n            address strategy,\\n            uint256 tokenId\\n        );\\n\\n    function nativeTokens(uint256 assetId)\\n        external\\n        view\\n        returns (\\n            string memory name,\\n            string memory symbol,\\n            uint8 decimals\\n        );\\n\\n    function owner(uint256 assetId) external view returns (address owner);\\n\\n    function totalSupply(uint256 assetId) external view returns (uint256 totalSupply);\\n\\n    function depositAsset(\\n        uint256 assetId,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        uint256 share\\n    ) external returns (uint256 amountOut, uint256 shareOut);\\n\\n    function withdraw(\\n        uint256 assetId,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        uint256 share\\n    ) external returns (uint256 amountOut, uint256 shareOut);\\n\\n    function transfer(\\n        address from,\\n        address to,\\n        uint256 assetId,\\n        uint256 share\\n    ) external;\\n\\n    function batchTransfer(\\n        address from,\\n        address to,\\n        uint256[] calldata assetIds_,\\n        uint256[] calldata shares_\\n    ) external;\\n\\n    function transferMultiple(\\n        address from,\\n        address[] calldata tos,\\n        uint256 assetId,\\n        uint256[] calldata shares\\n    ) external;\\n\\n    function toShare(\\n        uint256 assetId,\\n        uint256 amount,\\n        bool roundUp\\n    ) external view returns (uint256 share);\\n\\n    function toAmount(\\n        uint256 assetId,\\n        uint256 share,\\n        bool roundUp\\n    ) external view returns (uint256 amount);\\n}\\n\",\"keccak256\":\"0x04c6451aab417a3a3eb1e9e0a2e86fc4d62f4d332712cbdea11979e5e516b52f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/mocks/ERC721StrategyMock.sol":{"ERC721StrategyMock":{"abi":[{"inputs":[{"internalType":"contract IYieldBox","name":"yieldBox_","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"tokenId_","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"cheapWithdrawable","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"contractAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentBalance","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposited","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"tokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenType","outputs":[{"internalType":"enum TokenType","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawable","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"yieldBox","outputs":[{"internalType":"contract IYieldBox","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_461":{"entryPoint":null,"id":461,"parameterSlots":3,"returnSlots":0},"abi_decode_tuple_t_contract$_IYieldBox_$402t_addresst_uint256_fromMemory":{"entryPoint":98,"id":null,"parameterSlots":2,"returnSlots":3},"validator_revert_contract_IYieldBox":{"entryPoint":74,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:648:8","statements":[{"nodeType":"YulBlock","src":"6:3:8","statements":[]},{"body":{"nodeType":"YulBlock","src":"70:86:8","statements":[{"body":{"nodeType":"YulBlock","src":"134:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"143:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"146:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"136:6:8"},"nodeType":"YulFunctionCall","src":"136:12:8"},"nodeType":"YulExpressionStatement","src":"136:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"104:5:8"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"119:3:8","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"124:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"115:3:8"},"nodeType":"YulFunctionCall","src":"115:11:8"},{"kind":"number","nodeType":"YulLiteral","src":"128:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"111:3:8"},"nodeType":"YulFunctionCall","src":"111:19:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"100:3:8"},"nodeType":"YulFunctionCall","src":"100:31:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"90:2:8"},"nodeType":"YulFunctionCall","src":"90:42:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"83:6:8"},"nodeType":"YulFunctionCall","src":"83:50:8"},"nodeType":"YulIf","src":"80:70:8"}]},"name":"validator_revert_contract_IYieldBox","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"59:5:8","type":""}],"src":"14:142:8"},{"body":{"nodeType":"YulBlock","src":"293:353:8","statements":[{"body":{"nodeType":"YulBlock","src":"339:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"348:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"351:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"341:6:8"},"nodeType":"YulFunctionCall","src":"341:12:8"},"nodeType":"YulExpressionStatement","src":"341:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"314:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"323:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"310:3:8"},"nodeType":"YulFunctionCall","src":"310:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"335:2:8","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"306:3:8"},"nodeType":"YulFunctionCall","src":"306:32:8"},"nodeType":"YulIf","src":"303:52:8"},{"nodeType":"YulVariableDeclaration","src":"364:29:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"383:9:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"377:5:8"},"nodeType":"YulFunctionCall","src":"377:16:8"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"368:5:8","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"438:5:8"}],"functionName":{"name":"validator_revert_contract_IYieldBox","nodeType":"YulIdentifier","src":"402:35:8"},"nodeType":"YulFunctionCall","src":"402:42:8"},"nodeType":"YulExpressionStatement","src":"402:42:8"},{"nodeType":"YulAssignment","src":"453:15:8","value":{"name":"value","nodeType":"YulIdentifier","src":"463:5:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"453:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"477:40:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"502:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"513:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:8"},"nodeType":"YulFunctionCall","src":"498:18:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"492:5:8"},"nodeType":"YulFunctionCall","src":"492:25:8"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"481:7:8","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"562:7:8"}],"functionName":{"name":"validator_revert_contract_IYieldBox","nodeType":"YulIdentifier","src":"526:35:8"},"nodeType":"YulFunctionCall","src":"526:44:8"},"nodeType":"YulExpressionStatement","src":"526:44:8"},{"nodeType":"YulAssignment","src":"579:17:8","value":{"name":"value_1","nodeType":"YulIdentifier","src":"589:7:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"579:6:8"}]},{"nodeType":"YulAssignment","src":"605:35:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"625:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"636:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"621:3:8"},"nodeType":"YulFunctionCall","src":"621:18:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"615:5:8"},"nodeType":"YulFunctionCall","src":"615:25:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"605:6:8"}]}]},"name":"abi_decode_tuple_t_contract$_IYieldBox_$402t_addresst_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"243:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"254:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"266:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"274:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"282:6:8","type":""}],"src":"161:485:8"}]},"contents":"{\n    { }\n    function validator_revert_contract_IYieldBox(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IYieldBox_$402t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IYieldBox(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_IYieldBox(value_1)\n        value1 := value_1\n        value2 := mload(add(headStart, 64))\n    }\n}","id":8,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60e060405234801561001057600080fd5b5060405161074438038061074483398101604081905261002f91610062565b6001600160a01b0392831660c052911660805260a0526100a5565b6001600160a01b038116811461005f57600080fd5b50565b60008060006060848603121561007757600080fd5b83516100828161004a565b60208501519093506100938161004a565b80925050604084015190509250925092565b60805160a05160c05161065b6100e9600039600061023a01526000818161019901526103cb015260008181610299015281816102ec01526103f1015261065b6000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063afa91cc611610081578063e3575f051161005b578063e3575f05146101de578063f3fef3a314610281578063f6b4dfb41461029457600080fd5b8063afa91cc614610222578063ce845d1d146101de578063de4065771461023557600080fd5b806330fa738c116100b257806330fa738c146101c957806350188301146101de5780637284e416146101e657600080fd5b806306fdde03146100d9578063150b7a021461012b57806317d70f7c14610194575b600080fd5b6101156040518060400160405280601281526020017f45524337323153747261746567794d6f636b000000000000000000000000000081525081565b6040516101229190610451565b60405180910390f35b6101636101393660046104ed565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610122565b6101bb7f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610122565b6101d1600281565b6040516101229190610588565b6101bb6102bb565b6101156040518060400160405280601981526020017f4d6f636b20537472617465677920666f722074657374696e670000000000000081525081565b6102336102303660046105c9565b50565b005b61025c7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610122565b61023361028f3660046105e2565b610380565b61025c7f000000000000000000000000000000000000000000000000000000000000000081565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b15801561034357600080fd5b505afa158015610357573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037b919061060c565b905090565b6040517f42842e0e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301527f000000000000000000000000000000000000000000000000000000000000000060448301527f000000000000000000000000000000000000000000000000000000000000000016906342842e0e90606401600060405180830381600087803b15801561043557600080fd5b505af1158015610449573d6000803e3d6000fd5b505050505050565b600060208083528351808285015260005b8181101561047e57858101830151858201604001528201610462565b81811115610490576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146104e857600080fd5b919050565b60008060008060006080868803121561050557600080fd5b61050e866104c4565b945061051c602087016104c4565b935060408601359250606086013567ffffffffffffffff8082111561054057600080fd5b818801915088601f83011261055457600080fd5b81358181111561056357600080fd5b89602082850101111561057557600080fd5b9699959850939650602001949392505050565b60208101600583106105c3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b6000602082840312156105db57600080fd5b5035919050565b600080604083850312156105f557600080fd5b6105fe836104c4565b946020939093013593505050565b60006020828403121561061e57600080fd5b505191905056fea2646970667358221220ae0848d26414166eef4fc64367ef158c8429835db9036f0eb996355a4b0ae5bb64736f6c63430008090033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x744 CODESIZE SUB DUP1 PUSH2 0x744 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x62 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0xC0 MSTORE SWAP2 AND PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE PUSH2 0xA5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x82 DUP2 PUSH2 0x4A JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x93 DUP2 PUSH2 0x4A JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x65B PUSH2 0xE9 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x23A ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x199 ADD MSTORE PUSH2 0x3CB ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x299 ADD MSTORE DUP2 DUP2 PUSH2 0x2EC ADD MSTORE PUSH2 0x3F1 ADD MSTORE PUSH2 0x65B PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAFA91CC6 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xE3575F05 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xE3575F05 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xF6B4DFB4 EQ PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAFA91CC6 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xCE845D1D EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xDE406577 EQ PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30FA738C GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x30FA738C EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x50188301 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x7284E416 EQ PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x17D70F7C EQ PUSH2 0x194 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45524337323153747261746567794D6F636B0000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x139 CALLDATASIZE PUSH1 0x4 PUSH2 0x4ED JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x122 JUMP JUMPDEST PUSH2 0x1BB PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x122 JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x588 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x2BB JUMP JUMPDEST PUSH2 0x115 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D6F636B20537472617465677920666F722074657374696E6700000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0x5C9 JUMP JUMPDEST POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25C PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x122 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x380 JUMP JUMPDEST PUSH2 0x25C PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x357 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x60C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x42842E0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 PUSH1 0x44 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x449 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x47E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x462 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x4E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x50E DUP7 PUSH2 0x4C4 JUMP JUMPDEST SWAP5 POP PUSH2 0x51C PUSH1 0x20 DUP8 ADD PUSH2 0x4C4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x5 DUP4 LT PUSH2 0x5C3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5FE DUP4 PUSH2 0x4C4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE ADDMOD BASEFEE 0xD2 PUSH5 0x14166EEF4F 0xC6 NUMBER PUSH8 0xEF158C8429835DB9 SUB PUSH16 0xEB996355A4B0AE5BB64736F6C634300 ADDMOD MULMOD STOP CALLER ","sourceMap":"390:2779:7:-:0;;;831:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;908:20:7;;;;;939:23;;;;973:18;;390:2779;;14:142:8;-1:-1:-1;;;;;100:31:8;;90:42;;80:70;;146:1;143;136:12;80:70;14:142;:::o;161:485::-;266:6;274;282;335:2;323:9;314:7;310:23;306:32;303:52;;;351:1;348;341:12;303:52;383:9;377:16;402:42;438:5;402:42;:::i;:::-;513:2;498:18;;492:25;463:5;;-1:-1:-1;526:44:8;492:25;526:44;:::i;:::-;589:7;579:17;;;636:2;625:9;621:18;615:25;605:35;;161:485;;;;;:::o;:::-;390:2779:7;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@cheapWithdrawable_515":{"entryPoint":null,"id":515,"parameterSlots":0,"returnSlots":1},"@contractAddress_431":{"entryPoint":null,"id":431,"parameterSlots":0,"returnSlots":0},"@currentBalance_479":{"entryPoint":null,"id":479,"parameterSlots":0,"returnSlots":1},"@deposited_523":{"entryPoint":null,"id":523,"parameterSlots":1,"returnSlots":0},"@description_422":{"entryPoint":null,"id":422,"parameterSlots":0,"returnSlots":0},"@name_418":{"entryPoint":null,"id":418,"parameterSlots":0,"returnSlots":0},"@onERC721Received_166":{"entryPoint":null,"id":166,"parameterSlots":5,"returnSlots":1},"@tokenId_434":{"entryPoint":null,"id":434,"parameterSlots":0,"returnSlots":0},"@tokenType_428":{"entryPoint":null,"id":428,"parameterSlots":0,"returnSlots":0},"@withdraw_545":{"entryPoint":896,"id":545,"parameterSlots":2,"returnSlots":0},"@withdrawable_497":{"entryPoint":699,"id":497,"parameterSlots":0,"returnSlots":1},"@yieldBox_438":{"entryPoint":null,"id":438,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":1220,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":1261,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1506,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":1481,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":1548,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IYieldBox_$402__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_TokenType_$175__to_t_uint8__fromStack_reversed":{"entryPoint":1416,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1105,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4039:8","statements":[{"nodeType":"YulBlock","src":"6:3:8","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:535:8","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:8","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:8","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:8","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:8"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:8"},"nodeType":"YulFunctionCall","src":"166:21:8"},"nodeType":"YulExpressionStatement","src":"166:21:8"},{"nodeType":"YulVariableDeclaration","src":"196:27:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:8"},"nodeType":"YulFunctionCall","src":"210:13:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:8"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:8"},"nodeType":"YulFunctionCall","src":"239:18:8"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:8"},"nodeType":"YulFunctionCall","src":"232:34:8"},"nodeType":"YulExpressionStatement","src":"232:34:8"},{"nodeType":"YulVariableDeclaration","src":"275:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:8","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:8"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:8"},"nodeType":"YulFunctionCall","src":"369:17:8"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:8"},"nodeType":"YulFunctionCall","src":"365:26:8"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:8"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:8"},"nodeType":"YulFunctionCall","src":"403:14:8"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:8"},"nodeType":"YulFunctionCall","src":"399:23:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:8"},"nodeType":"YulFunctionCall","src":"393:30:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:8"},"nodeType":"YulFunctionCall","src":"358:66:8"},"nodeType":"YulExpressionStatement","src":"358:66:8"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:8"},"nodeType":"YulFunctionCall","src":"302:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:8","statements":[{"nodeType":"YulAssignment","src":"318:15:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:8"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:8"},"nodeType":"YulFunctionCall","src":"323:10:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:8","statements":[]},"src":"294:140:8"},{"body":{"nodeType":"YulBlock","src":"468:66:8","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"497:9:8"},{"name":"length","nodeType":"YulIdentifier","src":"508:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"493:3:8"},"nodeType":"YulFunctionCall","src":"493:22:8"},{"kind":"number","nodeType":"YulLiteral","src":"517:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"489:3:8"},"nodeType":"YulFunctionCall","src":"489:31:8"},{"kind":"number","nodeType":"YulLiteral","src":"522:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"482:6:8"},"nodeType":"YulFunctionCall","src":"482:42:8"},"nodeType":"YulExpressionStatement","src":"482:42:8"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"449:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"452:6:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"446:2:8"},"nodeType":"YulFunctionCall","src":"446:13:8"},"nodeType":"YulIf","src":"443:91:8"},{"nodeType":"YulAssignment","src":"543:121:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"559:9:8"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"578:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"586:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"574:3:8"},"nodeType":"YulFunctionCall","src":"574:15:8"},{"kind":"number","nodeType":"YulLiteral","src":"591:66:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"570:3:8"},"nodeType":"YulFunctionCall","src":"570:88:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"555:3:8"},"nodeType":"YulFunctionCall","src":"555:104:8"},{"kind":"number","nodeType":"YulLiteral","src":"661:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"551:3:8"},"nodeType":"YulFunctionCall","src":"551:113:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"543:4:8"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:8","type":""}],"src":"14:656:8"},{"body":{"nodeType":"YulBlock","src":"724:147:8","statements":[{"nodeType":"YulAssignment","src":"734:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"756:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"743:12:8"},"nodeType":"YulFunctionCall","src":"743:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"734:5:8"}]},{"body":{"nodeType":"YulBlock","src":"849:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"858:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"861:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"851:6:8"},"nodeType":"YulFunctionCall","src":"851:12:8"},"nodeType":"YulExpressionStatement","src":"851:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"785:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"803:42:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"792:3:8"},"nodeType":"YulFunctionCall","src":"792:54:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"782:2:8"},"nodeType":"YulFunctionCall","src":"782:65:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"775:6:8"},"nodeType":"YulFunctionCall","src":"775:73:8"},"nodeType":"YulIf","src":"772:93:8"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"703:6:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"714:5:8","type":""}],"src":"675:196:8"},{"body":{"nodeType":"YulBlock","src":"1016:668:8","statements":[{"body":{"nodeType":"YulBlock","src":"1063:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1072:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1075:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1065:6:8"},"nodeType":"YulFunctionCall","src":"1065:12:8"},"nodeType":"YulExpressionStatement","src":"1065:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1037:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"1046:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1033:3:8"},"nodeType":"YulFunctionCall","src":"1033:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"1058:3:8","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1029:3:8"},"nodeType":"YulFunctionCall","src":"1029:33:8"},"nodeType":"YulIf","src":"1026:53:8"},{"nodeType":"YulAssignment","src":"1088:39:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1117:9:8"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1098:18:8"},"nodeType":"YulFunctionCall","src":"1098:29:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1088:6:8"}]},{"nodeType":"YulAssignment","src":"1136:48:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1169:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1180:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1165:3:8"},"nodeType":"YulFunctionCall","src":"1165:18:8"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1146:18:8"},"nodeType":"YulFunctionCall","src":"1146:38:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1136:6:8"}]},{"nodeType":"YulAssignment","src":"1193:42:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1220:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1231:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1216:3:8"},"nodeType":"YulFunctionCall","src":"1216:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1203:12:8"},"nodeType":"YulFunctionCall","src":"1203:32:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1193:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"1244:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1275:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1286:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1271:3:8"},"nodeType":"YulFunctionCall","src":"1271:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1258:12:8"},"nodeType":"YulFunctionCall","src":"1258:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1248:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:28:8","value":{"kind":"number","nodeType":"YulLiteral","src":"1309:18:8","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1303:2:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"1354:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1363:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1366:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1356:6:8"},"nodeType":"YulFunctionCall","src":"1356:12:8"},"nodeType":"YulExpressionStatement","src":"1356:12:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1342:6:8"},{"name":"_1","nodeType":"YulIdentifier","src":"1350:2:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1339:2:8"},"nodeType":"YulFunctionCall","src":"1339:14:8"},"nodeType":"YulIf","src":"1336:34:8"},{"nodeType":"YulVariableDeclaration","src":"1379:32:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1393:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"1404:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1389:3:8"},"nodeType":"YulFunctionCall","src":"1389:22:8"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1383:2:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"1459:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1468:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1471:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1461:6:8"},"nodeType":"YulFunctionCall","src":"1461:12:8"},"nodeType":"YulExpressionStatement","src":"1461:12:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1438:2:8"},{"kind":"number","nodeType":"YulLiteral","src":"1442:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1434:3:8"},"nodeType":"YulFunctionCall","src":"1434:13:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1449:7:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1430:3:8"},"nodeType":"YulFunctionCall","src":"1430:27:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1423:6:8"},"nodeType":"YulFunctionCall","src":"1423:35:8"},"nodeType":"YulIf","src":"1420:55:8"},{"nodeType":"YulVariableDeclaration","src":"1484:30:8","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1511:2:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1498:12:8"},"nodeType":"YulFunctionCall","src":"1498:16:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1488:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"1541:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1550:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1553:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1543:6:8"},"nodeType":"YulFunctionCall","src":"1543:12:8"},"nodeType":"YulExpressionStatement","src":"1543:12:8"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1529:6:8"},{"name":"_1","nodeType":"YulIdentifier","src":"1537:2:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1526:2:8"},"nodeType":"YulFunctionCall","src":"1526:14:8"},"nodeType":"YulIf","src":"1523:34:8"},{"body":{"nodeType":"YulBlock","src":"1607:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1616:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1619:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1609:6:8"},"nodeType":"YulFunctionCall","src":"1609:12:8"},"nodeType":"YulExpressionStatement","src":"1609:12:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1580:2:8"},{"name":"length","nodeType":"YulIdentifier","src":"1584:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1576:3:8"},"nodeType":"YulFunctionCall","src":"1576:15:8"},{"kind":"number","nodeType":"YulLiteral","src":"1593:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1572:3:8"},"nodeType":"YulFunctionCall","src":"1572:24:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1598:7:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1569:2:8"},"nodeType":"YulFunctionCall","src":"1569:37:8"},"nodeType":"YulIf","src":"1566:57:8"},{"nodeType":"YulAssignment","src":"1632:21:8","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1646:2:8"},{"kind":"number","nodeType":"YulLiteral","src":"1650:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1642:3:8"},"nodeType":"YulFunctionCall","src":"1642:11:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1632:6:8"}]},{"nodeType":"YulAssignment","src":"1662:16:8","value":{"name":"length","nodeType":"YulIdentifier","src":"1672:6:8"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1662:6:8"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"950:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"961:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"973:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"981:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"989:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"997:6:8","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1005:6:8","type":""}],"src":"876:808:8"},{"body":{"nodeType":"YulBlock","src":"1788:149:8","statements":[{"nodeType":"YulAssignment","src":"1798:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1810:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1821:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1806:3:8"},"nodeType":"YulFunctionCall","src":"1806:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1798:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1840:9:8"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1855:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"1863:66:8","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1851:3:8"},"nodeType":"YulFunctionCall","src":"1851:79:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1833:6:8"},"nodeType":"YulFunctionCall","src":"1833:98:8"},"nodeType":"YulExpressionStatement","src":"1833:98:8"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1757:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1768:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1779:4:8","type":""}],"src":"1689:248:8"},{"body":{"nodeType":"YulBlock","src":"2043:76:8","statements":[{"nodeType":"YulAssignment","src":"2053:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2065:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2076:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2061:3:8"},"nodeType":"YulFunctionCall","src":"2061:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2053:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2095:9:8"},{"name":"value0","nodeType":"YulIdentifier","src":"2106:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2088:6:8"},"nodeType":"YulFunctionCall","src":"2088:25:8"},"nodeType":"YulExpressionStatement","src":"2088:25:8"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2012:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2023:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2034:4:8","type":""}],"src":"1942:177:8"},{"body":{"nodeType":"YulBlock","src":"2236:286:8","statements":[{"nodeType":"YulAssignment","src":"2246:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2258:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2269:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2254:3:8"},"nodeType":"YulFunctionCall","src":"2254:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2246:4:8"}]},{"body":{"nodeType":"YulBlock","src":"2314:168:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2335:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2338:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2328:6:8"},"nodeType":"YulFunctionCall","src":"2328:88:8"},"nodeType":"YulExpressionStatement","src":"2328:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2436:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2439:4:8","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2429:6:8"},"nodeType":"YulFunctionCall","src":"2429:15:8"},"nodeType":"YulExpressionStatement","src":"2429:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2464:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2467:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2457:6:8"},"nodeType":"YulFunctionCall","src":"2457:15:8"},"nodeType":"YulExpressionStatement","src":"2457:15:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2294:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2302:1:8","type":"","value":"5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2291:2:8"},"nodeType":"YulFunctionCall","src":"2291:13:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2284:6:8"},"nodeType":"YulFunctionCall","src":"2284:21:8"},"nodeType":"YulIf","src":"2281:201:8"},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2498:9:8"},{"name":"value0","nodeType":"YulIdentifier","src":"2509:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2491:6:8"},"nodeType":"YulFunctionCall","src":"2491:25:8"},"nodeType":"YulExpressionStatement","src":"2491:25:8"}]},"name":"abi_encode_tuple_t_enum$_TokenType_$175__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2205:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2216:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2227:4:8","type":""}],"src":"2124:398:8"},{"body":{"nodeType":"YulBlock","src":"2597:110:8","statements":[{"body":{"nodeType":"YulBlock","src":"2643:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2652:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2655:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2645:6:8"},"nodeType":"YulFunctionCall","src":"2645:12:8"},"nodeType":"YulExpressionStatement","src":"2645:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2618:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"2627:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2614:3:8"},"nodeType":"YulFunctionCall","src":"2614:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"2639:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2610:3:8"},"nodeType":"YulFunctionCall","src":"2610:32:8"},"nodeType":"YulIf","src":"2607:52:8"},{"nodeType":"YulAssignment","src":"2668:33:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2691:9:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2678:12:8"},"nodeType":"YulFunctionCall","src":"2678:23:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2668:6:8"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2563:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2574:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2586:6:8","type":""}],"src":"2527:180:8"},{"body":{"nodeType":"YulBlock","src":"2830:125:8","statements":[{"nodeType":"YulAssignment","src":"2840:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2852:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2863:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2848:3:8"},"nodeType":"YulFunctionCall","src":"2848:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2840:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2882:9:8"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2897:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2905:42:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2893:3:8"},"nodeType":"YulFunctionCall","src":"2893:55:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2875:6:8"},"nodeType":"YulFunctionCall","src":"2875:74:8"},"nodeType":"YulExpressionStatement","src":"2875:74:8"}]},"name":"abi_encode_tuple_t_contract$_IYieldBox_$402__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2799:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2810:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2821:4:8","type":""}],"src":"2712:243:8"},{"body":{"nodeType":"YulBlock","src":"3047:167:8","statements":[{"body":{"nodeType":"YulBlock","src":"3093:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3102:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3105:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3095:6:8"},"nodeType":"YulFunctionCall","src":"3095:12:8"},"nodeType":"YulExpressionStatement","src":"3095:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3068:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"3077:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3064:3:8"},"nodeType":"YulFunctionCall","src":"3064:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3060:3:8"},"nodeType":"YulFunctionCall","src":"3060:32:8"},"nodeType":"YulIf","src":"3057:52:8"},{"nodeType":"YulAssignment","src":"3118:39:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3147:9:8"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3128:18:8"},"nodeType":"YulFunctionCall","src":"3128:29:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3118:6:8"}]},{"nodeType":"YulAssignment","src":"3166:42:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3193:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3204:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3189:3:8"},"nodeType":"YulFunctionCall","src":"3189:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3176:12:8"},"nodeType":"YulFunctionCall","src":"3176:32:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3166:6:8"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3005:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3016:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3028:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3036:6:8","type":""}],"src":"2960:254:8"},{"body":{"nodeType":"YulBlock","src":"3320:125:8","statements":[{"nodeType":"YulAssignment","src":"3330:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3342:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3353:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3338:3:8"},"nodeType":"YulFunctionCall","src":"3338:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3330:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3372:9:8"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3387:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3395:42:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3383:3:8"},"nodeType":"YulFunctionCall","src":"3383:55:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3365:6:8"},"nodeType":"YulFunctionCall","src":"3365:74:8"},"nodeType":"YulExpressionStatement","src":"3365:74:8"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3289:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3300:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3311:4:8","type":""}],"src":"3219:226:8"},{"body":{"nodeType":"YulBlock","src":"3531:103:8","statements":[{"body":{"nodeType":"YulBlock","src":"3577:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3586:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3589:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3579:6:8"},"nodeType":"YulFunctionCall","src":"3579:12:8"},"nodeType":"YulExpressionStatement","src":"3579:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3552:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"3561:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3548:3:8"},"nodeType":"YulFunctionCall","src":"3548:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"3573:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3544:3:8"},"nodeType":"YulFunctionCall","src":"3544:32:8"},"nodeType":"YulIf","src":"3541:52:8"},{"nodeType":"YulAssignment","src":"3602:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3618:9:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3612:5:8"},"nodeType":"YulFunctionCall","src":"3612:16:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3602:6:8"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3497:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3508:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3520:6:8","type":""}],"src":"3450:184:8"},{"body":{"nodeType":"YulBlock","src":"3796:241:8","statements":[{"nodeType":"YulAssignment","src":"3806:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3818:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3829:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3814:3:8"},"nodeType":"YulFunctionCall","src":"3814:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3806:4:8"}]},{"nodeType":"YulVariableDeclaration","src":"3841:52:8","value":{"kind":"number","nodeType":"YulLiteral","src":"3851:42:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3845:2:8","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3909:9:8"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3924:6:8"},{"name":"_1","nodeType":"YulIdentifier","src":"3932:2:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3920:3:8"},"nodeType":"YulFunctionCall","src":"3920:15:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3902:6:8"},"nodeType":"YulFunctionCall","src":"3902:34:8"},"nodeType":"YulExpressionStatement","src":"3902:34:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3956:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3967:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3952:3:8"},"nodeType":"YulFunctionCall","src":"3952:18:8"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3976:6:8"},{"name":"_1","nodeType":"YulIdentifier","src":"3984:2:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3972:3:8"},"nodeType":"YulFunctionCall","src":"3972:15:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3945:6:8"},"nodeType":"YulFunctionCall","src":"3945:43:8"},"nodeType":"YulExpressionStatement","src":"3945:43:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4008:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4019:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4004:3:8"},"nodeType":"YulFunctionCall","src":"4004:18:8"},{"name":"value2","nodeType":"YulIdentifier","src":"4024:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3997:6:8"},"nodeType":"YulFunctionCall","src":"3997:34:8"},"nodeType":"YulExpressionStatement","src":"3997:34:8"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3749:9:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3760:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3768:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3776:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3787:4:8","type":""}],"src":"3639:398:8"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_enum$_TokenType_$175__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 5))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IYieldBox_$402__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n}","id":8,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"431":[{"length":32,"start":665},{"length":32,"start":748},{"length":32,"start":1009}],"434":[{"length":32,"start":409},{"length":32,"start":971}],"438":[{"length":32,"start":570}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100d45760003560e01c8063afa91cc611610081578063e3575f051161005b578063e3575f05146101de578063f3fef3a314610281578063f6b4dfb41461029457600080fd5b8063afa91cc614610222578063ce845d1d146101de578063de4065771461023557600080fd5b806330fa738c116100b257806330fa738c146101c957806350188301146101de5780637284e416146101e657600080fd5b806306fdde03146100d9578063150b7a021461012b57806317d70f7c14610194575b600080fd5b6101156040518060400160405280601281526020017f45524337323153747261746567794d6f636b000000000000000000000000000081525081565b6040516101229190610451565b60405180910390f35b6101636101393660046104ed565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610122565b6101bb7f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610122565b6101d1600281565b6040516101229190610588565b6101bb6102bb565b6101156040518060400160405280601981526020017f4d6f636b20537472617465677920666f722074657374696e670000000000000081525081565b6102336102303660046105c9565b50565b005b61025c7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610122565b61023361028f3660046105e2565b610380565b61025c7f000000000000000000000000000000000000000000000000000000000000000081565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b15801561034357600080fd5b505afa158015610357573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037b919061060c565b905090565b6040517f42842e0e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301527f000000000000000000000000000000000000000000000000000000000000000060448301527f000000000000000000000000000000000000000000000000000000000000000016906342842e0e90606401600060405180830381600087803b15801561043557600080fd5b505af1158015610449573d6000803e3d6000fd5b505050505050565b600060208083528351808285015260005b8181101561047e57858101830151858201604001528201610462565b81811115610490576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146104e857600080fd5b919050565b60008060008060006080868803121561050557600080fd5b61050e866104c4565b945061051c602087016104c4565b935060408601359250606086013567ffffffffffffffff8082111561054057600080fd5b818801915088601f83011261055457600080fd5b81358181111561056357600080fd5b89602082850101111561057557600080fd5b9699959850939650602001949392505050565b60208101600583106105c3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b6000602082840312156105db57600080fd5b5035919050565b600080604083850312156105f557600080fd5b6105fe836104c4565b946020939093013593505050565b60006020828403121561061e57600080fd5b505191905056fea2646970667358221220ae0848d26414166eef4fc64367ef158c8429835db9036f0eb996355a4b0ae5bb64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAFA91CC6 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xE3575F05 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xE3575F05 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xF6B4DFB4 EQ PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAFA91CC6 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xCE845D1D EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xDE406577 EQ PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30FA738C GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x30FA738C EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x50188301 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x7284E416 EQ PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x17D70F7C EQ PUSH2 0x194 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45524337323153747261746567794D6F636B0000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x139 CALLDATASIZE PUSH1 0x4 PUSH2 0x4ED JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x122 JUMP JUMPDEST PUSH2 0x1BB PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x122 JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x588 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x2BB JUMP JUMPDEST PUSH2 0x115 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D6F636B20537472617465677920666F722074657374696E6700000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0x5C9 JUMP JUMPDEST POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25C PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x122 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x380 JUMP JUMPDEST PUSH2 0x25C PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x357 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x60C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x42842E0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 PUSH1 0x44 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x449 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x47E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x462 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x4E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x50E DUP7 PUSH2 0x4C4 JUMP JUMPDEST SWAP5 POP PUSH2 0x51C PUSH1 0x20 DUP8 ADD PUSH2 0x4C4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x5 DUP4 LT PUSH2 0x5C3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5FE DUP4 PUSH2 0x4C4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE ADDMOD BASEFEE 0xD2 PUSH5 0x14166EEF4F 0xC6 NUMBER PUSH8 0xEF158C8429835DB9 SUB PUSH16 0xEB996355A4B0AE5BB64736F6C634300 ADDMOD MULMOD STOP CALLER ","sourceMap":"390:2779:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;454:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;180:285:3;;;;;;:::i;:::-;369:17;180:285;;;;;;;;;;;1863:66:8;1851:79;;;1833:98;;1821:2;1806:18;180:285:3;1689:248:8;728:41:7;;;;;;;;2088:25:8;;;2076:2;2061:18;728:41:7;1942:177:8;602:63:7;;649:16;602:63;;;;;;;;;:::i;1663:147::-;;;:::i;520:73::-;;;;;;;;;;;;;;;;;;;;;2591:55;;;;;;:::i;:::-;;;;;778:44;;;;;;;;2905:42:8;2893:55;;;2875:74;;2863:2;2848:18;778:44:7;2712:243:8;3019:147:7;;;;;;:::i;:::-;;:::i;672:49::-;;;;;1663:147;1753:49;;;;;1796:4;1753:49;;;2875:74:8;1719:14:7;;1761:15;1753:34;;;;;2848:18:8;;1753:49:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1746:56;;1663:147;:::o;3019:::-;3087:69;;;;;3137:4;3087:69;;;3902:34:8;3087:41:7;3972:15:8;;;3952:18;;;3945:43;3148:7:7;4004:18:8;;;3997:34;3095:15:7;3087:41;;;;3814:18:8;;3087:69:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3019:147;;:::o;14:656:8:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;586:2:8;574:15;591:66;570:88;555:104;;;;661:2;551:113;;14:656;-1:-1:-1;;;14:656:8:o;675:196::-;743:20;;803:42;792:54;;782:65;;772:93;;861:1;858;851:12;772:93;675:196;;;:::o;876:808::-;973:6;981;989;997;1005;1058:3;1046:9;1037:7;1033:23;1029:33;1026:53;;;1075:1;1072;1065:12;1026:53;1098:29;1117:9;1098:29;:::i;:::-;1088:39;;1146:38;1180:2;1169:9;1165:18;1146:38;:::i;:::-;1136:48;;1231:2;1220:9;1216:18;1203:32;1193:42;;1286:2;1275:9;1271:18;1258:32;1309:18;1350:2;1342:6;1339:14;1336:34;;;1366:1;1363;1356:12;1336:34;1404:6;1393:9;1389:22;1379:32;;1449:7;1442:4;1438:2;1434:13;1430:27;1420:55;;1471:1;1468;1461:12;1420:55;1511:2;1498:16;1537:2;1529:6;1526:14;1523:34;;;1553:1;1550;1543:12;1523:34;1598:7;1593:2;1584:6;1580:2;1576:15;1572:24;1569:37;1566:57;;;1619:1;1616;1609:12;1566:57;876:808;;;;-1:-1:-1;876:808:8;;-1:-1:-1;1650:2:8;1642:11;;1672:6;876:808;-1:-1:-1;;;876:808:8:o;2124:398::-;2269:2;2254:18;;2302:1;2291:13;;2281:201;;2338:77;2335:1;2328:88;2439:4;2436:1;2429:15;2467:4;2464:1;2457:15;2281:201;2491:25;;;2124:398;:::o;2527:180::-;2586:6;2639:2;2627:9;2618:7;2614:23;2610:32;2607:52;;;2655:1;2652;2645:12;2607:52;-1:-1:-1;2678:23:8;;2527:180;-1:-1:-1;2527:180:8:o;2960:254::-;3028:6;3036;3089:2;3077:9;3068:7;3064:23;3060:32;3057:52;;;3105:1;3102;3095:12;3057:52;3128:29;3147:9;3128:29;:::i;:::-;3118:39;3204:2;3189:18;;;;3176:32;;-1:-1:-1;;;2960:254:8:o;3450:184::-;3520:6;3573:2;3561:9;3552:7;3548:23;3544:32;3541:52;;;3589:1;3586;3579:12;3541:52;-1:-1:-1;3612:16:8;;3450:184;-1:-1:-1;3450:184:8:o"},"gasEstimates":{"creation":{"codeDepositCost":"325400","executionCost":"infinite","totalCost":"infinite"},"external":{"cheapWithdrawable()":"infinite","contractAddress()":"infinite","currentBalance()":"infinite","deposited(uint256)":"234","description()":"infinite","name()":"infinite","onERC721Received(address,address,uint256,bytes)":"infinite","tokenId()":"infinite","tokenType()":"265","withdraw(address,uint256)":"infinite","withdrawable()":"infinite","yieldBox()":"infinite"}},"methodIdentifiers":{"cheapWithdrawable()":"e3575f05","contractAddress()":"f6b4dfb4","currentBalance()":"ce845d1d","deposited(uint256)":"afa91cc6","description()":"7284e416","name()":"06fdde03","onERC721Received(address,address,uint256,bytes)":"150b7a02","tokenId()":"17d70f7c","tokenType()":"30fa738c","withdraw(address,uint256)":"f3fef3a3","withdrawable()":"50188301","yieldBox()":"de406577"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IYieldBox\",\"name\":\"yieldBox_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"cheapWithdrawable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposited\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenType\",\"outputs\":[{\"internalType\":\"enum TokenType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yieldBox\",\"outputs\":[{\"internalType\":\"contract IYieldBox\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cheapWithdrawable()\":{\"notice\":\"Returns the maximum amount that can be withdrawn for a low gas fee When more than this amount is withdrawn it will trigger divesting from the actual strategy which will incur higher gas costs\"},\"contractAddress()\":{\"notice\":\"Returns the contract address that this strategy works with\"},\"currentBalance()\":{\"notice\":\"Returns the total value the strategy holds (principle + gain) expressed in asset token amount. This should be cheap in gas to retrieve. Can return a bit less than the actual, but shouldn't return more. The gas cost of this function will be paid on any deposit or withdrawal onto and out of the YieldBox that uses this strategy. Also, anytime a protocol converts between shares and amount, this gets called.\"},\"deposited(uint256)\":{\"notice\":\"Is called by YieldBox to signal funds have been added, the strategy may choose to act on this When a large enough deposit is made, this should trigger the strategy to invest into the actual strategy. This function should normally NOT be used to invest on each call as that would be costly for small deposits. Only accept this call from the YieldBox\"},\"description()\":{\"notice\":\"Returns a description for this strategy\"},\"name()\":{\"notice\":\"Returns a name for this strategy\"},\"tokenId()\":{\"notice\":\"Returns the tokenId that this strategy works with (for EIP1155) This is always 0 for EIP20 tokens\"},\"tokenType()\":{\"notice\":\"Returns the standard that this strategy works with\"},\"withdraw(address,uint256)\":{\"notice\":\"Is called by the YieldBox to ask the strategy to withdraw to the user When a strategy keeps a little reserve for cheap withdrawals and the requested withdrawal goes over this amount, the strategy should divest enough from the strategy to complete the withdrawal and rebalance the reserve. Only accept this call from the YieldBox\"},\"withdrawable()\":{\"notice\":\"Returns the maximum amount that can be withdrawn\"},\"yieldBox()\":{\"notice\":\"Returns the address of the yieldBox that this strategy is for\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/ERC721StrategyMock.sol\":\"ERC721StrategyMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":50000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/ERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\\\";\\r\\n\\r\\ncontract ERC721Receiver is IERC721Receiver {\\r\\n    function onERC721Received(\\r\\n        address, //operator\\r\\n        address, //from\\r\\n        uint256, //tokenId\\r\\n        bytes calldata //data\\r\\n    ) external pure returns (bytes4) {\\r\\n        return 0x150b7a02; //bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe18c1e751f34a44eee18f507f9435fa9671018b633fdc1853de30bcfbe831b9c\",\"license\":\"MIT\"},\"contracts/enums/YieldBoxTokenType.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\n/// @title TokenType\\n/// @author BoringCrypto (@Boring_Crypto)\\n/// @notice The YieldBox can hold different types of tokens:\\n/// Native: These are ERC1155 tokens native to YieldBox. Protocols using YieldBox should use these is possible when simple token creation is needed.\\n/// ERC20: ERC20 tokens (including rebasing tokens) can be added to the YieldBox.\\n/// ERC1155: ERC1155 tokens are also supported. This can also be used to add YieldBox Native tokens to strategies since they are ERC1155 tokens.\\nenum TokenType {\\n    Native,\\n    ERC20,\\n    ERC721,\\n    ERC1155,\\n    None\\n}\\n\",\"keccak256\":\"0xc6adb740ff68d4162214dfa9d406422a066ae2197b7f0c8df5daa7c84b4a10aa\",\"license\":\"MIT\"},\"contracts/interfaces/IStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"../enums/YieldBoxTokenType.sol\\\";\\nimport \\\"./IYieldBox.sol\\\";\\n\\ninterface IStrategy {\\n    /// Each strategy only works with a single asset. This should help make implementations simpler and more readable.\\n    /// To safe gas a proxy pattern (YieldBox factory) could be used to deploy the same strategy for multiple tokens.\\n\\n    /// It is recommended that strategies keep a small amount of funds uninvested (like 5%) to handle small withdrawals\\n    /// and deposits without triggering costly investing/divesting logic.\\n\\n    /// #########################\\n    /// ### Basic Information ###\\n    /// #########################\\n\\n    /// Returns the address of the yieldBox that this strategy is for\\n    function yieldBox() external view returns (IYieldBox yieldBox_);\\n\\n    /// Returns a name for this strategy\\n    function name() external view returns (string memory name_);\\n\\n    /// Returns a description for this strategy\\n    function description() external view returns (string memory description_);\\n\\n    /// #######################\\n    /// ### Supported Token ###\\n    /// #######################\\n\\n    /// Returns the standard that this strategy works with\\n    function tokenType() external view returns (TokenType tokenType_);\\n\\n    /// Returns the contract address that this strategy works with\\n    function contractAddress() external view returns (address contractAddress_);\\n\\n    /// Returns the tokenId that this strategy works with (for EIP1155)\\n    /// This is always 0 for EIP20 tokens\\n    function tokenId() external view returns (uint256 tokenId_);\\n\\n    /// ###########################\\n    /// ### Balance Information ###\\n    /// ###########################\\n\\n    /// Returns the total value the strategy holds (principle + gain) expressed in asset token amount.\\n    /// This should be cheap in gas to retrieve. Can return a bit less than the actual, but MUST NOT return more.\\n    /// The gas cost of this function will be paid on any deposit or withdrawal onto and out of the YieldBox\\n    /// that uses this strategy. Also, anytime a protocol converts between shares and amount, this gets called.\\n    function currentBalance() external view returns (uint256 amount);\\n\\n    /// Returns the maximum amount that can be withdrawn\\n    function withdrawable() external view returns (uint256 amount);\\n\\n    /// Returns the maximum amount that can be withdrawn for a low gas fee\\n    /// When more than this amount is withdrawn it will trigger divesting from the actual strategy\\n    /// which will incur higher gas costs\\n    function cheapWithdrawable() external view returns (uint256 amount);\\n\\n    /// ##########################\\n    /// ### YieldBox Functions ###\\n    /// ##########################\\n\\n    /// Is called by YieldBox to signal funds have been added, the strategy may choose to act on this\\n    /// When a large enough deposit is made, this should trigger the strategy to invest into the actual\\n    /// strategy. This function should normally NOT be used to invest on each call as that would be costly\\n    /// for small deposits.\\n    /// If the strategy handles native tokens (ETH) it will receive it directly (not wrapped). It will be\\n    /// up to the strategy to wrap it if needed.\\n    /// Only accept this call from the YieldBox\\n    function deposited(uint256 amount) external;\\n\\n    /// Is called by the YieldBox to ask the strategy to withdraw to the user\\n    /// When a strategy keeps a little reserve for cheap withdrawals and the requested withdrawal goes over this amount,\\n    /// the strategy should divest enough from the strategy to complete the withdrawal and rebalance the reserve.\\n    /// If the strategy handles native tokens (ETH) it should send this, not a wrapped version.\\n    /// With some strategies it might be hard to withdraw exactly the correct amount.\\n    /// Only accept this call from the YieldBox\\n    function withdraw(address to, uint256 amount) external;\\n}\\n\\nIStrategy constant NO_STRATEGY = IStrategy(address(0));\\n\",\"keccak256\":\"0xfb1ac346da7d2e866af267af14b76b0813cf2853bea1ab0674a7c202a9536734\",\"license\":\"MIT\"},\"contracts/interfaces/IYieldBox.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"../enums/YieldBoxTokenType.sol\\\";\\n\\ninterface IYieldBox {\\n    function wrappedNative() external view returns (address wrappedNative);\\n\\n    function assets(uint256 assetId)\\n        external\\n        view\\n        returns (\\n            TokenType tokenType,\\n            address contractAddress,\\n            address strategy,\\n            uint256 tokenId\\n        );\\n\\n    function nativeTokens(uint256 assetId)\\n        external\\n        view\\n        returns (\\n            string memory name,\\n            string memory symbol,\\n            uint8 decimals\\n        );\\n\\n    function owner(uint256 assetId) external view returns (address owner);\\n\\n    function totalSupply(uint256 assetId) external view returns (uint256 totalSupply);\\n\\n    function depositAsset(\\n        uint256 assetId,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        uint256 share\\n    ) external returns (uint256 amountOut, uint256 shareOut);\\n\\n    function withdraw(\\n        uint256 assetId,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        uint256 share\\n    ) external returns (uint256 amountOut, uint256 shareOut);\\n\\n    function transfer(\\n        address from,\\n        address to,\\n        uint256 assetId,\\n        uint256 share\\n    ) external;\\n\\n    function batchTransfer(\\n        address from,\\n        address to,\\n        uint256[] calldata assetIds_,\\n        uint256[] calldata shares_\\n    ) external;\\n\\n    function transferMultiple(\\n        address from,\\n        address[] calldata tos,\\n        uint256 assetId,\\n        uint256[] calldata shares\\n    ) external;\\n\\n    function toShare(\\n        uint256 assetId,\\n        uint256 amount,\\n        bool roundUp\\n    ) external view returns (uint256 share);\\n\\n    function toAmount(\\n        uint256 assetId,\\n        uint256 share,\\n        bool roundUp\\n    ) external view returns (uint256 amount);\\n}\\n\",\"keccak256\":\"0x04c6451aab417a3a3eb1e9e0a2e86fc4d62f4d332712cbdea11979e5e516b52f\",\"license\":\"MIT\"},\"contracts/mocks/ERC721StrategyMock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.9;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\r\\nimport \\\"../enums/YieldBoxTokenType.sol\\\";\\r\\nimport \\\"../interfaces/IStrategy.sol\\\";\\r\\nimport \\\"../interfaces/IYieldBox.sol\\\";\\r\\nimport \\\"../ERC721Receiver.sol\\\";\\r\\n\\r\\n\\r\\n// solhint-disable const-name-snakecase\\r\\n// solhint-disable no-empty-blocks\\r\\n\\r\\ncontract ERC721StrategyMock is IStrategy, ERC721Receiver {\\r\\n    string public constant override name = \\\"ERC721StrategyMock\\\";\\r\\n    string public constant override description = \\\"Mock Strategy for testing\\\";\\r\\n\\r\\n    TokenType public constant override tokenType = TokenType.ERC721;\\r\\n    address public immutable override contractAddress;\\r\\n    uint256 public immutable override tokenId;\\r\\n\\r\\n    IYieldBox public immutable override yieldBox;\\r\\n\\r\\n    constructor(IYieldBox yieldBox_, address token, uint256 tokenId_) {\\r\\n        yieldBox = yieldBox_;\\r\\n        contractAddress = token;\\r\\n        tokenId = tokenId_;\\r\\n    }\\r\\n\\r\\n    /// Returns the total value the strategy holds (principle + gain) expressed in asset token amount.\\r\\n    /// This should be cheap in gas to retrieve. Can return a bit less than the actual, but shouldn't return more.\\r\\n    /// The gas cost of this function will be paid on any deposit or withdrawal onto and out of the YieldBox\\r\\n    /// that uses this strategy. Also, anytime a protocol converts between shares and amount, this gets called.\\r\\n    function currentBalance() public view override returns (uint256 amount) {\\r\\n        return IERC721(contractAddress).balanceOf(address(this));\\r\\n    }\\r\\n\\r\\n    /// Returns the maximum amount that can be withdrawn\\r\\n    function withdrawable() external view override returns (uint256 amount) {\\r\\n        return IERC721(contractAddress).balanceOf(address(this));\\r\\n    }\\r\\n\\r\\n    /// Returns the maximum amount that can be withdrawn for a low gas fee\\r\\n    /// When more than this amount is withdrawn it will trigger divesting from the actual strategy\\r\\n    /// which will incur higher gas costs\\r\\n    function cheapWithdrawable() external view override returns (uint256 amount) {\\r\\n        return IERC721(contractAddress).balanceOf(address(this));\\r\\n    }\\r\\n\\r\\n    /// Is called by YieldBox to signal funds have been added, the strategy may choose to act on this\\r\\n    /// When a large enough deposit is made, this should trigger the strategy to invest into the actual\\r\\n    /// strategy. This function should normally NOT be used to invest on each call as that would be costly\\r\\n    /// for small deposits.\\r\\n    /// Only accept this call from the YieldBox\\r\\n    function deposited(uint256 amount) external override {}\\r\\n\\r\\n    /// Is called by the YieldBox to ask the strategy to withdraw to the user\\r\\n    /// When a strategy keeps a little reserve for cheap withdrawals and the requested withdrawal goes over this amount,\\r\\n    /// the strategy should divest enough from the strategy to complete the withdrawal and rebalance the reserve.\\r\\n    /// Only accept this call from the YieldBox\\r\\n    function withdraw(address to, uint256) external override {\\r\\n        IERC721(contractAddress).safeTransferFrom(address(this), to, tokenId);\\r\\n\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xbf9f17313b7c86fc44224cb1f4c836663b205f789f254d21c484620df89c08a1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"cheapWithdrawable()":{"notice":"Returns the maximum amount that can be withdrawn for a low gas fee When more than this amount is withdrawn it will trigger divesting from the actual strategy which will incur higher gas costs"},"contractAddress()":{"notice":"Returns the contract address that this strategy works with"},"currentBalance()":{"notice":"Returns the total value the strategy holds (principle + gain) expressed in asset token amount. This should be cheap in gas to retrieve. Can return a bit less than the actual, but shouldn't return more. The gas cost of this function will be paid on any deposit or withdrawal onto and out of the YieldBox that uses this strategy. Also, anytime a protocol converts between shares and amount, this gets called."},"deposited(uint256)":{"notice":"Is called by YieldBox to signal funds have been added, the strategy may choose to act on this When a large enough deposit is made, this should trigger the strategy to invest into the actual strategy. This function should normally NOT be used to invest on each call as that would be costly for small deposits. Only accept this call from the YieldBox"},"description()":{"notice":"Returns a description for this strategy"},"name()":{"notice":"Returns a name for this strategy"},"tokenId()":{"notice":"Returns the tokenId that this strategy works with (for EIP1155) This is always 0 for EIP20 tokens"},"tokenType()":{"notice":"Returns the standard that this strategy works with"},"withdraw(address,uint256)":{"notice":"Is called by the YieldBox to ask the strategy to withdraw to the user When a strategy keeps a little reserve for cheap withdrawals and the requested withdrawal goes over this amount, the strategy should divest enough from the strategy to complete the withdrawal and rebalance the reserve. Only accept this call from the YieldBox"},"withdrawable()":{"notice":"Returns the maximum amount that can be withdrawn"},"yieldBox()":{"notice":"Returns the address of the yieldBox that this strategy is for"}},"version":1}}}}}}