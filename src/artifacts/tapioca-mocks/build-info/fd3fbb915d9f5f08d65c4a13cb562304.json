{"id":"fd3fbb915d9f5f08d65c4a13cb562304","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"contracts/ContractThatCannotBeDeployed.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.18;\r\n\r\ncontract ContractThatCannotBeDeployed {\r\n    string public revertStr = \"This method reverted. So awesome!\";\r\n\r\n    constructor() {\r\n        revert(revertStr);\r\n    }\r\n}\r\n"},"contracts/ContractThatReverts.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.18;\r\n\r\ncontract ContractThatReverts {\r\n    uint256 public count;\r\n    string public revertStr = \"This method reverted. So awesome!\";\r\n\r\n    function shouldRevert(uint256 _count) external {\r\n        count = _count;\r\n        revert(revertStr);\r\n    }\r\n\r\n    function shouldNotRevert(uint256 _count) external {\r\n        count = _count;\r\n    }\r\n}\r\n"},"contracts/TapiocaDeployerMock.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.18;\r\n\r\n// TODO - Write deployment bytecode instead of Solidity compilation output\r\n\r\n/// @author https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Create2.sol\r\ncontract TapiocaDeployerMock {\r\n    /**\r\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\r\n     * will be deployed can be known in advance via {computeAddress}.\r\n     *\r\n     * The bytecode for a contract can be obtained from Solidity with\r\n     * `type(contractName).creationCode`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `bytecode` must not be empty.\r\n     * - `salt` must have not been used for `bytecode` already.\r\n     * - the factory must have a balance of at least `amount`.\r\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\r\n     */\r\n    function deploy(\r\n        uint256 amount,\r\n        bytes32 salt,\r\n        bytes memory bytecode,\r\n        string memory contractName\r\n    ) external payable returns (address addr) {\r\n        require(\r\n            address(this).balance >= amount,\r\n            \"Create2: insufficient balance\"\r\n        );\r\n        require(bytecode.length != 0, \"Create2: bytecode length is zero\");\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\r\n        }\r\n        require(\r\n            addr != address(0),\r\n            string.concat(\"Create2: Failed deploying contract \", contractName)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\r\n     * `bytecodeHash` or `salt` will result in a new destination address.\r\n     */\r\n    function computeAddress(\r\n        bytes32 salt,\r\n        bytes32 bytecodeHash\r\n    ) external view returns (address) {\r\n        return computeAddress(salt, bytecodeHash, address(this));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\r\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\r\n     */\r\n    function computeAddress(\r\n        bytes32 salt,\r\n        bytes32 bytecodeHash,\r\n        address deployer\r\n    ) public pure returns (address addr) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            let ptr := mload(0x40) // Get free memory pointer\r\n\r\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\r\n            // |-------------------|---------------------------------------------------------------------------|\r\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\r\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\r\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\r\n            // | 0xFF              |            FF                                                             |\r\n            // |-------------------|---------------------------------------------------------------------------|\r\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\r\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\r\n\r\n            mstore(add(ptr, 0x40), bytecodeHash)\r\n            mstore(add(ptr, 0x20), salt)\r\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\r\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\r\n            mstore8(start, 0xff)\r\n            addr := keccak256(start, 85)\r\n        }\r\n    }\r\n}\r\n"}},"settings":{"viaIR":true,"optimizer":{"enabled":true,"runs":700},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates","devdoc","userdoc"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"contracts/ContractThatCannotBeDeployed.sol":{"ast":{"absolutePath":"contracts/ContractThatCannotBeDeployed.sol","exportedSymbols":{"ContractThatCannotBeDeployed":[13]},"id":14,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"40:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"ContractThatCannotBeDeployed","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":13,"linearizedBaseContracts":[13],"name":"ContractThatCannotBeDeployed","nameLocation":"77:28:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"d58f6434","id":4,"mutability":"mutable","name":"revertStr","nameLocation":"127:9:0","nodeType":"VariableDeclaration","scope":13,"src":"113:61:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2,"name":"string","nodeType":"ElementaryTypeName","src":"113:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"54686973206d6574686f642072657665727465642e20536f20617765736f6d6521","id":3,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"139:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_68cbbe51df32bf736443d04614b8eaf5434fac8bc576c27345a98ff3c7395465","typeString":"literal_string \"This method reverted. So awesome!\""},"value":"This method reverted. So awesome!"},"visibility":"public"},{"body":{"id":11,"nodeType":"Block","src":"197:36:0","statements":[{"expression":{"arguments":[{"id":8,"name":"revertStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"215:9:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":7,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"208:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":9,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"208:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10,"nodeType":"ExpressionStatement","src":"208:17:0"}]},"id":12,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5,"nodeType":"ParameterList","parameters":[],"src":"194:2:0"},"returnParameters":{"id":6,"nodeType":"ParameterList","parameters":[],"src":"197:0:0"},"scope":13,"src":"183:50:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":14,"src":"68:168:0","usedErrors":[]}],"src":"40:198:0"},"id":0},"contracts/ContractThatReverts.sol":{"ast":{"absolutePath":"contracts/ContractThatReverts.sol","exportedSymbols":{"ContractThatReverts":[45]},"id":46,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":15,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"40:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"ContractThatReverts","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":45,"linearizedBaseContracts":[45],"name":"ContractThatReverts","nameLocation":"77:19:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"06661abd","id":17,"mutability":"mutable","name":"count","nameLocation":"119:5:1","nodeType":"VariableDeclaration","scope":45,"src":"104:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16,"name":"uint256","nodeType":"ElementaryTypeName","src":"104:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"d58f6434","id":20,"mutability":"mutable","name":"revertStr","nameLocation":"145:9:1","nodeType":"VariableDeclaration","scope":45,"src":"131:61:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":18,"name":"string","nodeType":"ElementaryTypeName","src":"131:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"54686973206d6574686f642072657665727465642e20536f20617765736f6d6521","id":19,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"157:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_68cbbe51df32bf736443d04614b8eaf5434fac8bc576c27345a98ff3c7395465","typeString":"literal_string \"This method reverted. So awesome!\""},"value":"This method reverted. So awesome!"},"visibility":"public"},{"body":{"id":33,"nodeType":"Block","src":"248:61:1","statements":[{"expression":{"id":27,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":25,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"259:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":26,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"267:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"259:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":28,"nodeType":"ExpressionStatement","src":"259:14:1"},{"expression":{"arguments":[{"id":30,"name":"revertStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"291:9:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":29,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"284:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":31,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"284:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":32,"nodeType":"ExpressionStatement","src":"284:17:1"}]},"functionSelector":"16b2da82","id":34,"implemented":true,"kind":"function","modifiers":[],"name":"shouldRevert","nameLocation":"210:12:1","nodeType":"FunctionDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":22,"mutability":"mutable","name":"_count","nameLocation":"231:6:1","nodeType":"VariableDeclaration","scope":34,"src":"223:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":21,"name":"uint256","nodeType":"ElementaryTypeName","src":"223:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"222:16:1"},"returnParameters":{"id":24,"nodeType":"ParameterList","parameters":[],"src":"248:0:1"},"scope":45,"src":"201:108:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":43,"nodeType":"Block","src":"367:33:1","statements":[{"expression":{"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":39,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"378:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":40,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"386:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"378:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":42,"nodeType":"ExpressionStatement","src":"378:14:1"}]},"functionSelector":"fa2880ca","id":44,"implemented":true,"kind":"function","modifiers":[],"name":"shouldNotRevert","nameLocation":"326:15:1","nodeType":"FunctionDefinition","parameters":{"id":37,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36,"mutability":"mutable","name":"_count","nameLocation":"350:6:1","nodeType":"VariableDeclaration","scope":44,"src":"342:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35,"name":"uint256","nodeType":"ElementaryTypeName","src":"342:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"341:16:1"},"returnParameters":{"id":38,"nodeType":"ParameterList","parameters":[],"src":"367:0:1"},"scope":45,"src":"317:83:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":46,"src":"68:335:1","usedErrors":[]}],"src":"40:365:1"},"id":1},"contracts/TapiocaDeployerMock.sol":{"ast":{"absolutePath":"contracts/TapiocaDeployerMock.sol","exportedSymbols":{"TapiocaDeployerMock":[133]},"id":134,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":47,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"40:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"TapiocaDeployerMock","contractDependencies":[],"contractKind":"contract","documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"146:108:2","text":"@author https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Create2.sol"},"fullyImplemented":true,"id":133,"linearizedBaseContracts":[133],"name":"TapiocaDeployerMock","nameLocation":"263:19:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":97,"nodeType":"Block","src":"1049:504:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":69,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":65,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1090:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_TapiocaDeployerMock_$133","typeString":"contract TapiocaDeployerMock"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TapiocaDeployerMock_$133","typeString":"contract TapiocaDeployerMock"}],"id":64,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1082:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"1082:7:2","typeDescriptions":{}}},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1082:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1096:7:2","memberName":"balance","nodeType":"MemberAccess","src":"1082:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":68,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"1107:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1082:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"437265617465323a20696e73756666696369656e742062616c616e6365","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1128:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_f94f9c62541b73155a9def26a7988ac5579c2c6b698df8f608ced5572b7d72ca","typeString":"literal_string \"Create2: insufficient balance\""},"value":"Create2: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f94f9c62541b73155a9def26a7988ac5579c2c6b698df8f608ced5572b7d72ca","typeString":"literal_string \"Create2: insufficient balance\""}],"id":62,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1060:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":71,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1060:110:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":72,"nodeType":"ExpressionStatement","src":"1060:110:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":77,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":74,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"1189:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1198:6:2","memberName":"length","nodeType":"MemberAccess","src":"1189:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":76,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1208:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1189:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"437265617465323a2062797465636f6465206c656e677468206973207a65726f","id":78,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1211:34:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_124767115c09b0dd37c31c42ddb030d84459c933a30879cc32c4c922ae5928f0","typeString":"literal_string \"Create2: bytecode length is zero\""},"value":"Create2: bytecode length is zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_124767115c09b0dd37c31c42ddb030d84459c933a30879cc32c4c922ae5928f0","typeString":"literal_string \"Create2: bytecode length is zero\""}],"id":73,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1181:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1181:65:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"ExpressionStatement","src":"1181:65:2"},{"AST":{"nodeType":"YulBlock","src":"1310:93:2","statements":[{"nodeType":"YulAssignment","src":"1325:67:2","value":{"arguments":[{"name":"amount","nodeType":"YulIdentifier","src":"1341:6:2"},{"arguments":[{"name":"bytecode","nodeType":"YulIdentifier","src":"1353:8:2"},{"kind":"number","nodeType":"YulLiteral","src":"1363:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1349:3:2"},"nodeType":"YulFunctionCall","src":"1349:19:2"},{"arguments":[{"name":"bytecode","nodeType":"YulIdentifier","src":"1376:8:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1370:5:2"},"nodeType":"YulFunctionCall","src":"1370:15:2"},{"name":"salt","nodeType":"YulIdentifier","src":"1387:4:2"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"1333:7:2"},"nodeType":"YulFunctionCall","src":"1333:59:2"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"1325:4:2"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":60,"isOffset":false,"isSlot":false,"src":"1325:4:2","valueSize":1},{"declaration":51,"isOffset":false,"isSlot":false,"src":"1341:6:2","valueSize":1},{"declaration":55,"isOffset":false,"isSlot":false,"src":"1353:8:2","valueSize":1},{"declaration":55,"isOffset":false,"isSlot":false,"src":"1376:8:2","valueSize":1},{"declaration":53,"isOffset":false,"isSlot":false,"src":"1387:4:2","valueSize":1}],"id":81,"nodeType":"InlineAssembly","src":"1301:102:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":83,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"1435:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":86,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1451:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":85,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1443:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:2","typeDescriptions":{}}},"id":87,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1443:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1435:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"hexValue":"437265617465323a204661696c6564206465706c6f79696e6720636f6e747261637420","id":92,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1482:37:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_874a0cdedfb8353b17b1223353607919fab7f6fc73d1f31a0690c37e0dc0ade7","typeString":"literal_string \"Create2: Failed deploying contract \""},"value":"Create2: Failed deploying contract "},{"id":93,"name":"contractName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"1521:12:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_874a0cdedfb8353b17b1223353607919fab7f6fc73d1f31a0690c37e0dc0ade7","typeString":"literal_string \"Create2: Failed deploying contract \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":90,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1468:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":89,"name":"string","nodeType":"ElementaryTypeName","src":"1468:6:2","typeDescriptions":{}}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1475:6:2","memberName":"concat","nodeType":"MemberAccess","src":"1468:13:2","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":94,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1468:66:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":82,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1413:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1413:132:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"1413:132:2"}]},"documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"290:573:2","text":" @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."},"functionSelector":"8f3b6593","id":98,"implemented":true,"kind":"function","modifiers":[],"name":"deploy","nameLocation":"878:6:2","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"mutability":"mutable","name":"amount","nameLocation":"903:6:2","nodeType":"VariableDeclaration","scope":98,"src":"895:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"salt","nameLocation":"928:4:2","nodeType":"VariableDeclaration","scope":98,"src":"920:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":52,"name":"bytes32","nodeType":"ElementaryTypeName","src":"920:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":55,"mutability":"mutable","name":"bytecode","nameLocation":"956:8:2","nodeType":"VariableDeclaration","scope":98,"src":"943:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":54,"name":"bytes","nodeType":"ElementaryTypeName","src":"943:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"contractName","nameLocation":"989:12:2","nodeType":"VariableDeclaration","scope":98,"src":"975:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":56,"name":"string","nodeType":"ElementaryTypeName","src":"975:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"884:124:2"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60,"mutability":"mutable","name":"addr","nameLocation":"1043:4:2","nodeType":"VariableDeclaration","scope":98,"src":"1035:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":59,"name":"address","nodeType":"ElementaryTypeName","src":"1035:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1034:14:2"},"scope":133,"src":"869:684:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":117,"nodeType":"Block","src":"1880:75:2","statements":[{"expression":{"arguments":[{"id":109,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"1913:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":110,"name":"bytecodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"1919:12:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":113,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1941:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_TapiocaDeployerMock_$133","typeString":"contract TapiocaDeployerMock"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TapiocaDeployerMock_$133","typeString":"contract TapiocaDeployerMock"}],"id":112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1933:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"1933:7:2","typeDescriptions":{}}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1933:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":108,"name":"computeAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"1898:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,bytes32,address) pure returns (address)"}},"id":115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1898:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":107,"id":116,"nodeType":"Return","src":"1891:56:2"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"1561:196:2","text":" @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."},"functionSelector":"481286e6","id":118,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"1772:14:2","nodeType":"FunctionDefinition","parameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"salt","nameLocation":"1805:4:2","nodeType":"VariableDeclaration","scope":118,"src":"1797:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":100,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1797:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":103,"mutability":"mutable","name":"bytecodeHash","nameLocation":"1828:12:2","nodeType":"VariableDeclaration","scope":118,"src":"1820:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":102,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1820:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1786:61:2"},"returnParameters":{"id":107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":118,"src":"1871:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":105,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:9:2"},"scope":133,"src":"1763:192:2","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":131,"nodeType":"Block","src":"2351:1679:2","statements":[{"AST":{"nodeType":"YulBlock","src":"2415:1608:2","statements":[{"nodeType":"YulVariableDeclaration","src":"2430:22:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2447:4:2","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2441:5:2"},"nodeType":"YulFunctionCall","src":"2441:11:2"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"2434:3:2","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3666:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"3671:4:2","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3662:3:2"},"nodeType":"YulFunctionCall","src":"3662:14:2"},{"name":"bytecodeHash","nodeType":"YulIdentifier","src":"3678:12:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3655:6:2"},"nodeType":"YulFunctionCall","src":"3655:36:2"},"nodeType":"YulExpressionStatement","src":"3655:36:2"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3716:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"3721:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3712:3:2"},"nodeType":"YulFunctionCall","src":"3712:14:2"},{"name":"salt","nodeType":"YulIdentifier","src":"3728:4:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3705:6:2"},"nodeType":"YulFunctionCall","src":"3705:28:2"},"nodeType":"YulExpressionStatement","src":"3705:28:2"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3754:3:2"},{"name":"deployer","nodeType":"YulIdentifier","src":"3759:8:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3747:6:2"},"nodeType":"YulFunctionCall","src":"3747:21:2"},"nodeType":"YulExpressionStatement","src":"3747:21:2"},{"nodeType":"YulVariableDeclaration","src":"3831:27:2","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3848:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"3853:4:2","type":"","value":"0x0b"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3844:3:2"},"nodeType":"YulFunctionCall","src":"3844:14:2"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"3835:5:2","type":""}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3958:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"3965:4:2","type":"","value":"0xff"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3950:7:2"},"nodeType":"YulFunctionCall","src":"3950:20:2"},"nodeType":"YulExpressionStatement","src":"3950:20:2"},{"nodeType":"YulAssignment","src":"3984:28:2","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4002:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"4009:2:2","type":"","value":"85"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3992:9:2"},"nodeType":"YulFunctionCall","src":"3992:20:2"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"3984:4:2"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":128,"isOffset":false,"isSlot":false,"src":"3984:4:2","valueSize":1},{"declaration":123,"isOffset":false,"isSlot":false,"src":"3678:12:2","valueSize":1},{"declaration":125,"isOffset":false,"isSlot":false,"src":"3759:8:2","valueSize":1},{"declaration":121,"isOffset":false,"isSlot":false,"src":"3728:4:2","valueSize":1}],"id":130,"nodeType":"InlineAssembly","src":"2406:1617:2"}]},"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"1963:235:2","text":" @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."},"functionSelector":"78065306","id":132,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"2213:14:2","nodeType":"FunctionDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"salt","nameLocation":"2246:4:2","nodeType":"VariableDeclaration","scope":132,"src":"2238:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2238:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":123,"mutability":"mutable","name":"bytecodeHash","nameLocation":"2269:12:2","nodeType":"VariableDeclaration","scope":132,"src":"2261:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2261:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":125,"mutability":"mutable","name":"deployer","nameLocation":"2300:8:2","nodeType":"VariableDeclaration","scope":132,"src":"2292:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"2292:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2227:88:2"},"returnParameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":128,"mutability":"mutable","name":"addr","nameLocation":"2345:4:2","nodeType":"VariableDeclaration","scope":132,"src":"2337:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":127,"name":"address","nodeType":"ElementaryTypeName","src":"2337:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2336:14:2"},"scope":133,"src":"2204:1826:2","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":134,"src":"254:3779:2","usedErrors":[]}],"src":"40:3995:2"},"id":2}},"contracts":{"contracts/ContractThatCannotBeDeployed.sol":{"ContractThatCannotBeDeployed":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"revertStr","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"extract_byte_array_length":{"entryPoint":309,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080604052346101305760006100158154610135565b601f8111610103575b506043815580805260208082207f54686973206d6574686f642072657665727465642e20536f20617765736f6d658155602160f81b60018092015560405192839262461bcd60e51b8452806004850152819282549261007c84610135565b9384602488015282811690816000146100e157506001146100a0575b505050500390fd5b8080528281209594509291905b8284106100c857505050816044929350010138808080610098565b85548785016044015294850194869450928101926100ad565b93505050506044925060ff191682840152151560051b82010138808080610098565b8180526002601f60208420920160051c820191015b818110610125575061001e565b828155600101610118565b600080fd5b90600182811c92168015610165575b602083101461014f57565b634e487b7160e01b600052602260045260246000fd5b91607f169161014456fe","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x130 JUMPI PUSH1 0x0 PUSH2 0x15 DUP2 SLOAD PUSH2 0x135 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x103 JUMPI JUMPDEST POP PUSH1 0x43 DUP2 SSTORE DUP1 DUP1 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 PUSH32 0x54686973206D6574686F642072657665727465642E20536F20617765736F6D65 DUP2 SSTORE PUSH1 0x21 PUSH1 0xF8 SHL PUSH1 0x1 DUP1 SWAP3 ADD SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE DUP1 PUSH1 0x4 DUP6 ADD MSTORE DUP2 SWAP3 DUP3 SLOAD SWAP3 PUSH2 0x7C DUP5 PUSH2 0x135 JUMP JUMPDEST SWAP4 DUP5 PUSH1 0x24 DUP9 ADD MSTORE DUP3 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0xE1 JUMPI POP PUSH1 0x1 EQ PUSH2 0xA0 JUMPI JUMPDEST POP POP POP POP SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 MSTORE DUP3 DUP2 KECCAK256 SWAP6 SWAP5 POP SWAP3 SWAP2 SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0xC8 JUMPI POP POP POP DUP2 PUSH1 0x44 SWAP3 SWAP4 POP ADD ADD CODESIZE DUP1 DUP1 DUP1 PUSH2 0x98 JUMP JUMPDEST DUP6 SLOAD DUP8 DUP6 ADD PUSH1 0x44 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0xAD JUMP JUMPDEST SWAP4 POP POP POP POP PUSH1 0x44 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 DUP1 PUSH2 0x98 JUMP JUMPDEST DUP2 DUP1 MSTORE PUSH1 0x2 PUSH1 0x1F PUSH1 0x20 DUP5 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x125 JUMPI POP PUSH2 0x1E JUMP JUMPDEST DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x118 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x165 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x14F JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x144 JUMP INVALID ","sourceMap":"68:168:0:-:0;;;;;;139:35;68:168;;;;:::i;:::-;;;;;;-1:-1:-1;68:168:0;;;;;;;;;;;;;;-1:-1:-1;;;68:168:0;;;;;;;208:17;;;;;;;;;;;;68:168;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;208:17;;;;;;;68:168;;;;;;;;;-1:-1:-1;68:168:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;68:168:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080600436101561000f57600080fd5b6000803560e01c63d58f64341461002557600080fd5b34610188578060031936011261018857809181549060019382851c85841695861561017e575b602094858310881461016a578585969798848752918260001461014e5750506001146100f7575b5050601f801993849203011681019381851067ffffffffffffffff8611176100e3579291849192604094838652818452845191828186015281955b8387106100cb5750508394508582601f949501015201168101030190f35b868101820151898801890152958101958895506100ad565b634e487b7160e01b81526041600452602490fd5b8680528592508691907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828410610136575050508201013880610072565b80548488018601528695508794909301928101610122565b925093505060ff191682840152151560051b8201013880610072565b634e487b7160e01b87526022600452602487fd5b90607f169061004b565b80fdfea264697066735822122009513e88819f071661c0f7c389b542b17acb67db287bf26eec9db8a879e6881164736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0xD58F6434 EQ PUSH2 0x25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x188 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x188 JUMPI DUP1 SWAP2 DUP2 SLOAD SWAP1 PUSH1 0x1 SWAP4 DUP3 DUP6 SHR DUP6 DUP5 AND SWAP6 DUP7 ISZERO PUSH2 0x17E JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP4 LT DUP9 EQ PUSH2 0x16A JUMPI DUP6 DUP6 SWAP7 SWAP8 SWAP9 DUP5 DUP8 MSTORE SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x14E JUMPI POP POP PUSH1 0x1 EQ PUSH2 0xF7 JUMPI JUMPDEST POP POP PUSH1 0x1F DUP1 NOT SWAP4 DUP5 SWAP3 SUB ADD AND DUP2 ADD SWAP4 DUP2 DUP6 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP7 GT OR PUSH2 0xE3 JUMPI SWAP3 SWAP2 DUP5 SWAP2 SWAP3 PUSH1 0x40 SWAP5 DUP4 DUP7 MSTORE DUP2 DUP5 MSTORE DUP5 MLOAD SWAP2 DUP3 DUP2 DUP7 ADD MSTORE DUP2 SWAP6 JUMPDEST DUP4 DUP8 LT PUSH2 0xCB JUMPI POP POP DUP4 SWAP5 POP DUP6 DUP3 PUSH1 0x1F SWAP5 SWAP6 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST DUP7 DUP2 ADD DUP3 ADD MLOAD DUP10 DUP9 ADD DUP10 ADD MSTORE SWAP6 DUP2 ADD SWAP6 DUP9 SWAP6 POP PUSH2 0xAD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP7 DUP1 MSTORE DUP6 SWAP3 POP DUP7 SWAP2 SWAP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 JUMPDEST DUP3 DUP5 LT PUSH2 0x136 JUMPI POP POP POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x72 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP9 ADD DUP7 ADD MSTORE DUP7 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x122 JUMP JUMPDEST SWAP3 POP SWAP4 POP POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x72 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x4B JUMP JUMPDEST DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD MLOAD RETURNDATACOPY DUP9 DUP2 SWAP16 SMOD AND PUSH2 0xC0F7 0xC3 DUP10 0xB5 TIMESTAMP 0xB1 PUSH27 0xCB67DB287BF26EEC9DB8A879E6881164736F6C6343000812003300 ","sourceMap":"68:168:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;68:168:0;;;-1:-1:-1;;;68:168:0;;;;;;;;;;;;;;-1:-1:-1;68:168:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;68:168:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;68:168:0;;;;;;;;;;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"89800","executionCost":"infinite","totalCost":"infinite"},"external":{"revertStr()":"infinite"}},"methodIdentifiers":{"revertStr()":"d58f6434"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"revertStr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ContractThatCannotBeDeployed.sol\":\"ContractThatCannotBeDeployed\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":700},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/ContractThatCannotBeDeployed.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\ncontract ContractThatCannotBeDeployed {\\r\\n    string public revertStr = \\\"This method reverted. So awesome!\\\";\\r\\n\\r\\n    constructor() {\\r\\n        revert(revertStr);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xaa3676de0c89d901fe3dfe5f430d1835c6e417f7dabb09e606f96107bb91ba84\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4,"contract":"contracts/ContractThatCannotBeDeployed.sol:ContractThatCannotBeDeployed","label":"revertStr","offset":0,"slot":"0","type":"t_string_storage"}],"types":{"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ContractThatReverts.sol":{"ContractThatReverts":{"abi":[{"inputs":[],"name":"count","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"revertStr","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_count","type":"uint256"}],"name":"shouldNotRevert","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_count","type":"uint256"}],"name":"shouldRevert","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608080604052346100c157600180548181811c911680156100b7575b60208210146100a157601f8111610072575b50806043602160f81b92558060005260206000207f54686973206d6574686f642072657665727465642e20536f20617765736f6d658155015561026f90816100c78239f35b816000526002601f6020600020920160051c820191015b818110610096575061002d565b600081558201610089565b634e487b7160e01b600052602260045260246000fd5b90607f169061001b565b600080fdfe6080604090808252600436101561001557600080fd5b600091823560e01c91826306661abd146101495750816316b2da8214610110578163d58f64341461006c575063fa2880ca1461005057600080fd5b3461006957602036600319011261006957600435815580f35b80fd5b90503461010c578160031936011261010c578051601f199081601f8261009181610163565b03011681019381851067ffffffffffffffff8611176100f85791849192828552602090818452845191828186015281955b8387106100e05750508394508582601f949501015201168101030190f35b868101820151898801890152958101958895506100c2565b634e487b7160e01b81526041600452602490fd5b5080fd5b82346100695760203660031901126100695760043590555162461bcd60e51b8152602060048201528061014560248201610163565b0390fd5b83903461010c578160031936011261010c57602091548152f35b60018054600093928183169282811c92841561022f575b6020948585108114610219578484529081156101fc575060011461019f575b50505050565b80939495506000929192527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf692846000945b8386106101e8575050505001019038808080610199565b8054858701830152940193859082016101d1565b60ff191685840152505090151560051b0101915038808080610199565b634e487b7160e01b600052602260045260246000fd5b92607f169261017a56fea264697066735822122060683e185faf78deb35f629d26f31eed0ac7bc862022818fad528029fb7a6c7464736f6c63430008120033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x1 DUP1 SLOAD DUP2 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0xB7 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0xA1 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x72 JUMPI JUMPDEST POP DUP1 PUSH1 0x43 PUSH1 0x21 PUSH1 0xF8 SHL SWAP3 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH32 0x54686973206D6574686F642072657665727465642E20536F20617765736F6D65 DUP2 SSTORE ADD SSTORE PUSH2 0x26F SWAP1 DUP2 PUSH2 0xC7 DUP3 CODECOPY RETURN JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x1F PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x96 JUMPI POP PUSH2 0x2D JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP3 ADD PUSH2 0x89 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x1B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6661ABD EQ PUSH2 0x149 JUMPI POP DUP2 PUSH4 0x16B2DA82 EQ PUSH2 0x110 JUMPI DUP2 PUSH4 0xD58F6434 EQ PUSH2 0x6C JUMPI POP PUSH4 0xFA2880CA EQ PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x69 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x69 JUMPI PUSH1 0x4 CALLDATALOAD DUP2 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x10C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x10C JUMPI DUP1 MLOAD PUSH1 0x1F NOT SWAP1 DUP2 PUSH1 0x1F DUP3 PUSH2 0x91 DUP2 PUSH2 0x163 JUMP JUMPDEST SUB ADD AND DUP2 ADD SWAP4 DUP2 DUP6 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP7 GT OR PUSH2 0xF8 JUMPI SWAP2 DUP5 SWAP2 SWAP3 DUP3 DUP6 MSTORE PUSH1 0x20 SWAP1 DUP2 DUP5 MSTORE DUP5 MLOAD SWAP2 DUP3 DUP2 DUP7 ADD MSTORE DUP2 SWAP6 JUMPDEST DUP4 DUP8 LT PUSH2 0xE0 JUMPI POP POP DUP4 SWAP5 POP DUP6 DUP3 PUSH1 0x1F SWAP5 SWAP6 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST DUP7 DUP2 ADD DUP3 ADD MLOAD DUP10 DUP9 ADD DUP10 ADD MSTORE SWAP6 DUP2 ADD SWAP6 DUP9 SWAP6 POP PUSH2 0xC2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x69 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x69 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 SSTORE MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE DUP1 PUSH2 0x145 PUSH1 0x24 DUP3 ADD PUSH2 0x163 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x10C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x10C JUMPI PUSH1 0x20 SWAP2 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 DUP2 DUP4 AND SWAP3 DUP3 DUP2 SHR SWAP3 DUP5 ISZERO PUSH2 0x22F JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP2 EQ PUSH2 0x219 JUMPI DUP5 DUP5 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1FC JUMPI POP PUSH1 0x1 EQ PUSH2 0x19F JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 SWAP4 SWAP5 SWAP6 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP3 DUP5 PUSH1 0x0 SWAP5 JUMPDEST DUP4 DUP7 LT PUSH2 0x1E8 JUMPI POP POP POP POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x199 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 ADD SWAP4 DUP6 SWAP1 DUP3 ADD PUSH2 0x1D1 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP6 DUP5 ADD MSTORE POP POP SWAP1 ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP2 POP CODESIZE DUP1 DUP1 DUP1 PUSH2 0x199 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x17A JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x68 RETURNDATACOPY XOR 0x5F 0xAF PUSH25 0xDEB35F629D26F31EED0AC7BC862022818FAD528029FB7A6C74 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"68:335:1:-:0;;;;;;;157:35;68:335;;;;;;;;;;;;-1:-1:-1;68:335:1;;;;;;;;;;;-1:-1:-1;68:335:1;;;-1:-1:-1;;;68:335:1;;;-1:-1:-1;68:335:1;;-1:-1:-1;68:335:1;;;;;;;;;;;;;;;-1:-1:-1;68:335:1;;;;-1:-1:-1;68:335:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;68:335:1;;;;;;;;;;-1:-1:-1;68:335:1;;;;;-1:-1:-1;68:335:1;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_encode_string_storage":{"entryPoint":355,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604090808252600436101561001557600080fd5b600091823560e01c91826306661abd146101495750816316b2da8214610110578163d58f64341461006c575063fa2880ca1461005057600080fd5b3461006957602036600319011261006957600435815580f35b80fd5b90503461010c578160031936011261010c578051601f199081601f8261009181610163565b03011681019381851067ffffffffffffffff8611176100f85791849192828552602090818452845191828186015281955b8387106100e05750508394508582601f949501015201168101030190f35b868101820151898801890152958101958895506100c2565b634e487b7160e01b81526041600452602490fd5b5080fd5b82346100695760203660031901126100695760043590555162461bcd60e51b8152602060048201528061014560248201610163565b0390fd5b83903461010c578160031936011261010c57602091548152f35b60018054600093928183169282811c92841561022f575b6020948585108114610219578484529081156101fc575060011461019f575b50505050565b80939495506000929192527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf692846000945b8386106101e8575050505001019038808080610199565b8054858701830152940193859082016101d1565b60ff191685840152505090151560051b0101915038808080610199565b634e487b7160e01b600052602260045260246000fd5b92607f169261017a56fea264697066735822122060683e185faf78deb35f629d26f31eed0ac7bc862022818fad528029fb7a6c7464736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6661ABD EQ PUSH2 0x149 JUMPI POP DUP2 PUSH4 0x16B2DA82 EQ PUSH2 0x110 JUMPI DUP2 PUSH4 0xD58F6434 EQ PUSH2 0x6C JUMPI POP PUSH4 0xFA2880CA EQ PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x69 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x69 JUMPI PUSH1 0x4 CALLDATALOAD DUP2 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x10C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x10C JUMPI DUP1 MLOAD PUSH1 0x1F NOT SWAP1 DUP2 PUSH1 0x1F DUP3 PUSH2 0x91 DUP2 PUSH2 0x163 JUMP JUMPDEST SUB ADD AND DUP2 ADD SWAP4 DUP2 DUP6 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP7 GT OR PUSH2 0xF8 JUMPI SWAP2 DUP5 SWAP2 SWAP3 DUP3 DUP6 MSTORE PUSH1 0x20 SWAP1 DUP2 DUP5 MSTORE DUP5 MLOAD SWAP2 DUP3 DUP2 DUP7 ADD MSTORE DUP2 SWAP6 JUMPDEST DUP4 DUP8 LT PUSH2 0xE0 JUMPI POP POP DUP4 SWAP5 POP DUP6 DUP3 PUSH1 0x1F SWAP5 SWAP6 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST DUP7 DUP2 ADD DUP3 ADD MLOAD DUP10 DUP9 ADD DUP10 ADD MSTORE SWAP6 DUP2 ADD SWAP6 DUP9 SWAP6 POP PUSH2 0xC2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x69 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x69 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 SSTORE MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE DUP1 PUSH2 0x145 PUSH1 0x24 DUP3 ADD PUSH2 0x163 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x10C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x10C JUMPI PUSH1 0x20 SWAP2 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 DUP2 DUP4 AND SWAP3 DUP3 DUP2 SHR SWAP3 DUP5 ISZERO PUSH2 0x22F JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP2 EQ PUSH2 0x219 JUMPI DUP5 DUP5 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1FC JUMPI POP PUSH1 0x1 EQ PUSH2 0x19F JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 SWAP4 SWAP5 SWAP6 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP3 DUP5 PUSH1 0x0 SWAP5 JUMPDEST DUP4 DUP7 LT PUSH2 0x1E8 JUMPI POP POP POP POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x199 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 ADD SWAP4 DUP6 SWAP1 DUP3 ADD PUSH2 0x1D1 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP6 DUP5 ADD MSTORE POP POP SWAP1 ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP2 POP CODESIZE DUP1 DUP1 DUP1 PUSH2 0x199 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x17A JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x68 RETURNDATACOPY XOR 0x5F 0xAF PUSH25 0xDEB35F629D26F31EED0AC7BC862022818FAD528029FB7A6C74 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"68:335:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;284:17;68:335;284:17;;;68:335;;;;;;;;;;;;;;-1:-1:-1;;68:335:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;68:335:1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;68:335:1;;;-1:-1:-1;;;68:335:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;68:335:1;;;;;;;;;284:17;;;;;68:335;;284:17;;68:335;;;;;;;:::i;:::-;284:17;;;68:335;;;;;;;;;;;;;;;;;;;;;291:9;68:335;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;68:335:1;;;;;;;-1:-1:-1;68:335:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;68:335:1;;;;;-1:-1:-1;;68:335:1;;;;;;;;-1:-1:-1;68:335:1;;;;;;;;;;-1:-1:-1;68:335:1;;;;;-1:-1:-1;68:335:1;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"124600","executionCost":"infinite","totalCost":"infinite"},"external":{"count()":"2265","revertStr()":"infinite","shouldNotRevert(uint256)":"22320","shouldRevert(uint256)":"infinite"}},"methodIdentifiers":{"count()":"06661abd","revertStr()":"d58f6434","shouldNotRevert(uint256)":"fa2880ca","shouldRevert(uint256)":"16b2da82"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revertStr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_count\",\"type\":\"uint256\"}],\"name\":\"shouldNotRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_count\",\"type\":\"uint256\"}],\"name\":\"shouldRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ContractThatReverts.sol\":\"ContractThatReverts\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":700},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/ContractThatReverts.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\ncontract ContractThatReverts {\\r\\n    uint256 public count;\\r\\n    string public revertStr = \\\"This method reverted. So awesome!\\\";\\r\\n\\r\\n    function shouldRevert(uint256 _count) external {\\r\\n        count = _count;\\r\\n        revert(revertStr);\\r\\n    }\\r\\n\\r\\n    function shouldNotRevert(uint256 _count) external {\\r\\n        count = _count;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x16a986a26a3ce6eeb9f1b2a81d944a4f367e8c46f1482f196c620e3636cf6c61\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":17,"contract":"contracts/ContractThatReverts.sol:ContractThatReverts","label":"count","offset":0,"slot":"0","type":"t_uint256"},{"astId":20,"contract":"contracts/ContractThatReverts.sol:ContractThatReverts","label":"revertStr","offset":0,"slot":"1","type":"t_string_storage"}],"types":{"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/TapiocaDeployerMock.sol":{"TapiocaDeployerMock":{"abi":[{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"bytecodeHash","type":"bytes32"}],"name":"computeAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"bytecodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"name":"computeAddress","outputs":[{"internalType":"address","name":"addr","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes","name":"bytecode","type":"bytes"},{"internalType":"string","name":"contractName","type":"string"}],"name":"deploy","outputs":[{"internalType":"address","name":"addr","type":"address"}],"stateMutability":"payable","type":"function"}],"devdoc":{"author":"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Create2.sol","kind":"dev","methods":{"computeAddress(bytes32,bytes32)":{"details":"Returns the address where a contract will be stored if deployed via {deploy}. Any change in the `bytecodeHash` or `salt` will result in a new destination address."},"computeAddress(bytes32,bytes32,address)":{"details":"Returns the address where a contract will be stored if deployed via {deploy} from a contract located at `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."},"deploy(uint256,bytes32,bytes,string)":{"details":"Deploys a contract using `CREATE2`. The address where the contract will be deployed can be known in advance via {computeAddress}. The bytecode for a contract can be obtained from Solidity with `type(contractName).creationCode`. Requirements: - `bytecode` must not be empty. - `salt` must have not been used for `bytecode` already. - the factory must have a balance of at least `amount`. - if `amount` is non-zero, `bytecode` must have a `payable` constructor."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608080604052346100165761039a908161001c8239f35b600080fdfe60406080815260048036101561001457600080fd5b600091823560e01c8063481286e614610263578063780653061461021357638f3b65931461004157600080fd5b608036600319011261020f5760443591803567ffffffffffffffff80851161020b573660238601121561020b576100826024953690878187013591016102d5565b95606435918211610208573660238301121561020857506100ab903690868186013591016102d5565b908047106101c657855115610184578573ffffffffffffffffffffffffffffffffffffffff916020975190888835930190f51693835161013b604382898101957f437265617465323a204661696c6564206465706c6f79696e6720636f6e747261875262031ba160ed1b8983015261012b815180928d8686019101610321565b810103602381018452018261029d565b851561014b575050505051908152f35b604495506101769293945196879562461bcd60e51b8752860152519283809286015285850190610321565b601f01601f19168101030190fd5b835162461bcd60e51b81526020818501819052818701527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606490fd5b835162461bcd60e51b8152602081850152601d818701527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152606490fd5b80fd5b8580fd5b8280fd5b508234610208576060366003190112610208576044359273ffffffffffffffffffffffffffffffffffffffff918285168503610208575060209361025b916024359035610344565b915191168152f35b5082346102085781600319360112610208575073ffffffffffffffffffffffffffffffffffffffff61025b60209330906024359035610344565b90601f8019910116810190811067ffffffffffffffff8211176102bf57604052565b634e487b7160e01b600052604160045260246000fd5b92919267ffffffffffffffff82116102bf57604051916102ff601f8201601f19166020018461029d565b82948184528183011161031c578281602093846000960137010152565b600080fd5b60005b8381106103345750506000910152565b8181015183820152602001610324565b90605592600b92604051926040840152602083015281520160ff8153209056fea26469706673582212203e9ebd472d474a3e57c32bd8cc6ebed414ad8ca9f6ba6797327bb73f4cbfae1364736f6c63430008120033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x39A SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x481286E6 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x78065306 EQ PUSH2 0x213 JUMPI PUSH4 0x8F3B6593 EQ PUSH2 0x41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20F JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP6 GT PUSH2 0x20B JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x20B JUMPI PUSH2 0x82 PUSH1 0x24 SWAP6 CALLDATASIZE SWAP1 DUP8 DUP2 DUP8 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x2D5 JUMP JUMPDEST SWAP6 PUSH1 0x64 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x208 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x208 JUMPI POP PUSH2 0xAB SWAP1 CALLDATASIZE SWAP1 DUP7 DUP2 DUP7 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x2D5 JUMP JUMPDEST SWAP1 DUP1 SELFBALANCE LT PUSH2 0x1C6 JUMPI DUP6 MLOAD ISZERO PUSH2 0x184 JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 PUSH1 0x20 SWAP8 MLOAD SWAP1 DUP9 DUP9 CALLDATALOAD SWAP4 ADD SWAP1 CREATE2 AND SWAP4 DUP4 MLOAD PUSH2 0x13B PUSH1 0x43 DUP3 DUP10 DUP2 ADD SWAP6 PUSH32 0x437265617465323A204661696C6564206465706C6F79696E6720636F6E747261 DUP8 MSTORE PUSH3 0x31BA1 PUSH1 0xED SHL DUP10 DUP4 ADD MSTORE PUSH2 0x12B DUP2 MLOAD DUP1 SWAP3 DUP14 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x321 JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x23 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0x29D JUMP JUMPDEST DUP6 ISZERO PUSH2 0x14B JUMPI POP POP POP POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x44 SWAP6 POP PUSH2 0x176 SWAP3 SWAP4 SWAP5 MLOAD SWAP7 DUP8 SWAP6 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP8 MSTORE DUP7 ADD MSTORE MLOAD SWAP3 DUP4 DUP1 SWAP3 DUP7 ADD MSTORE DUP6 DUP6 ADD SWAP1 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD DUP2 SWAP1 MSTORE DUP2 DUP8 ADD MSTORE PUSH32 0x437265617465323A2062797465636F6465206C656E677468206973207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x1D DUP2 DUP8 ADD MSTORE PUSH32 0x437265617465323A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x208 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x208 JUMPI PUSH1 0x44 CALLDATALOAD SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP6 AND DUP6 SUB PUSH2 0x208 JUMPI POP PUSH1 0x20 SWAP4 PUSH2 0x25B SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 CALLDATALOAD PUSH2 0x344 JUMP JUMPDEST SWAP2 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x208 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x208 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x25B PUSH1 0x20 SWAP4 ADDRESS SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 CALLDATALOAD PUSH2 0x344 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2BF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x2BF JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2FF PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x29D JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x31C JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x334 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x324 JUMP JUMPDEST SWAP1 PUSH1 0x55 SWAP3 PUSH1 0xB SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP4 ADD MSTORE DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY SWAP15 0xBD SELFBALANCE 0x2D SELFBALANCE 0x4A RETURNDATACOPY JUMPI 0xC3 0x2B 0xD8 0xCC PUSH15 0xBED414AD8CA9F6BA6797327BB73F4C 0xBF 0xAE SGT PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"254:3779:2:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_available_length_bytes":{"entryPoint":725,"id":null,"parameterSlots":3,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":801,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":669,"id":null,"parameterSlots":2,"returnSlots":0},"fun_computeAddress":{"entryPoint":836,"id":132,"parameterSlots":3,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60406080815260048036101561001457600080fd5b600091823560e01c8063481286e614610263578063780653061461021357638f3b65931461004157600080fd5b608036600319011261020f5760443591803567ffffffffffffffff80851161020b573660238601121561020b576100826024953690878187013591016102d5565b95606435918211610208573660238301121561020857506100ab903690868186013591016102d5565b908047106101c657855115610184578573ffffffffffffffffffffffffffffffffffffffff916020975190888835930190f51693835161013b604382898101957f437265617465323a204661696c6564206465706c6f79696e6720636f6e747261875262031ba160ed1b8983015261012b815180928d8686019101610321565b810103602381018452018261029d565b851561014b575050505051908152f35b604495506101769293945196879562461bcd60e51b8752860152519283809286015285850190610321565b601f01601f19168101030190fd5b835162461bcd60e51b81526020818501819052818701527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606490fd5b835162461bcd60e51b8152602081850152601d818701527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152606490fd5b80fd5b8580fd5b8280fd5b508234610208576060366003190112610208576044359273ffffffffffffffffffffffffffffffffffffffff918285168503610208575060209361025b916024359035610344565b915191168152f35b5082346102085781600319360112610208575073ffffffffffffffffffffffffffffffffffffffff61025b60209330906024359035610344565b90601f8019910116810190811067ffffffffffffffff8211176102bf57604052565b634e487b7160e01b600052604160045260246000fd5b92919267ffffffffffffffff82116102bf57604051916102ff601f8201601f19166020018461029d565b82948184528183011161031c578281602093846000960137010152565b600080fd5b60005b8381106103345750506000910152565b8181015183820152602001610324565b90605592600b92604051926040840152602083015281520160ff8153209056fea26469706673582212203e9ebd472d474a3e57c32bd8cc6ebed414ad8ca9f6ba6797327bb73f4cbfae1364736f6c63430008120033","opcodes":"PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x481286E6 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x78065306 EQ PUSH2 0x213 JUMPI PUSH4 0x8F3B6593 EQ PUSH2 0x41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20F JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP6 GT PUSH2 0x20B JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x20B JUMPI PUSH2 0x82 PUSH1 0x24 SWAP6 CALLDATASIZE SWAP1 DUP8 DUP2 DUP8 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x2D5 JUMP JUMPDEST SWAP6 PUSH1 0x64 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x208 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x208 JUMPI POP PUSH2 0xAB SWAP1 CALLDATASIZE SWAP1 DUP7 DUP2 DUP7 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x2D5 JUMP JUMPDEST SWAP1 DUP1 SELFBALANCE LT PUSH2 0x1C6 JUMPI DUP6 MLOAD ISZERO PUSH2 0x184 JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 PUSH1 0x20 SWAP8 MLOAD SWAP1 DUP9 DUP9 CALLDATALOAD SWAP4 ADD SWAP1 CREATE2 AND SWAP4 DUP4 MLOAD PUSH2 0x13B PUSH1 0x43 DUP3 DUP10 DUP2 ADD SWAP6 PUSH32 0x437265617465323A204661696C6564206465706C6F79696E6720636F6E747261 DUP8 MSTORE PUSH3 0x31BA1 PUSH1 0xED SHL DUP10 DUP4 ADD MSTORE PUSH2 0x12B DUP2 MLOAD DUP1 SWAP3 DUP14 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x321 JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x23 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0x29D JUMP JUMPDEST DUP6 ISZERO PUSH2 0x14B JUMPI POP POP POP POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x44 SWAP6 POP PUSH2 0x176 SWAP3 SWAP4 SWAP5 MLOAD SWAP7 DUP8 SWAP6 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP8 MSTORE DUP7 ADD MSTORE MLOAD SWAP3 DUP4 DUP1 SWAP3 DUP7 ADD MSTORE DUP6 DUP6 ADD SWAP1 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD DUP2 SWAP1 MSTORE DUP2 DUP8 ADD MSTORE PUSH32 0x437265617465323A2062797465636F6465206C656E677468206973207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x1D DUP2 DUP8 ADD MSTORE PUSH32 0x437265617465323A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x208 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x208 JUMPI PUSH1 0x44 CALLDATALOAD SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP6 AND DUP6 SUB PUSH2 0x208 JUMPI POP PUSH1 0x20 SWAP4 PUSH2 0x25B SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 CALLDATALOAD PUSH2 0x344 JUMP JUMPDEST SWAP2 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x208 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x208 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x25B PUSH1 0x20 SWAP4 ADDRESS SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 CALLDATALOAD PUSH2 0x344 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2BF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x2BF JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2FF PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x29D JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x31C JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x334 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x324 JUMP JUMPDEST SWAP1 PUSH1 0x55 SWAP3 PUSH1 0xB SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP4 ADD MSTORE DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY SWAP15 0xBD SELFBALANCE 0x2D SELFBALANCE 0x4A RETURNDATACOPY JUMPI 0xC3 0x2B 0xD8 0xCC PUSH15 0xBED414AD8CA9F6BA6797327BB73F4C 0xBF 0xAE SGT PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"254:3779:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;254:3779:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1082:21;;;:31;254:3779;;;;1189:20;254:3779;;1301:102;254:3779;1301:102;254:3779;1301:102;;254:3779;;;;1301:102;;;;254:3779;;;;;;;;;;;;;;-1:-1:-1;;;254:3779:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1435:18;;254:3779;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;254:3779:2;;;;;;;;;;-1:-1:-1;;;254:3779:2;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;254:3779:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;254:3779:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1941:4;254:3779;1898:49;254:3779;1941:4;;254:3779;;;;;1898:49;:::i;254:3779::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;254:3779:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;254:3779:2;;;;;;:::o;:::-;-1:-1:-1;254:3779:2;;;;;;;;;;-1:-1:-1;;254:3779:2;;;;:::o;:::-;;;;;;;;;;;;;2204:1826;;2406:1617;2204:1826;2406:1617;2204:1826;2406:1617;;;;;;;;;;;;;;;;;;2204:1826;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"184400","executionCost":"233","totalCost":"184633"},"external":{"computeAddress(bytes32,bytes32)":"infinite","computeAddress(bytes32,bytes32,address)":"infinite","deploy(uint256,bytes32,bytes,string)":"infinite"}},"methodIdentifiers":{"computeAddress(bytes32,bytes32)":"481286e6","computeAddress(bytes32,bytes32,address)":"78065306","deploy(uint256,bytes32,bytes,string)":"8f3b6593"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bytecodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bytecodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Create2.sol\",\"kind\":\"dev\",\"methods\":{\"computeAddress(bytes32,bytes32)\":{\"details\":\"Returns the address where a contract will be stored if deployed via {deploy}. Any change in the `bytecodeHash` or `salt` will result in a new destination address.\"},\"computeAddress(bytes32,bytes32,address)\":{\"details\":\"Returns the address where a contract will be stored if deployed via {deploy} from a contract located at `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\"},\"deploy(uint256,bytes32,bytes,string)\":{\"details\":\"Deploys a contract using `CREATE2`. The address where the contract will be deployed can be known in advance via {computeAddress}. The bytecode for a contract can be obtained from Solidity with `type(contractName).creationCode`. Requirements: - `bytecode` must not be empty. - `salt` must have not been used for `bytecode` already. - the factory must have a balance of at least `amount`. - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TapiocaDeployerMock.sol\":\"TapiocaDeployerMock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":700},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/TapiocaDeployerMock.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\n// TODO - Write deployment bytecode instead of Solidity compilation output\\r\\n\\r\\n/// @author https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Create2.sol\\r\\ncontract TapiocaDeployerMock {\\r\\n    /**\\r\\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\\r\\n     * will be deployed can be known in advance via {computeAddress}.\\r\\n     *\\r\\n     * The bytecode for a contract can be obtained from Solidity with\\r\\n     * `type(contractName).creationCode`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `bytecode` must not be empty.\\r\\n     * - `salt` must have not been used for `bytecode` already.\\r\\n     * - the factory must have a balance of at least `amount`.\\r\\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\\r\\n     */\\r\\n    function deploy(\\r\\n        uint256 amount,\\r\\n        bytes32 salt,\\r\\n        bytes memory bytecode,\\r\\n        string memory contractName\\r\\n    ) external payable returns (address addr) {\\r\\n        require(\\r\\n            address(this).balance >= amount,\\r\\n            \\\"Create2: insufficient balance\\\"\\r\\n        );\\r\\n        require(bytecode.length != 0, \\\"Create2: bytecode length is zero\\\");\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\\r\\n        }\\r\\n        require(\\r\\n            addr != address(0),\\r\\n            string.concat(\\\"Create2: Failed deploying contract \\\", contractName)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\\r\\n     * `bytecodeHash` or `salt` will result in a new destination address.\\r\\n     */\\r\\n    function computeAddress(\\r\\n        bytes32 salt,\\r\\n        bytes32 bytecodeHash\\r\\n    ) external view returns (address) {\\r\\n        return computeAddress(salt, bytecodeHash, address(this));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\\r\\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\\r\\n     */\\r\\n    function computeAddress(\\r\\n        bytes32 salt,\\r\\n        bytes32 bytecodeHash,\\r\\n        address deployer\\r\\n    ) public pure returns (address addr) {\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            let ptr := mload(0x40) // Get free memory pointer\\r\\n\\r\\n            // |                   | \\u2193 ptr ...  \\u2193 ptr + 0x0B (start) ...  \\u2193 ptr + 0x20 ...  \\u2193 ptr + 0x40 ...   |\\r\\n            // |-------------------|---------------------------------------------------------------------------|\\r\\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\\r\\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\\r\\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\\r\\n            // | 0xFF              |            FF                                                             |\\r\\n            // |-------------------|---------------------------------------------------------------------------|\\r\\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\\r\\n            // | keccak(start, 85) |            \\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191 |\\r\\n\\r\\n            mstore(add(ptr, 0x40), bytecodeHash)\\r\\n            mstore(add(ptr, 0x20), salt)\\r\\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\\r\\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\\r\\n            mstore8(start, 0xff)\\r\\n            addr := keccak256(start, 85)\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe8befc3ff71b8dedc60d92ed5afa77dd89e2d91de406ddef433b5a160be3c778\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}